
exp1_HMI_SIM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001ba  00800100  000029dc  00002a70  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000029dc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000682  008002ba  008002ba  00002c2a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002c2a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002c88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00002cc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000102  00000000  00000000  00002d44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001d22  00000000  00000000  00002e46  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000be7  00000000  00000000  00004b68  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000ca4  00000000  00000000  0000574f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000046c  00000000  00000000  000063f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000778  00000000  00000000  00006860  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001796  00000000  00000000  00006fd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000140  00000000  00000000  0000876e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	ed c0       	rjmp	.+474    	; 0x1dc <__ctors_end>
       2:	00 00       	nop
       4:	09 c1       	rjmp	.+530    	; 0x218 <__bad_interrupt>
       6:	00 00       	nop
       8:	07 c1       	rjmp	.+526    	; 0x218 <__bad_interrupt>
       a:	00 00       	nop
       c:	05 c1       	rjmp	.+522    	; 0x218 <__bad_interrupt>
       e:	00 00       	nop
      10:	03 c1       	rjmp	.+518    	; 0x218 <__bad_interrupt>
      12:	00 00       	nop
      14:	01 c1       	rjmp	.+514    	; 0x218 <__bad_interrupt>
      16:	00 00       	nop
      18:	ff c0       	rjmp	.+510    	; 0x218 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	fd c0       	rjmp	.+506    	; 0x218 <__bad_interrupt>
      1e:	00 00       	nop
      20:	fb c0       	rjmp	.+502    	; 0x218 <__bad_interrupt>
      22:	00 00       	nop
      24:	f9 c0       	rjmp	.+498    	; 0x218 <__bad_interrupt>
      26:	00 00       	nop
      28:	f7 c0       	rjmp	.+494    	; 0x218 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	f5 c0       	rjmp	.+490    	; 0x218 <__bad_interrupt>
      2e:	00 00       	nop
      30:	f3 c0       	rjmp	.+486    	; 0x218 <__bad_interrupt>
      32:	00 00       	nop
      34:	f1 c0       	rjmp	.+482    	; 0x218 <__bad_interrupt>
      36:	00 00       	nop
      38:	ef c0       	rjmp	.+478    	; 0x218 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	ed c0       	rjmp	.+474    	; 0x218 <__bad_interrupt>
      3e:	00 00       	nop
      40:	eb c0       	rjmp	.+470    	; 0x218 <__bad_interrupt>
      42:	00 00       	nop
      44:	e9 c0       	rjmp	.+466    	; 0x218 <__bad_interrupt>
      46:	00 00       	nop
      48:	e7 c0       	rjmp	.+462    	; 0x218 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	e5 c0       	rjmp	.+458    	; 0x218 <__bad_interrupt>
      4e:	00 00       	nop
      50:	e3 c0       	rjmp	.+454    	; 0x218 <__bad_interrupt>
      52:	00 00       	nop
      54:	e1 c0       	rjmp	.+450    	; 0x218 <__bad_interrupt>
      56:	00 00       	nop
      58:	df c0       	rjmp	.+446    	; 0x218 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	dd c0       	rjmp	.+442    	; 0x218 <__bad_interrupt>
      5e:	00 00       	nop
      60:	db c0       	rjmp	.+438    	; 0x218 <__bad_interrupt>
      62:	00 00       	nop
      64:	d9 c0       	rjmp	.+434    	; 0x218 <__bad_interrupt>
      66:	00 00       	nop
      68:	d7 c0       	rjmp	.+430    	; 0x218 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	d5 c0       	rjmp	.+426    	; 0x218 <__bad_interrupt>
      6e:	00 00       	nop
      70:	d3 c0       	rjmp	.+422    	; 0x218 <__bad_interrupt>
      72:	00 00       	nop
      74:	d1 c0       	rjmp	.+418    	; 0x218 <__bad_interrupt>
      76:	00 00       	nop
      78:	cf c0       	rjmp	.+414    	; 0x218 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	cd c0       	rjmp	.+410    	; 0x218 <__bad_interrupt>
      7e:	00 00       	nop
      80:	cb c0       	rjmp	.+406    	; 0x218 <__bad_interrupt>
      82:	00 00       	nop
      84:	c9 c0       	rjmp	.+402    	; 0x218 <__bad_interrupt>
      86:	00 00       	nop
      88:	c7 c0       	rjmp	.+398    	; 0x218 <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	6e 61       	ori	r22, 0x1E	; 30
      8e:	6e 00       	.word	0x006e	; ????

00000090 <__c.2332>:
      90:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     100:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     110:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     120:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     130:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     140:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     150:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     160:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     170:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     180:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000018e <__c.2529>:
     18e:	63 64 69 6e 6f 70 73 75 78 58 5b 65 66 67 45 46     cdinopsuxX[efgEF
     19e:	47 00                                               G.

000001a0 <pstr_an>:
     1a0:	61 6e 00                                            an.

000001a3 <pstr_nfinity>:
     1a3:	6e 66 69 6e 69 74 79 00                             nfinity.

000001ab <pwr_m10>:
     1ab:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     1bb:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

000001c3 <pwr_p10>:
     1c3:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     1d3:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

000001dc <__ctors_end>:
     1dc:	11 24       	eor	r1, r1
     1de:	1f be       	out	0x3f, r1	; 63
     1e0:	cf ef       	ldi	r28, 0xFF	; 255
     1e2:	d0 e1       	ldi	r29, 0x10	; 16
     1e4:	de bf       	out	0x3e, r29	; 62
     1e6:	cd bf       	out	0x3d, r28	; 61

000001e8 <__do_copy_data>:
     1e8:	12 e0       	ldi	r17, 0x02	; 2
     1ea:	a0 e0       	ldi	r26, 0x00	; 0
     1ec:	b1 e0       	ldi	r27, 0x01	; 1
     1ee:	ec ed       	ldi	r30, 0xDC	; 220
     1f0:	f9 e2       	ldi	r31, 0x29	; 41
     1f2:	00 e0       	ldi	r16, 0x00	; 0
     1f4:	0b bf       	out	0x3b, r16	; 59
     1f6:	02 c0       	rjmp	.+4      	; 0x1fc <__do_copy_data+0x14>
     1f8:	07 90       	elpm	r0, Z+
     1fa:	0d 92       	st	X+, r0
     1fc:	aa 3b       	cpi	r26, 0xBA	; 186
     1fe:	b1 07       	cpc	r27, r17
     200:	d9 f7       	brne	.-10     	; 0x1f8 <__do_copy_data+0x10>

00000202 <__do_clear_bss>:
     202:	29 e0       	ldi	r18, 0x09	; 9
     204:	aa eb       	ldi	r26, 0xBA	; 186
     206:	b2 e0       	ldi	r27, 0x02	; 2
     208:	01 c0       	rjmp	.+2      	; 0x20c <.do_clear_bss_start>

0000020a <.do_clear_bss_loop>:
     20a:	1d 92       	st	X+, r1

0000020c <.do_clear_bss_start>:
     20c:	ac 33       	cpi	r26, 0x3C	; 60
     20e:	b2 07       	cpc	r27, r18
     210:	e1 f7       	brne	.-8      	; 0x20a <.do_clear_bss_loop>
     212:	09 d7       	rcall	.+3602   	; 0x1026 <main>
     214:	0c 94 ec 14 	jmp	0x29d8	; 0x29d8 <_exit>

00000218 <__bad_interrupt>:
     218:	f3 ce       	rjmp	.-538    	; 0x0 <__vectors>

0000021a <uart_put>:
     21a:	5d 9b       	sbis	0x0b, 5	; 11
     21c:	fe cf       	rjmp	.-4      	; 0x21a <uart_put>
     21e:	8c b9       	out	0x0c, r24	; 12
     220:	08 95       	ret

00000222 <uart_get>:
     222:	5f 9b       	sbis	0x0b, 7	; 11
     224:	fe cf       	rjmp	.-4      	; 0x222 <uart_get>
     226:	8c b1       	in	r24, 0x0c	; 12
     228:	08 95       	ret

0000022a <M128_HMI_set>:
     22a:	88 3c       	cpi	r24, 0xC8	; 200
     22c:	91 f4       	brne	.+36     	; 0x252 <M128_HMI_set+0x28>
     22e:	6f 3f       	cpi	r22, 0xFF	; 255
     230:	81 f4       	brne	.+32     	; 0x252 <M128_HMI_set+0x28>
     232:	44 23       	and	r20, r20
     234:	71 f4       	brne	.+28     	; 0x252 <M128_HMI_set+0x28>
     236:	82 2f       	mov	r24, r18
     238:	90 e0       	ldi	r25, 0x00	; 0
     23a:	a0 e0       	ldi	r26, 0x00	; 0
     23c:	b0 e0       	ldi	r27, 0x00	; 0
     23e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Timeout>
     242:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <Timeout+0x1>
     246:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <Timeout+0x2>
     24a:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <Timeout+0x3>
     24e:	80 e0       	ldi	r24, 0x00	; 0
     250:	08 95       	ret
     252:	81 e0       	ldi	r24, 0x01	; 1
     254:	08 95       	ret

00000256 <HMI_timeout_set>:
     256:	9c 01       	movw	r18, r24
     258:	c2 97       	sbiw	r24, 0x32	; 50
     25a:	8f 5f       	subi	r24, 0xFF	; 255
     25c:	94 47       	sbci	r25, 0x74	; 116
     25e:	10 f0       	brcs	.+4      	; 0x264 <HMI_timeout_set+0xe>
     260:	81 e0       	ldi	r24, 0x01	; 1
     262:	08 95       	ret
     264:	89 e9       	ldi	r24, 0x99	; 153
     266:	93 e0       	ldi	r25, 0x03	; 3
     268:	ac 01       	movw	r20, r24
     26a:	24 9f       	mul	r18, r20
     26c:	c0 01       	movw	r24, r0
     26e:	25 9f       	mul	r18, r21
     270:	90 0d       	add	r25, r0
     272:	34 9f       	mul	r19, r20
     274:	90 0d       	add	r25, r0
     276:	11 24       	eor	r1, r1
     278:	aa 27       	eor	r26, r26
     27a:	97 fd       	sbrc	r25, 7
     27c:	a0 95       	com	r26
     27e:	ba 2f       	mov	r27, r26
     280:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Timeout>
     284:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <Timeout+0x1>
     288:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <Timeout+0x2>
     28c:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <Timeout+0x3>
     290:	80 e0       	ldi	r24, 0x00	; 0
     292:	08 95       	ret

00000294 <M128_HMI_put>:
     294:	dc 01       	movw	r26, r24
     296:	5d 9b       	sbis	0x0b, 5	; 11
     298:	fe cf       	rjmp	.-4      	; 0x296 <M128_HMI_put+0x2>
     29a:	8a ea       	ldi	r24, 0xAA	; 170
     29c:	8c b9       	out	0x0c, r24	; 12
     29e:	5d 9b       	sbis	0x0b, 5	; 11
     2a0:	fe cf       	rjmp	.-4      	; 0x29e <M128_HMI_put+0xa>
     2a2:	8a ea       	ldi	r24, 0xAA	; 170
     2a4:	8c b9       	out	0x0c, r24	; 12
     2a6:	5d 9b       	sbis	0x0b, 5	; 11
     2a8:	fe cf       	rjmp	.-4      	; 0x2a6 <M128_HMI_put+0x12>
     2aa:	8a ea       	ldi	r24, 0xAA	; 170
     2ac:	8c b9       	out	0x0c, r24	; 12
     2ae:	5d 9b       	sbis	0x0b, 5	; 11
     2b0:	fe cf       	rjmp	.-4      	; 0x2ae <M128_HMI_put+0x1a>
     2b2:	6c b9       	out	0x0c, r22	; 12
     2b4:	8b 2f       	mov	r24, r27
     2b6:	99 27       	eor	r25, r25
     2b8:	87 fd       	sbrc	r24, 7
     2ba:	9a 95       	dec	r25
     2bc:	98 2f       	mov	r25, r24
     2be:	5d 9b       	sbis	0x0b, 5	; 11
     2c0:	fe cf       	rjmp	.-4      	; 0x2be <M128_HMI_put+0x2a>
     2c2:	9c b9       	out	0x0c, r25	; 12
     2c4:	8a 2f       	mov	r24, r26
     2c6:	5d 9b       	sbis	0x0b, 5	; 11
     2c8:	fe cf       	rjmp	.-4      	; 0x2c6 <M128_HMI_put+0x32>
     2ca:	8c b9       	out	0x0c, r24	; 12
     2cc:	89 0f       	add	r24, r25
     2ce:	20 e0       	ldi	r18, 0x00	; 0
     2d0:	30 e0       	ldi	r19, 0x00	; 0
     2d2:	0a c0       	rjmp	.+20     	; 0x2e8 <M128_HMI_put+0x54>
     2d4:	fa 01       	movw	r30, r20
     2d6:	e2 0f       	add	r30, r18
     2d8:	f3 1f       	adc	r31, r19
     2da:	e0 81       	ld	r30, Z
     2dc:	5d 9b       	sbis	0x0b, 5	; 11
     2de:	fe cf       	rjmp	.-4      	; 0x2dc <M128_HMI_put+0x48>
     2e0:	ec b9       	out	0x0c, r30	; 12
     2e2:	8e 0f       	add	r24, r30
     2e4:	2f 5f       	subi	r18, 0xFF	; 255
     2e6:	3f 4f       	sbci	r19, 0xFF	; 255
     2e8:	2a 17       	cp	r18, r26
     2ea:	3b 07       	cpc	r19, r27
     2ec:	98 f3       	brcs	.-26     	; 0x2d4 <M128_HMI_put+0x40>
     2ee:	5d 9b       	sbis	0x0b, 5	; 11
     2f0:	fe cf       	rjmp	.-4      	; 0x2ee <M128_HMI_put+0x5a>
     2f2:	8c b9       	out	0x0c, r24	; 12
     2f4:	80 e0       	ldi	r24, 0x00	; 0
     2f6:	08 95       	ret

000002f8 <M128_HMI_get>:
     2f8:	cf 93       	push	r28
     2fa:	df 93       	push	r29
     2fc:	ec 01       	movw	r28, r24
     2fe:	5f 9b       	sbis	0x0b, 7	; 11
     300:	fe cf       	rjmp	.-4      	; 0x2fe <M128_HMI_get+0x6>
     302:	8c b1       	in	r24, 0x0c	; 12
     304:	8b 3a       	cpi	r24, 0xAB	; 171
     306:	c1 f5       	brne	.+112    	; 0x378 <M128_HMI_get+0x80>
     308:	5f 9b       	sbis	0x0b, 7	; 11
     30a:	fe cf       	rjmp	.-4      	; 0x308 <M128_HMI_get+0x10>
     30c:	8c b1       	in	r24, 0x0c	; 12
     30e:	8b 3a       	cpi	r24, 0xAB	; 171
     310:	99 f5       	brne	.+102    	; 0x378 <M128_HMI_get+0x80>
     312:	5f 9b       	sbis	0x0b, 7	; 11
     314:	fe cf       	rjmp	.-4      	; 0x312 <M128_HMI_get+0x1a>
     316:	8c b1       	in	r24, 0x0c	; 12
     318:	8b 3a       	cpi	r24, 0xAB	; 171
     31a:	71 f5       	brne	.+92     	; 0x378 <M128_HMI_get+0x80>
     31c:	5f 9b       	sbis	0x0b, 7	; 11
     31e:	fe cf       	rjmp	.-4      	; 0x31c <M128_HMI_get+0x24>
     320:	8c b1       	in	r24, 0x0c	; 12
     322:	5f 9b       	sbis	0x0b, 7	; 11
     324:	fe cf       	rjmp	.-4      	; 0x322 <M128_HMI_get+0x2a>
     326:	3c b1       	in	r19, 0x0c	; 12
     328:	5f 9b       	sbis	0x0b, 7	; 11
     32a:	fe cf       	rjmp	.-4      	; 0x328 <M128_HMI_get+0x30>
     32c:	2c b1       	in	r18, 0x0c	; 12
     32e:	a2 2f       	mov	r26, r18
     330:	a3 0f       	add	r26, r19
     332:	40 e0       	ldi	r20, 0x00	; 0
     334:	50 e0       	ldi	r21, 0x00	; 0
     336:	0a c0       	rjmp	.+20     	; 0x34c <M128_HMI_get+0x54>
     338:	5f 9b       	sbis	0x0b, 7	; 11
     33a:	fe cf       	rjmp	.-4      	; 0x338 <M128_HMI_get+0x40>
     33c:	8c b1       	in	r24, 0x0c	; 12
     33e:	fb 01       	movw	r30, r22
     340:	e4 0f       	add	r30, r20
     342:	f5 1f       	adc	r31, r21
     344:	80 83       	st	Z, r24
     346:	a8 0f       	add	r26, r24
     348:	4f 5f       	subi	r20, 0xFF	; 255
     34a:	5f 4f       	sbci	r21, 0xFF	; 255
     34c:	4c 17       	cp	r20, r28
     34e:	5d 07       	cpc	r21, r29
     350:	9c f3       	brlt	.-26     	; 0x338 <M128_HMI_get+0x40>
     352:	5f 9b       	sbis	0x0b, 7	; 11
     354:	fe cf       	rjmp	.-4      	; 0x352 <M128_HMI_get+0x5a>
     356:	4c b1       	in	r20, 0x0c	; 12
     358:	93 2f       	mov	r25, r19
     35a:	80 e0       	ldi	r24, 0x00	; 0
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	82 2b       	or	r24, r18
     360:	93 2b       	or	r25, r19
     362:	8c 17       	cp	r24, r28
     364:	9d 07       	cpc	r25, r29
     366:	11 f0       	breq	.+4      	; 0x36c <M128_HMI_get+0x74>
     368:	83 e0       	ldi	r24, 0x03	; 3
     36a:	07 c0       	rjmp	.+14     	; 0x37a <M128_HMI_get+0x82>
     36c:	4a 17       	cp	r20, r26
     36e:	11 f4       	brne	.+4      	; 0x374 <M128_HMI_get+0x7c>
     370:	80 e0       	ldi	r24, 0x00	; 0
     372:	03 c0       	rjmp	.+6      	; 0x37a <M128_HMI_get+0x82>
     374:	84 e0       	ldi	r24, 0x04	; 4
     376:	01 c0       	rjmp	.+2      	; 0x37a <M128_HMI_get+0x82>
     378:	82 e0       	ldi	r24, 0x02	; 2
     37a:	df 91       	pop	r29
     37c:	cf 91       	pop	r28
     37e:	08 95       	ret

00000380 <stdio_putchar>:
     380:	1f 93       	push	r17
     382:	18 2f       	mov	r17, r24
     384:	8a 30       	cpi	r24, 0x0A	; 10
     386:	11 f4       	brne	.+4      	; 0x38c <stdio_putchar+0xc>
     388:	8d e0       	ldi	r24, 0x0D	; 13
     38a:	fa df       	rcall	.-12     	; 0x380 <stdio_putchar>
     38c:	5d 9b       	sbis	0x0b, 5	; 11
     38e:	fe cf       	rjmp	.-4      	; 0x38c <stdio_putchar+0xc>
     390:	1c b9       	out	0x0c, r17	; 12
     392:	80 e0       	ldi	r24, 0x00	; 0
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	1f 91       	pop	r17
     398:	08 95       	ret

0000039a <stdio_getchar>:
     39a:	1f 93       	push	r17
     39c:	bc 01       	movw	r22, r24
     39e:	5f 9b       	sbis	0x0b, 7	; 11
     3a0:	fe cf       	rjmp	.-4      	; 0x39e <stdio_getchar+0x4>
     3a2:	1c b1       	in	r17, 0x0c	; 12
     3a4:	81 2f       	mov	r24, r17
     3a6:	ec df       	rcall	.-40     	; 0x380 <stdio_putchar>
     3a8:	81 2f       	mov	r24, r17
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	1f 91       	pop	r17
     3ae:	08 95       	ret

000003b0 <ASA_M128_set>:
     3b0:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     3b4:	81 e1       	ldi	r24, 0x11	; 17
     3b6:	89 b9       	out	0x09, r24	; 9
     3b8:	8a b1       	in	r24, 0x0a	; 10
     3ba:	88 61       	ori	r24, 0x18	; 24
     3bc:	8a b9       	out	0x0a, r24	; 10
     3be:	e5 e9       	ldi	r30, 0x95	; 149
     3c0:	f0 e0       	ldi	r31, 0x00	; 0
     3c2:	80 81       	ld	r24, Z
     3c4:	86 60       	ori	r24, 0x06	; 6
     3c6:	80 83       	st	Z, r24
     3c8:	85 e0       	ldi	r24, 0x05	; 5
     3ca:	91 e0       	ldi	r25, 0x01	; 1
     3cc:	90 93 39 09 	sts	0x0939, r25	; 0x800939 <__iob+0x3>
     3d0:	80 93 38 09 	sts	0x0938, r24	; 0x800938 <__iob+0x2>
     3d4:	90 93 37 09 	sts	0x0937, r25	; 0x800937 <__iob+0x1>
     3d8:	80 93 36 09 	sts	0x0936, r24	; 0x800936 <__iob>
     3dc:	80 e0       	ldi	r24, 0x00	; 0
     3de:	08 95       	ret

000003e0 <M128_HMI_Form_get>:
     3e0:	ef 92       	push	r14
     3e2:	ff 92       	push	r15
     3e4:	0f 93       	push	r16
     3e6:	1f 93       	push	r17
     3e8:	cf 93       	push	r28
     3ea:	df 93       	push	r29
     3ec:	ec 01       	movw	r28, r24
     3ee:	8a 01       	movw	r16, r20
     3f0:	5f 9b       	sbis	0x0b, 7	; 11
     3f2:	fe cf       	rjmp	.-4      	; 0x3f0 <M128_HMI_Form_get+0x10>
     3f4:	8c b1       	in	r24, 0x0c	; 12
     3f6:	8b 3a       	cpi	r24, 0xAB	; 171
     3f8:	09 f0       	breq	.+2      	; 0x3fc <M128_HMI_Form_get+0x1c>
     3fa:	50 c0       	rjmp	.+160    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
     3fc:	5f 9b       	sbis	0x0b, 7	; 11
     3fe:	fe cf       	rjmp	.-4      	; 0x3fc <M128_HMI_Form_get+0x1c>
     400:	8c b1       	in	r24, 0x0c	; 12
     402:	8b 3a       	cpi	r24, 0xAB	; 171
     404:	09 f0       	breq	.+2      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     406:	4a c0       	rjmp	.+148    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
     408:	5f 9b       	sbis	0x0b, 7	; 11
     40a:	fe cf       	rjmp	.-4      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     40c:	8c b1       	in	r24, 0x0c	; 12
     40e:	8b 3a       	cpi	r24, 0xAB	; 171
     410:	09 f0       	breq	.+2      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
     412:	44 c0       	rjmp	.+136    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
     414:	5f 9b       	sbis	0x0b, 7	; 11
     416:	fe cf       	rjmp	.-4      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
     418:	ec b0       	in	r14, 0x0c	; 12
     41a:	5f 9b       	sbis	0x0b, 7	; 11
     41c:	fe cf       	rjmp	.-4      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     41e:	5c b1       	in	r21, 0x0c	; 12
     420:	5f 9b       	sbis	0x0b, 7	; 11
     422:	fe cf       	rjmp	.-4      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     424:	fc b0       	in	r15, 0x0c	; 12
     426:	de 01       	movw	r26, r28
     428:	0d 90       	ld	r0, X+
     42a:	00 20       	and	r0, r0
     42c:	e9 f7       	brne	.-6      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     42e:	11 97       	sbiw	r26, 0x01	; 1
     430:	ac 1b       	sub	r26, r28
     432:	bd 0b       	sbc	r27, r29
     434:	4f 2d       	mov	r20, r15
     436:	20 e0       	ldi	r18, 0x00	; 0
     438:	30 e0       	ldi	r19, 0x00	; 0
     43a:	0a c0       	rjmp	.+20     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     43c:	5f 9b       	sbis	0x0b, 7	; 11
     43e:	fe cf       	rjmp	.-4      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     440:	8c b1       	in	r24, 0x0c	; 12
     442:	fe 01       	movw	r30, r28
     444:	e2 0f       	add	r30, r18
     446:	f3 1f       	adc	r31, r19
     448:	80 83       	st	Z, r24
     44a:	48 0f       	add	r20, r24
     44c:	2f 5f       	subi	r18, 0xFF	; 255
     44e:	3f 4f       	sbci	r19, 0xFF	; 255
     450:	2a 17       	cp	r18, r26
     452:	3b 07       	cpc	r19, r27
     454:	9c f3       	brlt	.-26     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     456:	20 e0       	ldi	r18, 0x00	; 0
     458:	30 e0       	ldi	r19, 0x00	; 0
     45a:	0a c0       	rjmp	.+20     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
     45c:	5f 9b       	sbis	0x0b, 7	; 11
     45e:	fe cf       	rjmp	.-4      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
     460:	8c b1       	in	r24, 0x0c	; 12
     462:	f8 01       	movw	r30, r16
     464:	e2 0f       	add	r30, r18
     466:	f3 1f       	adc	r31, r19
     468:	80 83       	st	Z, r24
     46a:	48 0f       	add	r20, r24
     46c:	2f 5f       	subi	r18, 0xFF	; 255
     46e:	3f 4f       	sbci	r19, 0xFF	; 255
     470:	26 17       	cp	r18, r22
     472:	37 07       	cpc	r19, r23
     474:	9c f3       	brlt	.-26     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
     476:	5f 9b       	sbis	0x0b, 7	; 11
     478:	fe cf       	rjmp	.-4      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     47a:	2c b1       	in	r18, 0x0c	; 12
     47c:	80 e0       	ldi	r24, 0x00	; 0
     47e:	58 2b       	or	r21, r24
     480:	5f 19       	sub	r21, r15
     482:	85 2f       	mov	r24, r21
     484:	90 e0       	ldi	r25, 0x00	; 0
     486:	86 17       	cp	r24, r22
     488:	97 07       	cpc	r25, r23
     48a:	11 f0       	breq	.+4      	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     48c:	83 e0       	ldi	r24, 0x03	; 3
     48e:	07 c0       	rjmp	.+14     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
     490:	24 17       	cp	r18, r20
     492:	11 f4       	brne	.+4      	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
     494:	80 e0       	ldi	r24, 0x00	; 0
     496:	03 c0       	rjmp	.+6      	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
     498:	84 e0       	ldi	r24, 0x04	; 4
     49a:	01 c0       	rjmp	.+2      	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
     49c:	82 e0       	ldi	r24, 0x02	; 2
     49e:	df 91       	pop	r29
     4a0:	cf 91       	pop	r28
     4a2:	1f 91       	pop	r17
     4a4:	0f 91       	pop	r16
     4a6:	ff 90       	pop	r15
     4a8:	ef 90       	pop	r14
     4aa:	08 95       	ret

000004ac <M128_HMI_Form_put>:
     4ac:	cf 93       	push	r28
     4ae:	df 93       	push	r29
     4b0:	ec 01       	movw	r28, r24
     4b2:	5d 9b       	sbis	0x0b, 5	; 11
     4b4:	fe cf       	rjmp	.-4      	; 0x4b2 <M128_HMI_Form_put+0x6>
     4b6:	8b eb       	ldi	r24, 0xBB	; 187
     4b8:	8c b9       	out	0x0c, r24	; 12
     4ba:	5d 9b       	sbis	0x0b, 5	; 11
     4bc:	fe cf       	rjmp	.-4      	; 0x4ba <M128_HMI_Form_put+0xe>
     4be:	8b eb       	ldi	r24, 0xBB	; 187
     4c0:	8c b9       	out	0x0c, r24	; 12
     4c2:	5d 9b       	sbis	0x0b, 5	; 11
     4c4:	fe cf       	rjmp	.-4      	; 0x4c2 <M128_HMI_Form_put+0x16>
     4c6:	8b eb       	ldi	r24, 0xBB	; 187
     4c8:	8c b9       	out	0x0c, r24	; 12
     4ca:	de 01       	movw	r26, r28
     4cc:	0d 90       	ld	r0, X+
     4ce:	00 20       	and	r0, r0
     4d0:	e9 f7       	brne	.-6      	; 0x4cc <M128_HMI_Form_put+0x20>
     4d2:	11 97       	sbiw	r26, 0x01	; 1
     4d4:	ac 1b       	sub	r26, r28
     4d6:	bd 0b       	sbc	r27, r29
     4d8:	af 3f       	cpi	r26, 0xFF	; 255
     4da:	b1 05       	cpc	r27, r1
     4dc:	10 f0       	brcs	.+4      	; 0x4e2 <M128_HMI_Form_put+0x36>
     4de:	81 e0       	ldi	r24, 0x01	; 1
     4e0:	38 c0       	rjmp	.+112    	; 0x552 <M128_HMI_Form_put+0xa6>
     4e2:	8a 2f       	mov	r24, r26
     4e4:	2a 2f       	mov	r18, r26
     4e6:	30 e0       	ldi	r19, 0x00	; 0
     4e8:	2f 5f       	subi	r18, 0xFF	; 255
     4ea:	3f 4f       	sbci	r19, 0xFF	; 255
     4ec:	26 0f       	add	r18, r22
     4ee:	37 1f       	adc	r19, r23
     4f0:	93 2f       	mov	r25, r19
     4f2:	5d 9b       	sbis	0x0b, 5	; 11
     4f4:	fe cf       	rjmp	.-4      	; 0x4f2 <M128_HMI_Form_put+0x46>
     4f6:	9c b9       	out	0x0c, r25	; 12
     4f8:	5d 9b       	sbis	0x0b, 5	; 11
     4fa:	fe cf       	rjmp	.-4      	; 0x4f8 <M128_HMI_Form_put+0x4c>
     4fc:	2c b9       	out	0x0c, r18	; 12
     4fe:	5d 9b       	sbis	0x0b, 5	; 11
     500:	fe cf       	rjmp	.-4      	; 0x4fe <M128_HMI_Form_put+0x52>
     502:	8c b9       	out	0x0c, r24	; 12
     504:	a2 2f       	mov	r26, r18
     506:	a8 0f       	add	r26, r24
     508:	a9 0f       	add	r26, r25
     50a:	20 e0       	ldi	r18, 0x00	; 0
     50c:	30 e0       	ldi	r19, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	0a c0       	rjmp	.+20     	; 0x526 <M128_HMI_Form_put+0x7a>
     512:	fe 01       	movw	r30, r28
     514:	e2 0f       	add	r30, r18
     516:	f3 1f       	adc	r31, r19
     518:	e0 81       	ld	r30, Z
     51a:	5d 9b       	sbis	0x0b, 5	; 11
     51c:	fe cf       	rjmp	.-4      	; 0x51a <M128_HMI_Form_put+0x6e>
     51e:	ec b9       	out	0x0c, r30	; 12
     520:	ae 0f       	add	r26, r30
     522:	2f 5f       	subi	r18, 0xFF	; 255
     524:	3f 4f       	sbci	r19, 0xFF	; 255
     526:	28 17       	cp	r18, r24
     528:	39 07       	cpc	r19, r25
     52a:	98 f3       	brcs	.-26     	; 0x512 <M128_HMI_Form_put+0x66>
     52c:	80 e0       	ldi	r24, 0x00	; 0
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	09 c0       	rjmp	.+18     	; 0x544 <M128_HMI_Form_put+0x98>
     532:	fa 01       	movw	r30, r20
     534:	e8 0f       	add	r30, r24
     536:	f9 1f       	adc	r31, r25
     538:	e0 81       	ld	r30, Z
     53a:	5d 9b       	sbis	0x0b, 5	; 11
     53c:	fe cf       	rjmp	.-4      	; 0x53a <M128_HMI_Form_put+0x8e>
     53e:	ec b9       	out	0x0c, r30	; 12
     540:	ae 0f       	add	r26, r30
     542:	01 96       	adiw	r24, 0x01	; 1
     544:	86 17       	cp	r24, r22
     546:	97 07       	cpc	r25, r23
     548:	a0 f3       	brcs	.-24     	; 0x532 <M128_HMI_Form_put+0x86>
     54a:	5d 9b       	sbis	0x0b, 5	; 11
     54c:	fe cf       	rjmp	.-4      	; 0x54a <M128_HMI_Form_put+0x9e>
     54e:	ac b9       	out	0x0c, r26	; 12
     550:	80 e0       	ldi	r24, 0x00	; 0
     552:	df 91       	pop	r29
     554:	cf 91       	pop	r28
     556:	08 95       	ret

00000558 <printParameter>:
	float X0;
	float X1;
	float y;
}sendStruct;

void printParameter(){
     558:	df 92       	push	r13
     55a:	ef 92       	push	r14
     55c:	ff 92       	push	r15
     55e:	0f 93       	push	r16
     560:	1f 93       	push	r17
     562:	cf 93       	push	r28
     564:	df 93       	push	r29
	printf("===============================\n");
     566:	83 ea       	ldi	r24, 0xA3	; 163
     568:	91 e0       	ldi	r25, 0x01	; 1
     56a:	0e 94 42 14 	call	0x2884	; 0x2884 <puts>
     56e:	c2 e8       	ldi	r28, 0x82	; 130
     570:	d7 e0       	ldi	r29, 0x07	; 7
	for(int i=0;i<ParaARowSize;i++){
     572:	00 e0       	ldi	r16, 0x00	; 0
     574:	10 e0       	ldi	r17, 0x00	; 0
		for(int j=0;j<ParaAColSize;j++){
			printf("A[%d][%d]=%f\n", i, j, StateSpace.paraA[i][j]);
     576:	0f 2e       	mov	r0, r31
     578:	f3 ec       	ldi	r31, 0xC3	; 195
     57a:	ef 2e       	mov	r14, r31
     57c:	f1 e0       	ldi	r31, 0x01	; 1
     57e:	ff 2e       	mov	r15, r31
     580:	f0 2d       	mov	r31, r0
     582:	dd 24       	eor	r13, r13
     584:	d3 94       	inc	r13
     586:	8b 81       	ldd	r24, Y+3	; 0x03
     588:	8f 93       	push	r24
     58a:	8a 81       	ldd	r24, Y+2	; 0x02
     58c:	8f 93       	push	r24
     58e:	89 81       	ldd	r24, Y+1	; 0x01
     590:	8f 93       	push	r24
     592:	88 81       	ld	r24, Y
     594:	8f 93       	push	r24
     596:	1f 92       	push	r1
     598:	1f 92       	push	r1
     59a:	1f 93       	push	r17
     59c:	0f 93       	push	r16
     59e:	ff 92       	push	r15
     5a0:	ef 92       	push	r14
     5a2:	0e 94 2e 14 	call	0x285c	; 0x285c <printf>
     5a6:	8f 81       	ldd	r24, Y+7	; 0x07
     5a8:	8f 93       	push	r24
     5aa:	8e 81       	ldd	r24, Y+6	; 0x06
     5ac:	8f 93       	push	r24
     5ae:	8d 81       	ldd	r24, Y+5	; 0x05
     5b0:	8f 93       	push	r24
     5b2:	8c 81       	ldd	r24, Y+4	; 0x04
     5b4:	8f 93       	push	r24
     5b6:	1f 92       	push	r1
     5b8:	df 92       	push	r13
     5ba:	1f 93       	push	r17
     5bc:	0f 93       	push	r16
     5be:	ff 92       	push	r15
     5c0:	ef 92       	push	r14
     5c2:	0e 94 2e 14 	call	0x285c	; 0x285c <printf>
	float y;
}sendStruct;

void printParameter(){
	printf("===============================\n");
	for(int i=0;i<ParaARowSize;i++){
     5c6:	0f 5f       	subi	r16, 0xFF	; 255
     5c8:	1f 4f       	sbci	r17, 0xFF	; 255
     5ca:	28 96       	adiw	r28, 0x08	; 8
     5cc:	8d b7       	in	r24, 0x3d	; 61
     5ce:	9e b7       	in	r25, 0x3e	; 62
     5d0:	44 96       	adiw	r24, 0x14	; 20
     5d2:	0f b6       	in	r0, 0x3f	; 63
     5d4:	f8 94       	cli
     5d6:	9e bf       	out	0x3e, r25	; 62
     5d8:	0f be       	out	0x3f, r0	; 63
     5da:	8d bf       	out	0x3d, r24	; 61
     5dc:	02 30       	cpi	r16, 0x02	; 2
     5de:	11 05       	cpc	r17, r1
     5e0:	91 f6       	brne	.-92     	; 0x586 <printParameter+0x2e>
		for(int j=0;j<ParaAColSize;j++){
			printf("A[%d][%d]=%f\n", i, j, StateSpace.paraA[i][j]);
		}
	}
	printf("===============================\n");
     5e2:	83 ea       	ldi	r24, 0xA3	; 163
     5e4:	91 e0       	ldi	r25, 0x01	; 1
     5e6:	0e 94 42 14 	call	0x2884	; 0x2884 <puts>
	for(int i=0;i<ParaBRowSize;i++){
		for(int j=0;j<ParaBColSize;j++){
			printf("B[%d][%d]=%f\n", i, j, StateSpace.paraB[i][j]);
     5ea:	e2 e9       	ldi	r30, 0x92	; 146
     5ec:	f7 e0       	ldi	r31, 0x07	; 7
     5ee:	83 81       	ldd	r24, Z+3	; 0x03
     5f0:	8f 93       	push	r24
     5f2:	82 81       	ldd	r24, Z+2	; 0x02
     5f4:	8f 93       	push	r24
     5f6:	81 81       	ldd	r24, Z+1	; 0x01
     5f8:	8f 93       	push	r24
     5fa:	80 81       	ld	r24, Z
     5fc:	8f 93       	push	r24
     5fe:	1f 92       	push	r1
     600:	1f 92       	push	r1
     602:	1f 92       	push	r1
     604:	1f 92       	push	r1
     606:	c1 ed       	ldi	r28, 0xD1	; 209
     608:	d1 e0       	ldi	r29, 0x01	; 1
     60a:	df 93       	push	r29
     60c:	cf 93       	push	r28
     60e:	0e 94 2e 14 	call	0x285c	; 0x285c <printf>
     612:	e6 e9       	ldi	r30, 0x96	; 150
     614:	f7 e0       	ldi	r31, 0x07	; 7
     616:	83 81       	ldd	r24, Z+3	; 0x03
     618:	8f 93       	push	r24
     61a:	82 81       	ldd	r24, Z+2	; 0x02
     61c:	8f 93       	push	r24
     61e:	81 81       	ldd	r24, Z+1	; 0x01
     620:	8f 93       	push	r24
     622:	80 81       	ld	r24, Z
     624:	8f 93       	push	r24
     626:	1f 92       	push	r1
     628:	1f 92       	push	r1
     62a:	1f 92       	push	r1
     62c:	11 e0       	ldi	r17, 0x01	; 1
     62e:	1f 93       	push	r17
     630:	df 93       	push	r29
     632:	cf 93       	push	r28
     634:	0e 94 2e 14 	call	0x285c	; 0x285c <printf>
		}
	}
	printf("===============================\n");
     638:	83 ea       	ldi	r24, 0xA3	; 163
     63a:	91 e0       	ldi	r25, 0x01	; 1
     63c:	0e 94 42 14 	call	0x2884	; 0x2884 <puts>
	for(int i=0;i<ParaCRowSize;i++){
		for(int j=0;j<ParaCColSize;j++){
			printf("C[%d][%d]=%f\n", i, j, StateSpace.paraC[i][j]);
     640:	ea e9       	ldi	r30, 0x9A	; 154
     642:	f7 e0       	ldi	r31, 0x07	; 7
     644:	83 81       	ldd	r24, Z+3	; 0x03
     646:	8f 93       	push	r24
     648:	82 81       	ldd	r24, Z+2	; 0x02
     64a:	8f 93       	push	r24
     64c:	81 81       	ldd	r24, Z+1	; 0x01
     64e:	8f 93       	push	r24
     650:	80 81       	ld	r24, Z
     652:	8f 93       	push	r24
     654:	1f 92       	push	r1
     656:	1f 92       	push	r1
     658:	1f 92       	push	r1
     65a:	1f 92       	push	r1
     65c:	cf ed       	ldi	r28, 0xDF	; 223
     65e:	d1 e0       	ldi	r29, 0x01	; 1
     660:	df 93       	push	r29
     662:	cf 93       	push	r28
     664:	0e 94 2e 14 	call	0x285c	; 0x285c <printf>
     668:	ee e9       	ldi	r30, 0x9E	; 158
     66a:	f7 e0       	ldi	r31, 0x07	; 7
     66c:	83 81       	ldd	r24, Z+3	; 0x03
     66e:	8f 93       	push	r24
     670:	82 81       	ldd	r24, Z+2	; 0x02
     672:	8f 93       	push	r24
     674:	81 81       	ldd	r24, Z+1	; 0x01
     676:	8f 93       	push	r24
     678:	80 81       	ld	r24, Z
     67a:	8f 93       	push	r24
     67c:	1f 92       	push	r1
     67e:	1f 93       	push	r17
     680:	1f 92       	push	r1
     682:	1f 92       	push	r1
     684:	df 93       	push	r29
     686:	cf 93       	push	r28
     688:	0e 94 2e 14 	call	0x285c	; 0x285c <printf>
		}
	}
	printf("===============================\n");
     68c:	8d b7       	in	r24, 0x3d	; 61
     68e:	9e b7       	in	r25, 0x3e	; 62
     690:	88 96       	adiw	r24, 0x28	; 40
     692:	0f b6       	in	r0, 0x3f	; 63
     694:	f8 94       	cli
     696:	9e bf       	out	0x3e, r25	; 62
     698:	0f be       	out	0x3f, r0	; 63
     69a:	8d bf       	out	0x3d, r24	; 61
     69c:	83 ea       	ldi	r24, 0xA3	; 163
     69e:	91 e0       	ldi	r25, 0x01	; 1
     6a0:	0e 94 42 14 	call	0x2884	; 0x2884 <puts>
	for(int i=0;i<ParaDRowSize;i++){
		for(int j=0;j<ParaDColSize;j++){
			printf("D[%d][%d]=%f\n", i, j, StateSpace.paraD[i][j]);
     6a4:	e2 ea       	ldi	r30, 0xA2	; 162
     6a6:	f7 e0       	ldi	r31, 0x07	; 7
     6a8:	83 81       	ldd	r24, Z+3	; 0x03
     6aa:	8f 93       	push	r24
     6ac:	82 81       	ldd	r24, Z+2	; 0x02
     6ae:	8f 93       	push	r24
     6b0:	81 81       	ldd	r24, Z+1	; 0x01
     6b2:	8f 93       	push	r24
     6b4:	80 81       	ld	r24, Z
     6b6:	8f 93       	push	r24
     6b8:	1f 92       	push	r1
     6ba:	1f 92       	push	r1
     6bc:	1f 92       	push	r1
     6be:	1f 92       	push	r1
     6c0:	8d ee       	ldi	r24, 0xED	; 237
     6c2:	91 e0       	ldi	r25, 0x01	; 1
     6c4:	9f 93       	push	r25
     6c6:	8f 93       	push	r24
     6c8:	0e 94 2e 14 	call	0x285c	; 0x285c <printf>
		}
	}
	printf("===============================\n");
     6cc:	83 ea       	ldi	r24, 0xA3	; 163
     6ce:	91 e0       	ldi	r25, 0x01	; 1
     6d0:	0e 94 42 14 	call	0x2884	; 0x2884 <puts>
}
     6d4:	8d b7       	in	r24, 0x3d	; 61
     6d6:	9e b7       	in	r25, 0x3e	; 62
     6d8:	0a 96       	adiw	r24, 0x0a	; 10
     6da:	0f b6       	in	r0, 0x3f	; 63
     6dc:	f8 94       	cli
     6de:	9e bf       	out	0x3e, r25	; 62
     6e0:	0f be       	out	0x3f, r0	; 63
     6e2:	8d bf       	out	0x3d, r24	; 61
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	1f 91       	pop	r17
     6ea:	0f 91       	pop	r16
     6ec:	ff 90       	pop	r15
     6ee:	ef 90       	pop	r14
     6f0:	df 90       	pop	r13
     6f2:	08 95       	ret

000006f4 <setMatrixTheSame>:

void setMatrixTheSame(float *mat1, float *mat2, int row, int col){
     6f4:	8f 92       	push	r8
     6f6:	9f 92       	push	r9
     6f8:	af 92       	push	r10
     6fa:	bf 92       	push	r11
     6fc:	ef 92       	push	r14
     6fe:	ff 92       	push	r15
     700:	0f 93       	push	r16
     702:	1f 93       	push	r17
     704:	cf 93       	push	r28
     706:	df 93       	push	r29
	for(int i=0;i<row;i++){
     708:	14 16       	cp	r1, r20
     70a:	15 06       	cpc	r1, r21
     70c:	4c f5       	brge	.+82     	; 0x760 <setMatrixTheSame+0x6c>
     70e:	79 01       	movw	r14, r18
     710:	ee 0c       	add	r14, r14
     712:	ff 1c       	adc	r15, r15
     714:	ee 0c       	add	r14, r14
     716:	ff 1c       	adc	r15, r15
     718:	c6 2f       	mov	r28, r22
     71a:	d7 2f       	mov	r29, r23
     71c:	68 2f       	mov	r22, r24
     71e:	79 2f       	mov	r23, r25
     720:	00 e0       	ldi	r16, 0x00	; 0
     722:	10 e0       	ldi	r17, 0x00	; 0
     724:	14 c0       	rjmp	.+40     	; 0x74e <setMatrixTheSame+0x5a>
		for(int j=0;j<col;j++){
			*(mat1+j+i*col) = *(mat2+j+i*col);
     726:	81 90       	ld	r8, Z+
     728:	91 90       	ld	r9, Z+
     72a:	a1 90       	ld	r10, Z+
     72c:	b1 90       	ld	r11, Z+
     72e:	8d 92       	st	X+, r8
     730:	9d 92       	st	X+, r9
     732:	ad 92       	st	X+, r10
     734:	bd 92       	st	X+, r11
	printf("===============================\n");
}

void setMatrixTheSame(float *mat1, float *mat2, int row, int col){
	for(int i=0;i<row;i++){
		for(int j=0;j<col;j++){
     736:	e8 17       	cp	r30, r24
     738:	f9 07       	cpc	r31, r25
     73a:	a9 f7       	brne	.-22     	; 0x726 <setMatrixTheSame+0x32>
	}
	printf("===============================\n");
}

void setMatrixTheSame(float *mat1, float *mat2, int row, int col){
	for(int i=0;i<row;i++){
     73c:	0f 5f       	subi	r16, 0xFF	; 255
     73e:	1f 4f       	sbci	r17, 0xFF	; 255
     740:	ce 0d       	add	r28, r14
     742:	df 1d       	adc	r29, r15
     744:	6e 0d       	add	r22, r14
     746:	7f 1d       	adc	r23, r15
     748:	40 17       	cp	r20, r16
     74a:	51 07       	cpc	r21, r17
     74c:	49 f0       	breq	.+18     	; 0x760 <setMatrixTheSame+0x6c>
		for(int j=0;j<col;j++){
     74e:	12 16       	cp	r1, r18
     750:	13 06       	cpc	r1, r19
     752:	a4 f7       	brge	.-24     	; 0x73c <setMatrixTheSame+0x48>
     754:	c7 01       	movw	r24, r14
     756:	8c 0f       	add	r24, r28
     758:	9d 1f       	adc	r25, r29
     75a:	db 01       	movw	r26, r22
     75c:	fe 01       	movw	r30, r28
     75e:	e3 cf       	rjmp	.-58     	; 0x726 <setMatrixTheSame+0x32>
			*(mat1+j+i*col) = *(mat2+j+i*col);
		}
	}
}
     760:	df 91       	pop	r29
     762:	cf 91       	pop	r28
     764:	1f 91       	pop	r17
     766:	0f 91       	pop	r16
     768:	ff 90       	pop	r15
     76a:	ef 90       	pop	r14
     76c:	bf 90       	pop	r11
     76e:	af 90       	pop	r10
     770:	9f 90       	pop	r9
     772:	8f 90       	pop	r8
     774:	08 95       	ret

00000776 <initStateStateInput>:

void initStateStateInput(){
     776:	e6 ea       	ldi	r30, 0xA6	; 166
     778:	f7 e0       	ldi	r31, 0x07	; 7
     77a:	81 e0       	ldi	r24, 0x01	; 1
     77c:	90 e0       	ldi	r25, 0x00	; 0
	for(int i=0;i<ExecuteTimes;i++){
		if(i==0){
			StateSpace.paraU[0][0] = 0;
		}
		else{
			StateSpace.paraU[0][i] = 1;
     77e:	40 e0       	ldi	r20, 0x00	; 0
     780:	50 e0       	ldi	r21, 0x00	; 0
     782:	60 e8       	ldi	r22, 0x80	; 128
     784:	7f e3       	ldi	r23, 0x3F	; 63
}

void initStateStateInput(){
	for(int i=0;i<ExecuteTimes;i++){
		if(i==0){
			StateSpace.paraU[0][0] = 0;
     786:	df 01       	movw	r26, r30
     788:	02 c0       	rjmp	.+4      	; 0x78e <initStateStateInput+0x18>
     78a:	01 96       	adiw	r24, 0x01	; 1
     78c:	34 96       	adiw	r30, 0x04	; 4
	}
}

void initStateStateInput(){
	for(int i=0;i<ExecuteTimes;i++){
		if(i==0){
     78e:	81 30       	cpi	r24, 0x01	; 1
     790:	91 05       	cpc	r25, r1
     792:	31 f4       	brne	.+12     	; 0x7a0 <initStateStateInput+0x2a>
			StateSpace.paraU[0][0] = 0;
     794:	1d 92       	st	X+, r1
     796:	1d 92       	st	X+, r1
     798:	1d 92       	st	X+, r1
     79a:	1c 92       	st	X, r1
     79c:	13 97       	sbiw	r26, 0x03	; 3
     79e:	f5 cf       	rjmp	.-22     	; 0x78a <initStateStateInput+0x14>
		}
		else{
			StateSpace.paraU[0][i] = 1;
     7a0:	40 83       	st	Z, r20
     7a2:	51 83       	std	Z+1, r21	; 0x01
     7a4:	62 83       	std	Z+2, r22	; 0x02
     7a6:	73 83       	std	Z+3, r23	; 0x03
		}
	}
}

void initStateStateInput(){
	for(int i=0;i<ExecuteTimes;i++){
     7a8:	84 36       	cpi	r24, 0x64	; 100
     7aa:	91 05       	cpc	r25, r1
     7ac:	74 f3       	brlt	.-36     	; 0x78a <initStateStateInput+0x14>
		}
		else{
			StateSpace.paraU[0][i] = 1;
		}
	}
}
     7ae:	08 95       	ret

000007b0 <MatDotProduct>:

void MatDotProduct(float* ptr_m1, float* ptr_m2, float* ptr_dot, int row1, int col1, int col2){
     7b0:	2f 92       	push	r2
     7b2:	3f 92       	push	r3
     7b4:	4f 92       	push	r4
     7b6:	5f 92       	push	r5
     7b8:	6f 92       	push	r6
     7ba:	7f 92       	push	r7
     7bc:	8f 92       	push	r8
     7be:	9f 92       	push	r9
     7c0:	af 92       	push	r10
     7c2:	bf 92       	push	r11
     7c4:	cf 92       	push	r12
     7c6:	df 92       	push	r13
     7c8:	ef 92       	push	r14
     7ca:	ff 92       	push	r15
     7cc:	0f 93       	push	r16
     7ce:	1f 93       	push	r17
     7d0:	cf 93       	push	r28
     7d2:	df 93       	push	r29
     7d4:	cd b7       	in	r28, 0x3d	; 61
     7d6:	de b7       	in	r29, 0x3e	; 62
     7d8:	68 97       	sbiw	r28, 0x18	; 24
     7da:	0f b6       	in	r0, 0x3f	; 63
     7dc:	f8 94       	cli
     7de:	de bf       	out	0x3e, r29	; 62
     7e0:	0f be       	out	0x3f, r0	; 63
     7e2:	cd bf       	out	0x3d, r28	; 61
     7e4:	86 2e       	mov	r8, r22
     7e6:	97 2e       	mov	r9, r23
     7e8:	a4 2e       	mov	r10, r20
     7ea:	b5 2e       	mov	r11, r21
     7ec:	3c 8b       	std	Y+20, r19	; 0x14
     7ee:	2b 8b       	std	Y+19, r18	; 0x13
     7f0:	18 01       	movw	r2, r16
     7f2:	f8 86       	std	Y+8, r15	; 0x08
     7f4:	ef 82       	std	Y+7, r14	; 0x07
			}
			ptr_dot[i*col2+j] = dot_ans[i][j];
			//printf("%d,%d,%.2f,  %p\n",i+1,j+1,dot_ans[i][j], &dot_ans[i][j]);
		}
	}
}
     7f6:	2d b7       	in	r18, 0x3d	; 61
     7f8:	3e b7       	in	r19, 0x3e	; 62
     7fa:	38 8f       	std	Y+24, r19	; 0x18
     7fc:	2f 8b       	std	Y+23, r18	; 0x17
		}
	}
}

void MatDotProduct(float* ptr_m1, float* ptr_m2, float* ptr_dot, int row1, int col1, int col2){
	float dot_ans[row1][col2];
     7fe:	27 01       	movw	r4, r14
     800:	44 0c       	add	r4, r4
     802:	55 1c       	adc	r5, r5
     804:	44 0c       	add	r4, r4
     806:	55 1c       	adc	r5, r5
     808:	4b 89       	ldd	r20, Y+19	; 0x13
     80a:	5c 89       	ldd	r21, Y+20	; 0x14
     80c:	44 0f       	add	r20, r20
     80e:	55 1f       	adc	r21, r21
     810:	44 0f       	add	r20, r20
     812:	55 1f       	adc	r21, r21
     814:	4e 9d       	mul	r20, r14
     816:	90 01       	movw	r18, r0
     818:	4f 9d       	mul	r20, r15
     81a:	30 0d       	add	r19, r0
     81c:	5e 9d       	mul	r21, r14
     81e:	30 0d       	add	r19, r0
     820:	11 24       	eor	r1, r1
     822:	ed b7       	in	r30, 0x3d	; 61
     824:	fe b7       	in	r31, 0x3e	; 62
     826:	e2 1b       	sub	r30, r18
     828:	f3 0b       	sbc	r31, r19
     82a:	0f b6       	in	r0, 0x3f	; 63
     82c:	f8 94       	cli
     82e:	fe bf       	out	0x3e, r31	; 62
     830:	0f be       	out	0x3f, r0	; 63
     832:	ed bf       	out	0x3d, r30	; 61
     834:	2d b7       	in	r18, 0x3d	; 61
     836:	3e b7       	in	r19, 0x3e	; 62
     838:	2f 5f       	subi	r18, 0xFF	; 255
     83a:	3f 4f       	sbci	r19, 0xFF	; 255
     83c:	38 8b       	std	Y+16, r19	; 0x10
     83e:	2f 87       	std	Y+15, r18	; 0x0f
	float m1[row1][col1], m2[col1][col2];    // ROW2 = COL1
     840:	a8 01       	movw	r20, r16
     842:	44 0f       	add	r20, r20
     844:	55 1f       	adc	r21, r21
     846:	44 0f       	add	r20, r20
     848:	55 1f       	adc	r21, r21
     84a:	5e 8b       	std	Y+22, r21	; 0x16
     84c:	4d 8b       	std	Y+21, r20	; 0x15
     84e:	6b 89       	ldd	r22, Y+19	; 0x13
     850:	7c 89       	ldd	r23, Y+20	; 0x14
     852:	64 9f       	mul	r22, r20
     854:	90 01       	movw	r18, r0
     856:	65 9f       	mul	r22, r21
     858:	30 0d       	add	r19, r0
     85a:	74 9f       	mul	r23, r20
     85c:	30 0d       	add	r19, r0
     85e:	11 24       	eor	r1, r1
     860:	e2 1b       	sub	r30, r18
     862:	f3 0b       	sbc	r31, r19
     864:	0f b6       	in	r0, 0x3f	; 63
     866:	f8 94       	cli
     868:	fe bf       	out	0x3e, r31	; 62
     86a:	0f be       	out	0x3f, r0	; 63
     86c:	ed bf       	out	0x3d, r30	; 61
     86e:	2d b7       	in	r18, 0x3d	; 61
     870:	3e b7       	in	r19, 0x3e	; 62
     872:	2f 5f       	subi	r18, 0xFF	; 255
     874:	3f 4f       	sbci	r19, 0xFF	; 255
     876:	39 01       	movw	r6, r18
     878:	e4 9e       	mul	r14, r20
     87a:	90 01       	movw	r18, r0
     87c:	e5 9e       	mul	r14, r21
     87e:	30 0d       	add	r19, r0
     880:	f4 9e       	mul	r15, r20
     882:	30 0d       	add	r19, r0
     884:	11 24       	eor	r1, r1
     886:	e2 1b       	sub	r30, r18
     888:	f3 0b       	sbc	r31, r19
     88a:	0f b6       	in	r0, 0x3f	; 63
     88c:	f8 94       	cli
     88e:	fe bf       	out	0x3e, r31	; 62
     890:	0f be       	out	0x3f, r0	; 63
     892:	ed bf       	out	0x3d, r30	; 61
     894:	0d b7       	in	r16, 0x3d	; 61
     896:	1e b7       	in	r17, 0x3e	; 62
     898:	0f 5f       	subi	r16, 0xFF	; 255
     89a:	1f 4f       	sbci	r17, 0xFF	; 255
     89c:	1c 87       	std	Y+12, r17	; 0x0c
     89e:	0b 87       	std	Y+11, r16	; 0x0b
	//ptr_m = (float*)malloc(sizeof(float)*row1*col2);
	// Get value from matrix 1
	for(int i=0;i<row1;i++){
     8a0:	2b 89       	ldd	r18, Y+19	; 0x13
     8a2:	3c 89       	ldd	r19, Y+20	; 0x14
     8a4:	12 16       	cp	r1, r18
     8a6:	13 06       	cpc	r1, r19
     8a8:	0c f0       	brlt	.+2      	; 0x8ac <MatDotProduct+0xfc>
     8aa:	0c c1       	rjmp	.+536    	; 0xac4 <MatDotProduct+0x314>
     8ac:	28 2f       	mov	r18, r24
     8ae:	39 2f       	mov	r19, r25
     8b0:	b3 01       	movw	r22, r6
     8b2:	40 e0       	ldi	r20, 0x00	; 0
     8b4:	50 e0       	ldi	r21, 0x00	; 0
     8b6:	5a 82       	std	Y+2, r5	; 0x02
     8b8:	49 82       	std	Y+1, r4	; 0x01
     8ba:	ed 88       	ldd	r14, Y+21	; 0x15
     8bc:	fe 88       	ldd	r15, Y+22	; 0x16
     8be:	cb 88       	ldd	r12, Y+19	; 0x13
     8c0:	dc 88       	ldd	r13, Y+20	; 0x14
     8c2:	7c 82       	std	Y+4, r7	; 0x04
     8c4:	6b 82       	std	Y+3, r6	; 0x03
     8c6:	1e 83       	std	Y+6, r17	; 0x06
     8c8:	0d 83       	std	Y+5, r16	; 0x05
     8ca:	18 2d       	mov	r17, r8
     8cc:	79 2c       	mov	r7, r9
     8ce:	5a 2c       	mov	r5, r10
     8d0:	b9 86       	std	Y+9, r11	; 0x09
     8d2:	15 c0       	rjmp	.+42     	; 0x8fe <MatDotProduct+0x14e>
		for(int j=0;j<col1;j++){
			m1[i][j] = *(ptr_m1+i*col1+j);
     8d4:	81 90       	ld	r8, Z+
     8d6:	91 90       	ld	r9, Z+
     8d8:	a1 90       	ld	r10, Z+
     8da:	b1 90       	ld	r11, Z+
     8dc:	8d 92       	st	X+, r8
     8de:	9d 92       	st	X+, r9
     8e0:	ad 92       	st	X+, r10
     8e2:	bd 92       	st	X+, r11
	float dot_ans[row1][col2];
	float m1[row1][col1], m2[col1][col2];    // ROW2 = COL1
	//ptr_m = (float*)malloc(sizeof(float)*row1*col2);
	// Get value from matrix 1
	for(int i=0;i<row1;i++){
		for(int j=0;j<col1;j++){
     8e4:	e8 17       	cp	r30, r24
     8e6:	f9 07       	cpc	r31, r25
     8e8:	a9 f7       	brne	.-22     	; 0x8d4 <MatDotProduct+0x124>
void MatDotProduct(float* ptr_m1, float* ptr_m2, float* ptr_dot, int row1, int col1, int col2){
	float dot_ans[row1][col2];
	float m1[row1][col1], m2[col1][col2];    // ROW2 = COL1
	//ptr_m = (float*)malloc(sizeof(float)*row1*col2);
	// Get value from matrix 1
	for(int i=0;i<row1;i++){
     8ea:	4f 5f       	subi	r20, 0xFF	; 255
     8ec:	5f 4f       	sbci	r21, 0xFF	; 255
     8ee:	2e 0d       	add	r18, r14
     8f0:	3f 1d       	adc	r19, r15
     8f2:	6e 0d       	add	r22, r14
     8f4:	7f 1d       	adc	r23, r15
     8f6:	c4 16       	cp	r12, r20
     8f8:	d5 06       	cpc	r13, r21
     8fa:	09 f4       	brne	.+2      	; 0x8fe <MatDotProduct+0x14e>
     8fc:	d4 c0       	rjmp	.+424    	; 0xaa6 <MatDotProduct+0x2f6>
		for(int j=0;j<col1;j++){
     8fe:	12 14       	cp	r1, r2
     900:	13 04       	cpc	r1, r3
     902:	9c f7       	brge	.-26     	; 0x8ea <MatDotProduct+0x13a>
     904:	c7 01       	movw	r24, r14
     906:	82 0f       	add	r24, r18
     908:	93 1f       	adc	r25, r19
     90a:	db 01       	movw	r26, r22
     90c:	f9 01       	movw	r30, r18
     90e:	e2 cf       	rjmp	.-60     	; 0x8d4 <MatDotProduct+0x124>
		}
	}
	// Get value from matrix 2
	for(int i=0;i<col1;i++){
		for(int j=0;j<col2;j++){
			m2[i][j] = *(ptr_m2+i*col2+j);
     910:	c1 90       	ld	r12, Z+
     912:	d1 90       	ld	r13, Z+
     914:	e1 90       	ld	r14, Z+
     916:	f1 90       	ld	r15, Z+
     918:	cd 92       	st	X+, r12
     91a:	dd 92       	st	X+, r13
     91c:	ed 92       	st	X+, r14
     91e:	fd 92       	st	X+, r15
			//printf("%d, %d, %.2f\n",i+1, j+1, m1[i][j]);
		}
	}
	// Get value from matrix 2
	for(int i=0;i<col1;i++){
		for(int j=0;j<col2;j++){
     920:	e8 17       	cp	r30, r24
     922:	f9 07       	cpc	r31, r25
     924:	a9 f7       	brne	.-22     	; 0x910 <MatDotProduct+0x160>
			m1[i][j] = *(ptr_m1+i*col1+j);
			//printf("%d, %d, %.2f\n",i+1, j+1, m1[i][j]);
		}
	}
	// Get value from matrix 2
	for(int i=0;i<col1;i++){
     926:	4f 5f       	subi	r20, 0xFF	; 255
     928:	5f 4f       	sbci	r21, 0xFF	; 255
     92a:	24 0d       	add	r18, r4
     92c:	35 1d       	adc	r19, r5
     92e:	64 0d       	add	r22, r4
     930:	75 1d       	adc	r23, r5
     932:	42 15       	cp	r20, r2
     934:	53 05       	cpc	r21, r3
     936:	44 f0       	brlt	.+16     	; 0x948 <MatDotProduct+0x198>
     938:	10 c0       	rjmp	.+32     	; 0x95a <MatDotProduct+0x1aa>
     93a:	28 2d       	mov	r18, r8
     93c:	39 2d       	mov	r19, r9
     93e:	b8 01       	movw	r22, r16
		for(int j=0;j<col2;j++){
     940:	40 e0       	ldi	r20, 0x00	; 0
     942:	50 e0       	ldi	r21, 0x00	; 0
     944:	0f 81       	ldd	r16, Y+7	; 0x07
     946:	18 85       	ldd	r17, Y+8	; 0x08
     948:	10 16       	cp	r1, r16
     94a:	11 06       	cpc	r1, r17
     94c:	64 f7       	brge	.-40     	; 0x926 <MatDotProduct+0x176>
     94e:	c2 01       	movw	r24, r4
     950:	82 0f       	add	r24, r18
     952:	93 1f       	adc	r25, r19
     954:	db 01       	movw	r26, r22
     956:	f9 01       	movw	r30, r18
     958:	db cf       	rjmp	.-74     	; 0x910 <MatDotProduct+0x160>
			m2[i][j] = *(ptr_m2+i*col2+j);
			//printf("%d, %d, %.2f\n",i+1, j+1, m2[i][j]);
		}
	}
	// Execute the dot product
	for(int i=0;i<row1;i++){
     95a:	4b 89       	ldd	r20, Y+19	; 0x13
     95c:	5c 89       	ldd	r21, Y+20	; 0x14
     95e:	14 16       	cp	r1, r20
     960:	15 06       	cpc	r1, r21
     962:	0c f4       	brge	.+2      	; 0x966 <MatDotProduct+0x1b6>
     964:	93 c0       	rjmp	.+294    	; 0xa8c <MatDotProduct+0x2dc>
     966:	b2 c0       	rjmp	.+356    	; 0xacc <MatDotProduct+0x31c>
		for(int j=0;j<col2;j++){
     968:	6d 85       	ldd	r22, Y+13	; 0x0d
     96a:	7e 85       	ldd	r23, Y+14	; 0x0e
     96c:	7e 83       	std	Y+6, r23	; 0x06
     96e:	6d 83       	std	Y+5, r22	; 0x05
     970:	8f 85       	ldd	r24, Y+15	; 0x0f
     972:	98 89       	ldd	r25, Y+16	; 0x10
     974:	9a 83       	std	Y+2, r25	; 0x02
     976:	89 83       	std	Y+1, r24	; 0x01
     978:	61 2c       	mov	r6, r1
     97a:	71 2c       	mov	r7, r1
     97c:	e9 81       	ldd	r30, Y+1	; 0x01
     97e:	fa 81       	ldd	r31, Y+2	; 0x02
     980:	fc 83       	std	Y+4, r31	; 0x04
     982:	eb 83       	std	Y+3, r30	; 0x03
			dot_ans[i][j] = 0;
     984:	10 82       	st	Z, r1
     986:	11 82       	std	Z+1, r1	; 0x01
     988:	12 82       	std	Z+2, r1	; 0x02
     98a:	13 82       	std	Z+3, r1	; 0x03
			for(int k=0;k<col1;k++){    // summation
     98c:	12 14       	cp	r1, r2
     98e:	13 04       	cpc	r1, r3
     990:	0c f0       	brlt	.+2      	; 0x994 <MatDotProduct+0x1e4>
     992:	3f c0       	rjmp	.+126    	; 0xa12 <MatDotProduct+0x262>
     994:	c9 84       	ldd	r12, Y+9	; 0x09
     996:	da 84       	ldd	r13, Y+10	; 0x0a
     998:	81 2c       	mov	r8, r1
     99a:	91 2c       	mov	r9, r1
     99c:	a1 2c       	mov	r10, r1
     99e:	b1 2c       	mov	r11, r1
     9a0:	00 e0       	ldi	r16, 0x00	; 0
     9a2:	10 e0       	ldi	r17, 0x00	; 0
				dot_ans[i][j] += m1[i][k] * m2[k][j];
     9a4:	73 01       	movw	r14, r6
     9a6:	ee 0c       	add	r14, r14
     9a8:	ff 1c       	adc	r15, r15
     9aa:	ee 0c       	add	r14, r14
     9ac:	ff 1c       	adc	r15, r15
     9ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     9b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     9b2:	e2 0e       	add	r14, r18
     9b4:	f3 1e       	adc	r15, r19
     9b6:	f6 01       	movw	r30, r12
     9b8:	61 91       	ld	r22, Z+
     9ba:	71 91       	ld	r23, Z+
     9bc:	81 91       	ld	r24, Z+
     9be:	91 91       	ld	r25, Z+
     9c0:	6f 01       	movw	r12, r30
     9c2:	40 9e       	mul	r4, r16
     9c4:	f0 01       	movw	r30, r0
     9c6:	41 9e       	mul	r4, r17
     9c8:	f0 0d       	add	r31, r0
     9ca:	50 9e       	mul	r5, r16
     9cc:	f0 0d       	add	r31, r0
     9ce:	11 24       	eor	r1, r1
     9d0:	ee 0d       	add	r30, r14
     9d2:	ff 1d       	adc	r31, r15
     9d4:	20 81       	ld	r18, Z
     9d6:	31 81       	ldd	r19, Z+1	; 0x01
     9d8:	42 81       	ldd	r20, Z+2	; 0x02
     9da:	53 81       	ldd	r21, Z+3	; 0x03
     9dc:	6a d5       	rcall	.+2772   	; 0x14b2 <__mulsf3>
     9de:	9b 01       	movw	r18, r22
     9e0:	ac 01       	movw	r20, r24
     9e2:	68 2d       	mov	r22, r8
     9e4:	79 2d       	mov	r23, r9
     9e6:	8a 2d       	mov	r24, r10
     9e8:	9b 2d       	mov	r25, r11
     9ea:	1a d4       	rcall	.+2100   	; 0x1220 <__addsf3>
     9ec:	86 2e       	mov	r8, r22
     9ee:	97 2e       	mov	r9, r23
     9f0:	a8 2e       	mov	r10, r24
     9f2:	b9 2e       	mov	r11, r25
	}
	// Execute the dot product
	for(int i=0;i<row1;i++){
		for(int j=0;j<col2;j++){
			dot_ans[i][j] = 0;
			for(int k=0;k<col1;k++){    // summation
     9f4:	0f 5f       	subi	r16, 0xFF	; 255
     9f6:	1f 4f       	sbci	r17, 0xFF	; 255
     9f8:	20 16       	cp	r2, r16
     9fa:	31 06       	cpc	r3, r17
     9fc:	e1 f6       	brne	.-72     	; 0x9b6 <MatDotProduct+0x206>
     9fe:	86 2f       	mov	r24, r22
     a00:	99 2d       	mov	r25, r9
     a02:	aa 2d       	mov	r26, r10
     a04:	bb 2d       	mov	r27, r11
     a06:	eb 81       	ldd	r30, Y+3	; 0x03
     a08:	fc 81       	ldd	r31, Y+4	; 0x04
     a0a:	80 83       	st	Z, r24
     a0c:	91 83       	std	Z+1, r25	; 0x01
     a0e:	a2 83       	std	Z+2, r26	; 0x02
     a10:	b3 83       	std	Z+3, r27	; 0x03
     a12:	29 81       	ldd	r18, Y+1	; 0x01
     a14:	3a 81       	ldd	r19, Y+2	; 0x02
     a16:	2c 5f       	subi	r18, 0xFC	; 252
     a18:	3f 4f       	sbci	r19, 0xFF	; 255
     a1a:	3a 83       	std	Y+2, r19	; 0x02
     a1c:	29 83       	std	Y+1, r18	; 0x01
				dot_ans[i][j] += m1[i][k] * m2[k][j];
			}
			ptr_dot[i*col2+j] = dot_ans[i][j];
     a1e:	eb 81       	ldd	r30, Y+3	; 0x03
     a20:	fc 81       	ldd	r31, Y+4	; 0x04
     a22:	80 81       	ld	r24, Z
     a24:	91 81       	ldd	r25, Z+1	; 0x01
     a26:	a2 81       	ldd	r26, Z+2	; 0x02
     a28:	b3 81       	ldd	r27, Z+3	; 0x03
     a2a:	ed 81       	ldd	r30, Y+5	; 0x05
     a2c:	fe 81       	ldd	r31, Y+6	; 0x06
     a2e:	81 93       	st	Z+, r24
     a30:	91 93       	st	Z+, r25
     a32:	a1 93       	st	Z+, r26
     a34:	b1 93       	st	Z+, r27
     a36:	fe 83       	std	Y+6, r31	; 0x06
     a38:	ed 83       	std	Y+5, r30	; 0x05
			//printf("%d, %d, %.2f\n",i+1, j+1, m2[i][j]);
		}
	}
	// Execute the dot product
	for(int i=0;i<row1;i++){
		for(int j=0;j<col2;j++){
     a3a:	ff ef       	ldi	r31, 0xFF	; 255
     a3c:	6f 1a       	sub	r6, r31
     a3e:	7f 0a       	sbc	r7, r31
     a40:	2f 81       	ldd	r18, Y+7	; 0x07
     a42:	38 85       	ldd	r19, Y+8	; 0x08
     a44:	26 15       	cp	r18, r6
     a46:	37 05       	cpc	r19, r7
     a48:	09 f0       	breq	.+2      	; 0xa4c <MatDotProduct+0x29c>
     a4a:	98 cf       	rjmp	.-208    	; 0x97c <MatDotProduct+0x1cc>
			m2[i][j] = *(ptr_m2+i*col2+j);
			//printf("%d, %d, %.2f\n",i+1, j+1, m2[i][j]);
		}
	}
	// Execute the dot product
	for(int i=0;i<row1;i++){
     a4c:	49 89       	ldd	r20, Y+17	; 0x11
     a4e:	5a 89       	ldd	r21, Y+18	; 0x12
     a50:	4f 5f       	subi	r20, 0xFF	; 255
     a52:	5f 4f       	sbci	r21, 0xFF	; 255
     a54:	5a 8b       	std	Y+18, r21	; 0x12
     a56:	49 8b       	std	Y+17, r20	; 0x11
     a58:	6f 85       	ldd	r22, Y+15	; 0x0f
     a5a:	78 89       	ldd	r23, Y+16	; 0x10
     a5c:	64 0d       	add	r22, r4
     a5e:	75 1d       	adc	r23, r5
     a60:	78 8b       	std	Y+16, r23	; 0x10
     a62:	6f 87       	std	Y+15, r22	; 0x0f
     a64:	8d 85       	ldd	r24, Y+13	; 0x0d
     a66:	9e 85       	ldd	r25, Y+14	; 0x0e
     a68:	84 0d       	add	r24, r4
     a6a:	95 1d       	adc	r25, r5
     a6c:	9e 87       	std	Y+14, r25	; 0x0e
     a6e:	8d 87       	std	Y+13, r24	; 0x0d
     a70:	e9 85       	ldd	r30, Y+9	; 0x09
     a72:	fa 85       	ldd	r31, Y+10	; 0x0a
     a74:	2d 89       	ldd	r18, Y+21	; 0x15
     a76:	3e 89       	ldd	r19, Y+22	; 0x16
     a78:	e2 0f       	add	r30, r18
     a7a:	f3 1f       	adc	r31, r19
     a7c:	fa 87       	std	Y+10, r31	; 0x0a
     a7e:	e9 87       	std	Y+9, r30	; 0x09
     a80:	6b 89       	ldd	r22, Y+19	; 0x13
     a82:	7c 89       	ldd	r23, Y+20	; 0x14
     a84:	46 17       	cp	r20, r22
     a86:	57 07       	cpc	r21, r23
     a88:	3c f0       	brlt	.+14     	; 0xa98 <MatDotProduct+0x2e8>
     a8a:	20 c0       	rjmp	.+64     	; 0xacc <MatDotProduct+0x31c>
     a8c:	ad 86       	std	Y+13, r10	; 0x0d
     a8e:	be 86       	std	Y+14, r11	; 0x0e
     a90:	7a 86       	std	Y+10, r7	; 0x0a
     a92:	69 86       	std	Y+9, r6	; 0x09
		for(int j=0;j<col2;j++){
			dot_ans[i][j] = 0;
			for(int k=0;k<col1;k++){    // summation
     a94:	1a 8a       	std	Y+18, r1	; 0x12
     a96:	19 8a       	std	Y+17, r1	; 0x11
			//printf("%d, %d, %.2f\n",i+1, j+1, m2[i][j]);
		}
	}
	// Execute the dot product
	for(int i=0;i<row1;i++){
		for(int j=0;j<col2;j++){
     a98:	ef 81       	ldd	r30, Y+7	; 0x07
     a9a:	f8 85       	ldd	r31, Y+8	; 0x08
     a9c:	1e 16       	cp	r1, r30
     a9e:	1f 06       	cpc	r1, r31
     aa0:	0c f4       	brge	.+2      	; 0xaa4 <MatDotProduct+0x2f4>
     aa2:	62 cf       	rjmp	.-316    	; 0x968 <MatDotProduct+0x1b8>
     aa4:	d3 cf       	rjmp	.-90     	; 0xa4c <MatDotProduct+0x29c>
     aa6:	81 2e       	mov	r8, r17
     aa8:	0d 81       	ldd	r16, Y+5	; 0x05
     aaa:	1e 81       	ldd	r17, Y+6	; 0x06
     aac:	97 2c       	mov	r9, r7
     aae:	6b 80       	ldd	r6, Y+3	; 0x03
     ab0:	7c 80       	ldd	r7, Y+4	; 0x04
     ab2:	a5 2c       	mov	r10, r5
     ab4:	49 80       	ldd	r4, Y+1	; 0x01
     ab6:	5a 80       	ldd	r5, Y+2	; 0x02
     ab8:	b9 84       	ldd	r11, Y+9	; 0x09
			m1[i][j] = *(ptr_m1+i*col1+j);
			//printf("%d, %d, %.2f\n",i+1, j+1, m1[i][j]);
		}
	}
	// Get value from matrix 2
	for(int i=0;i<col1;i++){
     aba:	12 14       	cp	r1, r2
     abc:	13 04       	cpc	r1, r3
     abe:	0c f4       	brge	.+2      	; 0xac2 <MatDotProduct+0x312>
     ac0:	3c cf       	rjmp	.-392    	; 0x93a <MatDotProduct+0x18a>
     ac2:	e4 cf       	rjmp	.-56     	; 0xa8c <MatDotProduct+0x2dc>
     ac4:	12 14       	cp	r1, r2
     ac6:	13 04       	cpc	r1, r3
     ac8:	0c f4       	brge	.+2      	; 0xacc <MatDotProduct+0x31c>
     aca:	37 cf       	rjmp	.-402    	; 0x93a <MatDotProduct+0x18a>
			}
			ptr_dot[i*col2+j] = dot_ans[i][j];
			//printf("%d,%d,%.2f,  %p\n",i+1,j+1,dot_ans[i][j], &dot_ans[i][j]);
		}
	}
}
     acc:	2f 89       	ldd	r18, Y+23	; 0x17
     ace:	38 8d       	ldd	r19, Y+24	; 0x18
     ad0:	0f b6       	in	r0, 0x3f	; 63
     ad2:	f8 94       	cli
     ad4:	3e bf       	out	0x3e, r19	; 62
     ad6:	0f be       	out	0x3f, r0	; 63
     ad8:	2d bf       	out	0x3d, r18	; 61
     ada:	68 96       	adiw	r28, 0x18	; 24
     adc:	0f b6       	in	r0, 0x3f	; 63
     ade:	f8 94       	cli
     ae0:	de bf       	out	0x3e, r29	; 62
     ae2:	0f be       	out	0x3f, r0	; 63
     ae4:	cd bf       	out	0x3d, r28	; 61
     ae6:	df 91       	pop	r29
     ae8:	cf 91       	pop	r28
     aea:	1f 91       	pop	r17
     aec:	0f 91       	pop	r16
     aee:	ff 90       	pop	r15
     af0:	ef 90       	pop	r14
     af2:	df 90       	pop	r13
     af4:	cf 90       	pop	r12
     af6:	bf 90       	pop	r11
     af8:	af 90       	pop	r10
     afa:	9f 90       	pop	r9
     afc:	8f 90       	pop	r8
     afe:	7f 90       	pop	r7
     b00:	6f 90       	pop	r6
     b02:	5f 90       	pop	r5
     b04:	4f 90       	pop	r4
     b06:	3f 90       	pop	r3
     b08:	2f 90       	pop	r2
     b0a:	08 95       	ret

00000b0c <MatPlus>:

void MatPlus(float* ptr_m1, float* ptr_m2, float* ptr_dot, int row, int col){
     b0c:	2f 92       	push	r2
     b0e:	3f 92       	push	r3
     b10:	4f 92       	push	r4
     b12:	5f 92       	push	r5
     b14:	6f 92       	push	r6
     b16:	7f 92       	push	r7
     b18:	8f 92       	push	r8
     b1a:	9f 92       	push	r9
     b1c:	af 92       	push	r10
     b1e:	bf 92       	push	r11
     b20:	cf 92       	push	r12
     b22:	df 92       	push	r13
     b24:	ef 92       	push	r14
     b26:	ff 92       	push	r15
     b28:	0f 93       	push	r16
     b2a:	1f 93       	push	r17
     b2c:	cf 93       	push	r28
     b2e:	df 93       	push	r29
     b30:	00 d0       	rcall	.+0      	; 0xb32 <MatPlus+0x26>
     b32:	00 d0       	rcall	.+0      	; 0xb34 <MatPlus+0x28>
     b34:	00 d0       	rcall	.+0      	; 0xb36 <MatPlus+0x2a>
     b36:	cd b7       	in	r28, 0x3d	; 61
     b38:	de b7       	in	r29, 0x3e	; 62
	for(int i=0;i<row;i++){
     b3a:	12 16       	cp	r1, r18
     b3c:	13 06       	cpc	r1, r19
     b3e:	0c f0       	brlt	.+2      	; 0xb42 <MatPlus+0x36>
     b40:	47 c0       	rjmp	.+142    	; 0xbd0 <MatPlus+0xc4>
     b42:	1a 83       	std	Y+2, r17	; 0x02
     b44:	09 83       	std	Y+1, r16	; 0x01
     b46:	3c 83       	std	Y+4, r19	; 0x04
     b48:	2b 83       	std	Y+3, r18	; 0x03
     b4a:	48 01       	movw	r8, r16
     b4c:	88 0c       	add	r8, r8
     b4e:	99 1c       	adc	r9, r9
     b50:	88 0c       	add	r8, r8
     b52:	99 1c       	adc	r9, r9
     b54:	a8 2e       	mov	r10, r24
     b56:	b9 2e       	mov	r11, r25
     b58:	46 2e       	mov	r4, r22
     b5a:	57 2e       	mov	r5, r23
     b5c:	24 2e       	mov	r2, r20
     b5e:	35 2e       	mov	r3, r21
     b60:	61 2c       	mov	r6, r1
     b62:	71 2c       	mov	r7, r1
     b64:	28 c0       	rjmp	.+80     	; 0xbb6 <MatPlus+0xaa>
		for(int j=0;j<col;j++){
			ptr_dot[j+i*col] = *(ptr_m1+j+i*col) + *(ptr_m2+j+i*col);
     b66:	ed 81       	ldd	r30, Y+5	; 0x05
     b68:	fe 81       	ldd	r31, Y+6	; 0x06
     b6a:	61 91       	ld	r22, Z+
     b6c:	71 91       	ld	r23, Z+
     b6e:	81 91       	ld	r24, Z+
     b70:	91 91       	ld	r25, Z+
     b72:	fe 83       	std	Y+6, r31	; 0x06
     b74:	ed 83       	std	Y+5, r30	; 0x05
     b76:	f8 01       	movw	r30, r16
     b78:	21 91       	ld	r18, Z+
     b7a:	31 91       	ld	r19, Z+
     b7c:	41 91       	ld	r20, Z+
     b7e:	51 91       	ld	r21, Z+
     b80:	8f 01       	movw	r16, r30
     b82:	4e d3       	rcall	.+1692   	; 0x1220 <__addsf3>
     b84:	f7 01       	movw	r30, r14
     b86:	61 93       	st	Z+, r22
     b88:	71 93       	st	Z+, r23
     b8a:	81 93       	st	Z+, r24
     b8c:	91 93       	st	Z+, r25
     b8e:	7f 01       	movw	r14, r30
	}
}

void MatPlus(float* ptr_m1, float* ptr_m2, float* ptr_dot, int row, int col){
	for(int i=0;i<row;i++){
		for(int j=0;j<col;j++){
     b90:	8d 81       	ldd	r24, Y+5	; 0x05
     b92:	9e 81       	ldd	r25, Y+6	; 0x06
     b94:	8c 15       	cp	r24, r12
     b96:	9d 05       	cpc	r25, r13
     b98:	31 f7       	brne	.-52     	; 0xb66 <MatPlus+0x5a>
		}
	}
}

void MatPlus(float* ptr_m1, float* ptr_m2, float* ptr_dot, int row, int col){
	for(int i=0;i<row;i++){
     b9a:	9f ef       	ldi	r25, 0xFF	; 255
     b9c:	69 1a       	sub	r6, r25
     b9e:	79 0a       	sbc	r7, r25
     ba0:	a8 0c       	add	r10, r8
     ba2:	b9 1c       	adc	r11, r9
     ba4:	48 0c       	add	r4, r8
     ba6:	59 1c       	adc	r5, r9
     ba8:	28 0c       	add	r2, r8
     baa:	39 1c       	adc	r3, r9
     bac:	eb 81       	ldd	r30, Y+3	; 0x03
     bae:	fc 81       	ldd	r31, Y+4	; 0x04
     bb0:	e6 15       	cp	r30, r6
     bb2:	f7 05       	cpc	r31, r7
     bb4:	69 f0       	breq	.+26     	; 0xbd0 <MatPlus+0xc4>
		for(int j=0;j<col;j++){
     bb6:	89 81       	ldd	r24, Y+1	; 0x01
     bb8:	9a 81       	ldd	r25, Y+2	; 0x02
     bba:	18 16       	cp	r1, r24
     bbc:	19 06       	cpc	r1, r25
     bbe:	6c f7       	brge	.-38     	; 0xb9a <MatPlus+0x8e>
     bc0:	64 01       	movw	r12, r8
     bc2:	ca 0c       	add	r12, r10
     bc4:	db 1c       	adc	r13, r11
     bc6:	71 01       	movw	r14, r2
     bc8:	82 01       	movw	r16, r4
     bca:	be 82       	std	Y+6, r11	; 0x06
     bcc:	ad 82       	std	Y+5, r10	; 0x05
     bce:	cb cf       	rjmp	.-106    	; 0xb66 <MatPlus+0x5a>
			ptr_dot[j+i*col] = *(ptr_m1+j+i*col) + *(ptr_m2+j+i*col);
		}
	}
}
     bd0:	26 96       	adiw	r28, 0x06	; 6
     bd2:	0f b6       	in	r0, 0x3f	; 63
     bd4:	f8 94       	cli
     bd6:	de bf       	out	0x3e, r29	; 62
     bd8:	0f be       	out	0x3f, r0	; 63
     bda:	cd bf       	out	0x3d, r28	; 61
     bdc:	df 91       	pop	r29
     bde:	cf 91       	pop	r28
     be0:	1f 91       	pop	r17
     be2:	0f 91       	pop	r16
     be4:	ff 90       	pop	r15
     be6:	ef 90       	pop	r14
     be8:	df 90       	pop	r13
     bea:	cf 90       	pop	r12
     bec:	bf 90       	pop	r11
     bee:	af 90       	pop	r10
     bf0:	9f 90       	pop	r9
     bf2:	8f 90       	pop	r8
     bf4:	7f 90       	pop	r7
     bf6:	6f 90       	pop	r6
     bf8:	5f 90       	pop	r5
     bfa:	4f 90       	pop	r4
     bfc:	3f 90       	pop	r3
     bfe:	2f 90       	pop	r2
     c00:	08 95       	ret

00000c02 <updateStateSpace>:

void updateStateSpace(int counter){
     c02:	8f 92       	push	r8
     c04:	9f 92       	push	r9
     c06:	af 92       	push	r10
     c08:	bf 92       	push	r11
     c0a:	cf 92       	push	r12
     c0c:	df 92       	push	r13
     c0e:	ef 92       	push	r14
     c10:	ff 92       	push	r15
     c12:	0f 93       	push	r16
     c14:	1f 93       	push	r17
     c16:	cf 93       	push	r28
     c18:	df 93       	push	r29
     c1a:	cd b7       	in	r28, 0x3d	; 61
     c1c:	de b7       	in	r29, 0x3e	; 62
     c1e:	68 97       	sbiw	r28, 0x18	; 24
     c20:	0f b6       	in	r0, 0x3f	; 63
     c22:	f8 94       	cli
     c24:	de bf       	out	0x3e, r29	; 62
     c26:	0f be       	out	0x3f, r0	; 63
     c28:	cd bf       	out	0x3d, r28	; 61
     c2a:	6c 01       	movw	r12, r24
	float buffer1[ParaARowSize][ParaXColSize];   // A*X
	MatDotProduct(&StateSpace.paraA[0][0], &StateSpace.xState[counter][0],
     c2c:	88 0f       	add	r24, r24
     c2e:	99 1f       	adc	r25, r25
     c30:	88 0f       	add	r24, r24
     c32:	99 1f       	adc	r25, r25
     c34:	88 0f       	add	r24, r24
     c36:	99 1f       	adc	r25, r25
     c38:	9c 01       	movw	r18, r24
     c3a:	26 53       	subi	r18, 0x36	; 54
     c3c:	3d 4f       	sbci	r19, 0xFD	; 253
     c3e:	59 01       	movw	r10, r18
     c40:	ee 24       	eor	r14, r14
     c42:	e3 94       	inc	r14
     c44:	f1 2c       	mov	r15, r1
     c46:	02 e0       	ldi	r16, 0x02	; 2
     c48:	10 e0       	ldi	r17, 0x00	; 0
     c4a:	22 e0       	ldi	r18, 0x02	; 2
     c4c:	30 e0       	ldi	r19, 0x00	; 0
     c4e:	ae 01       	movw	r20, r28
     c50:	4f 5f       	subi	r20, 0xFF	; 255
     c52:	5f 4f       	sbci	r21, 0xFF	; 255
     c54:	b5 01       	movw	r22, r10
     c56:	82 e8       	ldi	r24, 0x82	; 130
     c58:	97 e0       	ldi	r25, 0x07	; 7
     c5a:	aa dd       	rcall	.-1196   	; 0x7b0 <MatDotProduct>
		&buffer1[0][0], ParaARowSize, ParaAColSize, ParaXColSize);
		
	float buffer2[ParaBRowSize][ParaUColSize];  // B*U
	MatDotProduct(&StateSpace.paraB[0][0], &StateSpace.paraU[0][counter],
     c5c:	46 01       	movw	r8, r12
     c5e:	88 0c       	add	r8, r8
     c60:	99 1c       	adc	r9, r9
     c62:	88 0c       	add	r8, r8
     c64:	99 1c       	adc	r9, r9
     c66:	b4 01       	movw	r22, r8
     c68:	6a 55       	subi	r22, 0x5A	; 90
     c6a:	78 4f       	sbci	r23, 0xF8	; 248
     c6c:	01 e0       	ldi	r16, 0x01	; 1
     c6e:	10 e0       	ldi	r17, 0x00	; 0
     c70:	22 e0       	ldi	r18, 0x02	; 2
     c72:	30 e0       	ldi	r19, 0x00	; 0
     c74:	ae 01       	movw	r20, r28
     c76:	47 5f       	subi	r20, 0xF7	; 247
     c78:	5f 4f       	sbci	r21, 0xFF	; 255
     c7a:	82 e9       	ldi	r24, 0x92	; 146
     c7c:	97 e0       	ldi	r25, 0x07	; 7
     c7e:	98 dd       	rcall	.-1232   	; 0x7b0 <MatDotProduct>
		&buffer2[0][0], ParaBRowSize, ParaBColSize, ParaUColSize);
		
	MatPlus(&buffer1[0][0], &buffer2[0][0], &StateSpace.xState[counter+1][0],
     c80:	a6 01       	movw	r20, r12
     c82:	44 0f       	add	r20, r20
     c84:	55 1f       	adc	r21, r21
     c86:	44 0f       	add	r20, r20
     c88:	55 1f       	adc	r21, r21
     c8a:	44 0f       	add	r20, r20
     c8c:	55 1f       	adc	r21, r21
     c8e:	4e 52       	subi	r20, 0x2E	; 46
     c90:	5d 4f       	sbci	r21, 0xFD	; 253
     c92:	22 e0       	ldi	r18, 0x02	; 2
     c94:	30 e0       	ldi	r19, 0x00	; 0
     c96:	be 01       	movw	r22, r28
     c98:	67 5f       	subi	r22, 0xF7	; 247
     c9a:	7f 4f       	sbci	r23, 0xFF	; 255
     c9c:	ce 01       	movw	r24, r28
     c9e:	01 96       	adiw	r24, 0x01	; 1
     ca0:	35 df       	rcall	.-406    	; 0xb0c <MatPlus>
		ParaXRowSize, ParaXColSize);
	
	float buffer3[ParaCRowSize][ParaXColSize];  // C*X
	MatDotProduct(&StateSpace.paraC[0][0], &StateSpace.xState[counter][0],
     ca2:	02 e0       	ldi	r16, 0x02	; 2
     ca4:	10 e0       	ldi	r17, 0x00	; 0
     ca6:	21 e0       	ldi	r18, 0x01	; 1
     ca8:	30 e0       	ldi	r19, 0x00	; 0
     caa:	ae 01       	movw	r20, r28
     cac:	4f 5e       	subi	r20, 0xEF	; 239
     cae:	5f 4f       	sbci	r21, 0xFF	; 255
     cb0:	b5 01       	movw	r22, r10
     cb2:	8a e9       	ldi	r24, 0x9A	; 154
     cb4:	97 e0       	ldi	r25, 0x07	; 7
     cb6:	7c dd       	rcall	.-1288   	; 0x7b0 <MatDotProduct>
		&buffer3[0][0], ParaCRowSize, ParaCColSize, ParaXColSize);
		
	float buffer4[ParaDRowSize][ParaUColSize];  // DXU
	MatDotProduct(&StateSpace.paraD[0][0], &StateSpace.xState[counter][0],
     cb8:	01 e0       	ldi	r16, 0x01	; 1
     cba:	10 e0       	ldi	r17, 0x00	; 0
     cbc:	21 e0       	ldi	r18, 0x01	; 1
     cbe:	30 e0       	ldi	r19, 0x00	; 0
     cc0:	ae 01       	movw	r20, r28
     cc2:	4b 5e       	subi	r20, 0xEB	; 235
     cc4:	5f 4f       	sbci	r21, 0xFF	; 255
     cc6:	b5 01       	movw	r22, r10
     cc8:	82 ea       	ldi	r24, 0xA2	; 162
     cca:	97 e0       	ldi	r25, 0x07	; 7
     ccc:	71 dd       	rcall	.-1310   	; 0x7b0 <MatDotProduct>
		&buffer4[0][0], ParaDRowSize, ParaDColSize, ParaUColSize);
		
	MatPlus(&buffer3[0][0], &buffer4[0][0], &StateSpace.yState[counter][0],
     cce:	a4 01       	movw	r20, r8
     cd0:	4e 50       	subi	r20, 0x0E	; 14
     cd2:	5a 4f       	sbci	r21, 0xFA	; 250
     cd4:	21 e0       	ldi	r18, 0x01	; 1
     cd6:	30 e0       	ldi	r19, 0x00	; 0
     cd8:	be 01       	movw	r22, r28
     cda:	6b 5e       	subi	r22, 0xEB	; 235
     cdc:	7f 4f       	sbci	r23, 0xFF	; 255
     cde:	ce 01       	movw	r24, r28
     ce0:	41 96       	adiw	r24, 0x11	; 17
     ce2:	14 df       	rcall	.-472    	; 0xb0c <MatPlus>
		ParaYRowSize, ParaYColSize);
}
     ce4:	68 96       	adiw	r28, 0x18	; 24
     ce6:	0f b6       	in	r0, 0x3f	; 63
     ce8:	f8 94       	cli
     cea:	de bf       	out	0x3e, r29	; 62
     cec:	0f be       	out	0x3f, r0	; 63
     cee:	cd bf       	out	0x3d, r28	; 61
     cf0:	df 91       	pop	r29
     cf2:	cf 91       	pop	r28
     cf4:	1f 91       	pop	r17
     cf6:	0f 91       	pop	r16
     cf8:	ff 90       	pop	r15
     cfa:	ef 90       	pop	r14
     cfc:	df 90       	pop	r13
     cfe:	cf 90       	pop	r12
     d00:	bf 90       	pop	r11
     d02:	af 90       	pop	r10
     d04:	9f 90       	pop	r9
     d06:	8f 90       	pop	r8
     d08:	08 95       	ret

00000d0a <testDotProduct>:
		}
		_delay_ms(30000);
    }
}

void testDotProduct(){
     d0a:	2f 92       	push	r2
     d0c:	3f 92       	push	r3
     d0e:	4f 92       	push	r4
     d10:	5f 92       	push	r5
     d12:	6f 92       	push	r6
     d14:	7f 92       	push	r7
     d16:	8f 92       	push	r8
     d18:	9f 92       	push	r9
     d1a:	af 92       	push	r10
     d1c:	bf 92       	push	r11
     d1e:	cf 92       	push	r12
     d20:	df 92       	push	r13
     d22:	ef 92       	push	r14
     d24:	ff 92       	push	r15
     d26:	0f 93       	push	r16
     d28:	1f 93       	push	r17
     d2a:	cf 93       	push	r28
     d2c:	df 93       	push	r29
     d2e:	cd b7       	in	r28, 0x3d	; 61
     d30:	de b7       	in	r29, 0x3e	; 62
     d32:	c8 55       	subi	r28, 0x58	; 88
     d34:	d1 09       	sbc	r29, r1
     d36:	0f b6       	in	r0, 0x3f	; 63
     d38:	f8 94       	cli
     d3a:	de bf       	out	0x3e, r29	; 62
     d3c:	0f be       	out	0x3f, r0	; 63
     d3e:	cd bf       	out	0x3d, r28	; 61
	float mat1[3][2] = {{1,5}, {2.2,5.99}, {5.55, 8}};
     d40:	88 e1       	ldi	r24, 0x18	; 24
     d42:	e3 e1       	ldi	r30, 0x13	; 19
     d44:	f1 e0       	ldi	r31, 0x01	; 1
     d46:	de 01       	movw	r26, r28
     d48:	11 96       	adiw	r26, 0x01	; 1
     d4a:	01 90       	ld	r0, Z+
     d4c:	0d 92       	st	X+, r0
     d4e:	8a 95       	dec	r24
     d50:	e1 f7       	brne	.-8      	; 0xd4a <testDotProduct+0x40>
	float mat2[2][2] = {{2,5}, {-1, -2}};
     d52:	80 e1       	ldi	r24, 0x10	; 16
     d54:	eb e2       	ldi	r30, 0x2B	; 43
     d56:	f1 e0       	ldi	r31, 0x01	; 1
     d58:	de 01       	movw	r26, r28
     d5a:	59 96       	adiw	r26, 0x19	; 25
     d5c:	01 90       	ld	r0, Z+
     d5e:	0d 92       	st	X+, r0
     d60:	8a 95       	dec	r24
     d62:	e1 f7       	brne	.-8      	; 0xd5c <testDotProduct+0x52>
	float ans[3][2] = {{-3, -5}, {-1.59, -0.98}, {3.1, 11.75}};
     d64:	88 e1       	ldi	r24, 0x18	; 24
     d66:	eb e3       	ldi	r30, 0x3B	; 59
     d68:	f1 e0       	ldi	r31, 0x01	; 1
     d6a:	de 01       	movw	r26, r28
     d6c:	99 96       	adiw	r26, 0x29	; 41
     d6e:	01 90       	ld	r0, Z+
     d70:	0d 92       	st	X+, r0
     d72:	8a 95       	dec	r24
     d74:	e1 f7       	brne	.-8      	; 0xd6e <testDotProduct+0x64>
	float buffer[3][2];
	MatDotProduct(&mat1[0][0], &mat2[0][0], &buffer[0][0], 3, 2, 2);
     d76:	68 94       	set
     d78:	ee 24       	eor	r14, r14
     d7a:	e1 f8       	bld	r14, 1
     d7c:	f1 2c       	mov	r15, r1
     d7e:	02 e0       	ldi	r16, 0x02	; 2
     d80:	10 e0       	ldi	r17, 0x00	; 0
     d82:	23 e0       	ldi	r18, 0x03	; 3
     d84:	30 e0       	ldi	r19, 0x00	; 0
     d86:	ae 01       	movw	r20, r28
     d88:	4f 5b       	subi	r20, 0xBF	; 191
     d8a:	5f 4f       	sbci	r21, 0xFF	; 255
     d8c:	be 01       	movw	r22, r28
     d8e:	67 5e       	subi	r22, 0xE7	; 231
     d90:	7f 4f       	sbci	r23, 0xFF	; 255
     d92:	ce 01       	movw	r24, r28
     d94:	01 96       	adiw	r24, 0x01	; 1
     d96:	0c dd       	rcall	.-1512   	; 0x7b0 <MatDotProduct>
     d98:	8e 01       	movw	r16, r28
     d9a:	07 5d       	subi	r16, 0xD7	; 215
     d9c:	1f 4f       	sbci	r17, 0xFF	; 255
     d9e:	ce 01       	movw	r24, r28
     da0:	8f 5b       	subi	r24, 0xBF	; 191
     da2:	9f 4f       	sbci	r25, 0xFF	; 255
     da4:	7c 01       	movw	r14, r24
     da6:	18 01       	movw	r2, r16
     da8:	98 e1       	ldi	r25, 0x18	; 24
     daa:	29 0e       	add	r2, r25
     dac:	31 1c       	adc	r3, r1
	int correctCNT = 0;
     dae:	81 2c       	mov	r8, r1
     db0:	91 2c       	mov	r9, r1
     db2:	15 c0       	rjmp	.+42     	; 0xdde <testDotProduct+0xd4>
	for(int i=0;i<3;i++){
		for(int j=0;j<2;j++){
			float ratio = ans[i][j]/buffer[i][j];
			if(ratio > 0.999 && ratio < 1.001){
     db4:	25 ec       	ldi	r18, 0xC5	; 197
     db6:	30 e2       	ldi	r19, 0x20	; 32
     db8:	40 e8       	ldi	r20, 0x80	; 128
     dba:	5f e3       	ldi	r21, 0x3F	; 63
     dbc:	c3 01       	movw	r24, r6
     dbe:	b2 01       	movw	r22, r4
     dc0:	93 d2       	rcall	.+1318   	; 0x12e8 <__cmpsf2>
     dc2:	88 23       	and	r24, r24
     dc4:	1c f4       	brge	.+6      	; 0xdcc <testDotProduct+0xc2>
				correctCNT++;
     dc6:	ef ef       	ldi	r30, 0xFF	; 255
     dc8:	8e 1a       	sub	r8, r30
     dca:	9e 0a       	sbc	r9, r30
     dcc:	08 5f       	subi	r16, 0xF8	; 248
     dce:	1f 4f       	sbci	r17, 0xFF	; 255
     dd0:	f8 e0       	ldi	r31, 0x08	; 8
     dd2:	ef 0e       	add	r14, r31
     dd4:	f1 1c       	adc	r15, r1
	float mat2[2][2] = {{2,5}, {-1, -2}};
	float ans[3][2] = {{-3, -5}, {-1.59, -0.98}, {3.1, 11.75}};
	float buffer[3][2];
	MatDotProduct(&mat1[0][0], &mat2[0][0], &buffer[0][0], 3, 2, 2);
	int correctCNT = 0;
	for(int i=0;i<3;i++){
     dd6:	20 16       	cp	r2, r16
     dd8:	31 06       	cpc	r3, r17
     dda:	09 f4       	brne	.+2      	; 0xdde <testDotProduct+0xd4>
     ddc:	38 c0       	rjmp	.+112    	; 0xe4e <testDotProduct+0x144>
     dde:	68 01       	movw	r12, r16
     de0:	57 01       	movw	r10, r14
		for(int j=0;j<2;j++){
			float ratio = ans[i][j]/buffer[i][j];
     de2:	f7 01       	movw	r30, r14
     de4:	20 81       	ld	r18, Z
     de6:	31 81       	ldd	r19, Z+1	; 0x01
     de8:	42 81       	ldd	r20, Z+2	; 0x02
     dea:	53 81       	ldd	r21, Z+3	; 0x03
     dec:	f8 01       	movw	r30, r16
     dee:	60 81       	ld	r22, Z
     df0:	71 81       	ldd	r23, Z+1	; 0x01
     df2:	82 81       	ldd	r24, Z+2	; 0x02
     df4:	93 81       	ldd	r25, Z+3	; 0x03
     df6:	7c d2       	rcall	.+1272   	; 0x12f0 <__divsf3>
     df8:	2b 01       	movw	r4, r22
     dfa:	3c 01       	movw	r6, r24
			if(ratio > 0.999 && ratio < 1.001){
     dfc:	27 e7       	ldi	r18, 0x77	; 119
     dfe:	3e eb       	ldi	r19, 0xBE	; 190
     e00:	4f e7       	ldi	r20, 0x7F	; 127
     e02:	5f e3       	ldi	r21, 0x3F	; 63
     e04:	52 d3       	rcall	.+1700   	; 0x14aa <__gesf2>
     e06:	18 16       	cp	r1, r24
     e08:	64 f4       	brge	.+24     	; 0xe22 <testDotProduct+0x118>
     e0a:	25 ec       	ldi	r18, 0xC5	; 197
     e0c:	30 e2       	ldi	r19, 0x20	; 32
     e0e:	40 e8       	ldi	r20, 0x80	; 128
     e10:	5f e3       	ldi	r21, 0x3F	; 63
     e12:	c3 01       	movw	r24, r6
     e14:	b2 01       	movw	r22, r4
     e16:	68 d2       	rcall	.+1232   	; 0x12e8 <__cmpsf2>
     e18:	88 23       	and	r24, r24
     e1a:	1c f4       	brge	.+6      	; 0xe22 <testDotProduct+0x118>
				correctCNT++;
     e1c:	ff ef       	ldi	r31, 0xFF	; 255
     e1e:	8f 1a       	sub	r8, r31
     e20:	9f 0a       	sbc	r9, r31
	float buffer[3][2];
	MatDotProduct(&mat1[0][0], &mat2[0][0], &buffer[0][0], 3, 2, 2);
	int correctCNT = 0;
	for(int i=0;i<3;i++){
		for(int j=0;j<2;j++){
			float ratio = ans[i][j]/buffer[i][j];
     e22:	f5 01       	movw	r30, r10
     e24:	24 81       	ldd	r18, Z+4	; 0x04
     e26:	35 81       	ldd	r19, Z+5	; 0x05
     e28:	46 81       	ldd	r20, Z+6	; 0x06
     e2a:	57 81       	ldd	r21, Z+7	; 0x07
     e2c:	f6 01       	movw	r30, r12
     e2e:	64 81       	ldd	r22, Z+4	; 0x04
     e30:	75 81       	ldd	r23, Z+5	; 0x05
     e32:	86 81       	ldd	r24, Z+6	; 0x06
     e34:	97 81       	ldd	r25, Z+7	; 0x07
     e36:	5c d2       	rcall	.+1208   	; 0x12f0 <__divsf3>
     e38:	2b 01       	movw	r4, r22
			if(ratio > 0.999 && ratio < 1.001){
     e3a:	3c 01       	movw	r6, r24
     e3c:	27 e7       	ldi	r18, 0x77	; 119
     e3e:	3e eb       	ldi	r19, 0xBE	; 190
     e40:	4f e7       	ldi	r20, 0x7F	; 127
     e42:	5f e3       	ldi	r21, 0x3F	; 63
     e44:	32 d3       	rcall	.+1636   	; 0x14aa <__gesf2>
     e46:	18 16       	cp	r1, r24
     e48:	0c f4       	brge	.+2      	; 0xe4c <testDotProduct+0x142>
     e4a:	b4 cf       	rjmp	.-152    	; 0xdb4 <testDotProduct+0xaa>
     e4c:	bf cf       	rjmp	.-130    	; 0xdcc <testDotProduct+0xc2>
				correctCNT++;
			}
			//printf("=== %f, %f ===\n", ans[i][j], buffer[i][j]);
		}
	}
	if(correctCNT == 6){
     e4e:	f6 e0       	ldi	r31, 0x06	; 6
     e50:	8f 16       	cp	r8, r31
     e52:	91 04       	cpc	r9, r1
     e54:	29 f4       	brne	.+10     	; 0xe60 <testDotProduct+0x156>
		printf("Test Dot Product Success !!!\n");
     e56:	8b ef       	ldi	r24, 0xFB	; 251
     e58:	91 e0       	ldi	r25, 0x01	; 1
     e5a:	0e 94 42 14 	call	0x2884	; 0x2884 <puts>
     e5e:	04 c0       	rjmp	.+8      	; 0xe68 <testDotProduct+0x15e>
	}
	else{
		printf("Test Dot Product Fail !!!\n");
     e60:	88 e1       	ldi	r24, 0x18	; 24
     e62:	92 e0       	ldi	r25, 0x02	; 2
     e64:	0e 94 42 14 	call	0x2884	; 0x2884 <puts>
	}
}
     e68:	c8 5a       	subi	r28, 0xA8	; 168
     e6a:	df 4f       	sbci	r29, 0xFF	; 255
     e6c:	0f b6       	in	r0, 0x3f	; 63
     e6e:	f8 94       	cli
     e70:	de bf       	out	0x3e, r29	; 62
     e72:	0f be       	out	0x3f, r0	; 63
     e74:	cd bf       	out	0x3d, r28	; 61
     e76:	df 91       	pop	r29
     e78:	cf 91       	pop	r28
     e7a:	1f 91       	pop	r17
     e7c:	0f 91       	pop	r16
     e7e:	ff 90       	pop	r15
     e80:	ef 90       	pop	r14
     e82:	df 90       	pop	r13
     e84:	cf 90       	pop	r12
     e86:	bf 90       	pop	r11
     e88:	af 90       	pop	r10
     e8a:	9f 90       	pop	r9
     e8c:	8f 90       	pop	r8
     e8e:	7f 90       	pop	r7
     e90:	6f 90       	pop	r6
     e92:	5f 90       	pop	r5
     e94:	4f 90       	pop	r4
     e96:	3f 90       	pop	r3
     e98:	2f 90       	pop	r2
     e9a:	08 95       	ret

00000e9c <testPlusMat>:
void testPlusMat(){
     e9c:	2f 92       	push	r2
     e9e:	3f 92       	push	r3
     ea0:	4f 92       	push	r4
     ea2:	5f 92       	push	r5
     ea4:	6f 92       	push	r6
     ea6:	7f 92       	push	r7
     ea8:	8f 92       	push	r8
     eaa:	9f 92       	push	r9
     eac:	af 92       	push	r10
     eae:	bf 92       	push	r11
     eb0:	cf 92       	push	r12
     eb2:	df 92       	push	r13
     eb4:	ef 92       	push	r14
     eb6:	ff 92       	push	r15
     eb8:	0f 93       	push	r16
     eba:	1f 93       	push	r17
     ebc:	cf 93       	push	r28
     ebe:	df 93       	push	r29
     ec0:	cd b7       	in	r28, 0x3d	; 61
     ec2:	de b7       	in	r29, 0x3e	; 62
     ec4:	c0 56       	subi	r28, 0x60	; 96
     ec6:	d1 09       	sbc	r29, r1
     ec8:	0f b6       	in	r0, 0x3f	; 63
     eca:	f8 94       	cli
     ecc:	de bf       	out	0x3e, r29	; 62
     ece:	0f be       	out	0x3f, r0	; 63
     ed0:	cd bf       	out	0x3d, r28	; 61
	float mat1[3][2] = {{1,5}, {2.2,5.99}, {5.55, 8}};
     ed2:	88 e1       	ldi	r24, 0x18	; 24
     ed4:	e3 e1       	ldi	r30, 0x13	; 19
     ed6:	f1 e0       	ldi	r31, 0x01	; 1
     ed8:	de 01       	movw	r26, r28
     eda:	11 96       	adiw	r26, 0x01	; 1
     edc:	01 90       	ld	r0, Z+
     ede:	0d 92       	st	X+, r0
     ee0:	8a 95       	dec	r24
     ee2:	e1 f7       	brne	.-8      	; 0xedc <testPlusMat+0x40>
	float mat2[3][2] = {{2,5}, {-1, -2}, {2.23, 3.55}};
     ee4:	88 e1       	ldi	r24, 0x18	; 24
     ee6:	e3 e5       	ldi	r30, 0x53	; 83
     ee8:	f1 e0       	ldi	r31, 0x01	; 1
     eea:	de 01       	movw	r26, r28
     eec:	59 96       	adiw	r26, 0x19	; 25
     eee:	01 90       	ld	r0, Z+
     ef0:	0d 92       	st	X+, r0
     ef2:	8a 95       	dec	r24
     ef4:	e1 f7       	brne	.-8      	; 0xeee <testPlusMat+0x52>
	float ans[3][2] = {{3, 10}, {1.2, 3.99}, {7.78, 11.55}};
     ef6:	88 e1       	ldi	r24, 0x18	; 24
     ef8:	eb e6       	ldi	r30, 0x6B	; 107
     efa:	f1 e0       	ldi	r31, 0x01	; 1
     efc:	de 01       	movw	r26, r28
     efe:	d1 96       	adiw	r26, 0x31	; 49
     f00:	01 90       	ld	r0, Z+
     f02:	0d 92       	st	X+, r0
     f04:	8a 95       	dec	r24
     f06:	e1 f7       	brne	.-8      	; 0xf00 <testPlusMat+0x64>
	float buffer[3][2];
	MatPlus(&mat1[0][0], &mat2[0][0], &buffer[0][0], 3, 2);
     f08:	02 e0       	ldi	r16, 0x02	; 2
     f0a:	10 e0       	ldi	r17, 0x00	; 0
     f0c:	23 e0       	ldi	r18, 0x03	; 3
     f0e:	30 e0       	ldi	r19, 0x00	; 0
     f10:	ae 01       	movw	r20, r28
     f12:	47 5b       	subi	r20, 0xB7	; 183
     f14:	5f 4f       	sbci	r21, 0xFF	; 255
     f16:	be 01       	movw	r22, r28
     f18:	67 5e       	subi	r22, 0xE7	; 231
     f1a:	7f 4f       	sbci	r23, 0xFF	; 255
     f1c:	ce 01       	movw	r24, r28
     f1e:	01 96       	adiw	r24, 0x01	; 1
     f20:	f5 dd       	rcall	.-1046   	; 0xb0c <MatPlus>
     f22:	8e 01       	movw	r16, r28
     f24:	0f 5c       	subi	r16, 0xCF	; 207
     f26:	1f 4f       	sbci	r17, 0xFF	; 255
     f28:	ce 01       	movw	r24, r28
     f2a:	87 5b       	subi	r24, 0xB7	; 183
     f2c:	9f 4f       	sbci	r25, 0xFF	; 255
     f2e:	7c 01       	movw	r14, r24
     f30:	18 01       	movw	r2, r16
     f32:	98 e1       	ldi	r25, 0x18	; 24
     f34:	29 0e       	add	r2, r25
     f36:	31 1c       	adc	r3, r1
	int correctCNT = 0;
     f38:	81 2c       	mov	r8, r1
     f3a:	91 2c       	mov	r9, r1
     f3c:	15 c0       	rjmp	.+42     	; 0xf68 <testPlusMat+0xcc>
	for(int i=0;i<3;i++){
		for(int j=0;j<2;j++){
			float ratio = ans[i][j]/buffer[i][j];
			if(ratio > 0.999 && ratio < 1.001){
     f3e:	25 ec       	ldi	r18, 0xC5	; 197
     f40:	30 e2       	ldi	r19, 0x20	; 32
     f42:	40 e8       	ldi	r20, 0x80	; 128
     f44:	5f e3       	ldi	r21, 0x3F	; 63
     f46:	c3 01       	movw	r24, r6
     f48:	b2 01       	movw	r22, r4
     f4a:	ce d1       	rcall	.+924    	; 0x12e8 <__cmpsf2>
     f4c:	88 23       	and	r24, r24
     f4e:	1c f4       	brge	.+6      	; 0xf56 <testPlusMat+0xba>
				correctCNT++;
     f50:	ef ef       	ldi	r30, 0xFF	; 255
     f52:	8e 1a       	sub	r8, r30
     f54:	9e 0a       	sbc	r9, r30
     f56:	08 5f       	subi	r16, 0xF8	; 248
     f58:	1f 4f       	sbci	r17, 0xFF	; 255
     f5a:	f8 e0       	ldi	r31, 0x08	; 8
     f5c:	ef 0e       	add	r14, r31
     f5e:	f1 1c       	adc	r15, r1
	float mat2[3][2] = {{2,5}, {-1, -2}, {2.23, 3.55}};
	float ans[3][2] = {{3, 10}, {1.2, 3.99}, {7.78, 11.55}};
	float buffer[3][2];
	MatPlus(&mat1[0][0], &mat2[0][0], &buffer[0][0], 3, 2);
	int correctCNT = 0;
	for(int i=0;i<3;i++){
     f60:	20 16       	cp	r2, r16
     f62:	31 06       	cpc	r3, r17
     f64:	09 f4       	brne	.+2      	; 0xf68 <testPlusMat+0xcc>
     f66:	38 c0       	rjmp	.+112    	; 0xfd8 <testPlusMat+0x13c>
     f68:	68 01       	movw	r12, r16
     f6a:	57 01       	movw	r10, r14
		for(int j=0;j<2;j++){
			float ratio = ans[i][j]/buffer[i][j];
     f6c:	f7 01       	movw	r30, r14
     f6e:	20 81       	ld	r18, Z
     f70:	31 81       	ldd	r19, Z+1	; 0x01
     f72:	42 81       	ldd	r20, Z+2	; 0x02
     f74:	53 81       	ldd	r21, Z+3	; 0x03
     f76:	f8 01       	movw	r30, r16
     f78:	60 81       	ld	r22, Z
     f7a:	71 81       	ldd	r23, Z+1	; 0x01
     f7c:	82 81       	ldd	r24, Z+2	; 0x02
     f7e:	93 81       	ldd	r25, Z+3	; 0x03
     f80:	b7 d1       	rcall	.+878    	; 0x12f0 <__divsf3>
     f82:	2b 01       	movw	r4, r22
     f84:	3c 01       	movw	r6, r24
			if(ratio > 0.999 && ratio < 1.001){
     f86:	27 e7       	ldi	r18, 0x77	; 119
     f88:	3e eb       	ldi	r19, 0xBE	; 190
     f8a:	4f e7       	ldi	r20, 0x7F	; 127
     f8c:	5f e3       	ldi	r21, 0x3F	; 63
     f8e:	8d d2       	rcall	.+1306   	; 0x14aa <__gesf2>
     f90:	18 16       	cp	r1, r24
     f92:	64 f4       	brge	.+24     	; 0xfac <testPlusMat+0x110>
     f94:	25 ec       	ldi	r18, 0xC5	; 197
     f96:	30 e2       	ldi	r19, 0x20	; 32
     f98:	40 e8       	ldi	r20, 0x80	; 128
     f9a:	5f e3       	ldi	r21, 0x3F	; 63
     f9c:	c3 01       	movw	r24, r6
     f9e:	b2 01       	movw	r22, r4
     fa0:	a3 d1       	rcall	.+838    	; 0x12e8 <__cmpsf2>
     fa2:	88 23       	and	r24, r24
     fa4:	1c f4       	brge	.+6      	; 0xfac <testPlusMat+0x110>
				correctCNT++;
     fa6:	ff ef       	ldi	r31, 0xFF	; 255
     fa8:	8f 1a       	sub	r8, r31
     faa:	9f 0a       	sbc	r9, r31
	float buffer[3][2];
	MatPlus(&mat1[0][0], &mat2[0][0], &buffer[0][0], 3, 2);
	int correctCNT = 0;
	for(int i=0;i<3;i++){
		for(int j=0;j<2;j++){
			float ratio = ans[i][j]/buffer[i][j];
     fac:	f5 01       	movw	r30, r10
     fae:	24 81       	ldd	r18, Z+4	; 0x04
     fb0:	35 81       	ldd	r19, Z+5	; 0x05
     fb2:	46 81       	ldd	r20, Z+6	; 0x06
     fb4:	57 81       	ldd	r21, Z+7	; 0x07
     fb6:	f6 01       	movw	r30, r12
     fb8:	64 81       	ldd	r22, Z+4	; 0x04
     fba:	75 81       	ldd	r23, Z+5	; 0x05
     fbc:	86 81       	ldd	r24, Z+6	; 0x06
     fbe:	97 81       	ldd	r25, Z+7	; 0x07
     fc0:	97 d1       	rcall	.+814    	; 0x12f0 <__divsf3>
     fc2:	2b 01       	movw	r4, r22
			if(ratio > 0.999 && ratio < 1.001){
     fc4:	3c 01       	movw	r6, r24
     fc6:	27 e7       	ldi	r18, 0x77	; 119
     fc8:	3e eb       	ldi	r19, 0xBE	; 190
     fca:	4f e7       	ldi	r20, 0x7F	; 127
     fcc:	5f e3       	ldi	r21, 0x3F	; 63
     fce:	6d d2       	rcall	.+1242   	; 0x14aa <__gesf2>
     fd0:	18 16       	cp	r1, r24
     fd2:	0c f4       	brge	.+2      	; 0xfd6 <testPlusMat+0x13a>
     fd4:	b4 cf       	rjmp	.-152    	; 0xf3e <testPlusMat+0xa2>
     fd6:	bf cf       	rjmp	.-130    	; 0xf56 <testPlusMat+0xba>
				correctCNT++;
			}
			//printf("=== %f, %f ===\n", ans[i][j], buffer[i][j]);
		}
	}
	if(correctCNT == 6){
     fd8:	f6 e0       	ldi	r31, 0x06	; 6
     fda:	8f 16       	cp	r8, r31
     fdc:	91 04       	cpc	r9, r1
     fde:	29 f4       	brne	.+10     	; 0xfea <testPlusMat+0x14e>
		printf("Test Plus Success !!!\n");
     fe0:	82 e3       	ldi	r24, 0x32	; 50
     fe2:	92 e0       	ldi	r25, 0x02	; 2
     fe4:	0e 94 42 14 	call	0x2884	; 0x2884 <puts>
     fe8:	04 c0       	rjmp	.+8      	; 0xff2 <testPlusMat+0x156>
	}
	else{
		printf("Test Plus Fail !!!\n");
     fea:	88 e4       	ldi	r24, 0x48	; 72
     fec:	92 e0       	ldi	r25, 0x02	; 2
     fee:	0e 94 42 14 	call	0x2884	; 0x2884 <puts>
	}
}
     ff2:	c0 5a       	subi	r28, 0xA0	; 160
     ff4:	df 4f       	sbci	r29, 0xFF	; 255
     ff6:	0f b6       	in	r0, 0x3f	; 63
     ff8:	f8 94       	cli
     ffa:	de bf       	out	0x3e, r29	; 62
     ffc:	0f be       	out	0x3f, r0	; 63
     ffe:	cd bf       	out	0x3d, r28	; 61
    1000:	df 91       	pop	r29
    1002:	cf 91       	pop	r28
    1004:	1f 91       	pop	r17
    1006:	0f 91       	pop	r16
    1008:	ff 90       	pop	r15
    100a:	ef 90       	pop	r14
    100c:	df 90       	pop	r13
    100e:	cf 90       	pop	r12
    1010:	bf 90       	pop	r11
    1012:	af 90       	pop	r10
    1014:	9f 90       	pop	r9
    1016:	8f 90       	pop	r8
    1018:	7f 90       	pop	r7
    101a:	6f 90       	pop	r6
    101c:	5f 90       	pop	r5
    101e:	4f 90       	pop	r4
    1020:	3f 90       	pop	r3
    1022:	2f 90       	pop	r2
    1024:	08 95       	ret

00001026 <main>:
		&buffer4[0][0], ParaDRowSize, ParaDColSize, ParaUColSize);
		
	MatPlus(&buffer3[0][0], &buffer4[0][0], &StateSpace.yState[counter][0],
		ParaYRowSize, ParaYColSize);
}
int main(void){
    1026:	cf 93       	push	r28
    1028:	df 93       	push	r29
    102a:	cd b7       	in	r28, 0x3d	; 61
    102c:	de b7       	in	r29, 0x3e	; 62
    102e:	a4 97       	sbiw	r28, 0x24	; 36
    1030:	0f b6       	in	r0, 0x3f	; 63
    1032:	f8 94       	cli
    1034:	de bf       	out	0x3e, r29	; 62
    1036:	0f be       	out	0x3f, r0	; 63
    1038:	cd bf       	out	0x3d, r28	; 61
	ASA_M128_set();
    103a:	ba d9       	rcall	.-3212   	; 0x3b0 <ASA_M128_set>
	printf("Main code ~\n");
    103c:	8b e5       	ldi	r24, 0x5B	; 91
    103e:	92 e0       	ldi	r25, 0x02	; 2
    1040:	0e 94 42 14 	call	0x2884	; 0x2884 <puts>
	float ParameterA[ParaARowSize][ParaAColSize] = {{1.35, 0.55}, {-0.45, 0.35}};
    1044:	80 e1       	ldi	r24, 0x10	; 16
    1046:	e3 e8       	ldi	r30, 0x83	; 131
    1048:	f1 e0       	ldi	r31, 0x01	; 1
    104a:	de 01       	movw	r26, r28
    104c:	11 96       	adiw	r26, 0x01	; 1
    104e:	01 90       	ld	r0, Z+
    1050:	0d 92       	st	X+, r0
    1052:	8a 95       	dec	r24
    1054:	e1 f7       	brne	.-8      	; 0x104e <main+0x28>
	float ParameterB[ParaBRowSize][ParaBColSize] = {{0.5}, {0.5}};
    1056:	88 e0       	ldi	r24, 0x08	; 8
    1058:	e3 e9       	ldi	r30, 0x93	; 147
    105a:	f1 e0       	ldi	r31, 0x01	; 1
    105c:	de 01       	movw	r26, r28
    105e:	51 96       	adiw	r26, 0x11	; 17
    1060:	01 90       	ld	r0, Z+
    1062:	0d 92       	st	X+, r0
    1064:	8a 95       	dec	r24
    1066:	e1 f7       	brne	.-8      	; 0x1060 <main+0x3a>
	float ParameterC[ParaCRowSize][ParaCColSize] = {{3, 1}};
    1068:	88 e0       	ldi	r24, 0x08	; 8
    106a:	eb e9       	ldi	r30, 0x9B	; 155
    106c:	f1 e0       	ldi	r31, 0x01	; 1
    106e:	de 01       	movw	r26, r28
    1070:	59 96       	adiw	r26, 0x19	; 25
    1072:	01 90       	ld	r0, Z+
    1074:	0d 92       	st	X+, r0
    1076:	8a 95       	dec	r24
    1078:	e1 f7       	brne	.-8      	; 0x1072 <main+0x4c>
	float ParameterD[ParaDRowSize][ParaDColSize] = {{1}};
    107a:	80 e0       	ldi	r24, 0x00	; 0
    107c:	90 e0       	ldi	r25, 0x00	; 0
    107e:	a0 e8       	ldi	r26, 0x80	; 128
    1080:	bf e3       	ldi	r27, 0x3F	; 63
    1082:	89 a3       	std	Y+33, r24	; 0x21
    1084:	9a a3       	std	Y+34, r25	; 0x22
    1086:	ab a3       	std	Y+35, r26	; 0x23
    1088:	bc a3       	std	Y+36, r27	; 0x24
	StateSpace.xState[0][0] = 0;
    108a:	e8 ec       	ldi	r30, 0xC8	; 200
    108c:	f2 e0       	ldi	r31, 0x02	; 2
    108e:	12 82       	std	Z+2, r1	; 0x02
    1090:	13 82       	std	Z+3, r1	; 0x03
    1092:	14 82       	std	Z+4, r1	; 0x04
    1094:	15 82       	std	Z+5, r1	; 0x05
	StateSpace.xState[0][1] = 0;
    1096:	16 82       	std	Z+6, r1	; 0x06
    1098:	17 82       	std	Z+7, r1	; 0x07
    109a:	10 86       	std	Z+8, r1	; 0x08
	testDotProduct();
    109c:	11 86       	std	Z+9, r1	; 0x09
	testPlusMat();
    109e:	35 de       	rcall	.-918    	; 0xd0a <testDotProduct>
    10a0:	fd de       	rcall	.-518    	; 0xe9c <testPlusMat>
	printf("Initialize parameters ...\n");
    10a2:	87 e6       	ldi	r24, 0x67	; 103
    10a4:	92 e0       	ldi	r25, 0x02	; 2
    10a6:	0e 94 42 14 	call	0x2884	; 0x2884 <puts>
	setMatrixTheSame(&StateSpace.paraA[0][0], &ParameterA[0][0], ParaARowSize, ParaAColSize);
    10aa:	22 e0       	ldi	r18, 0x02	; 2
    10ac:	30 e0       	ldi	r19, 0x00	; 0
    10ae:	42 e0       	ldi	r20, 0x02	; 2
    10b0:	50 e0       	ldi	r21, 0x00	; 0
    10b2:	be 01       	movw	r22, r28
    10b4:	6f 5f       	subi	r22, 0xFF	; 255
    10b6:	7f 4f       	sbci	r23, 0xFF	; 255
    10b8:	82 e8       	ldi	r24, 0x82	; 130
    10ba:	97 e0       	ldi	r25, 0x07	; 7
    10bc:	1b db       	rcall	.-2506   	; 0x6f4 <setMatrixTheSame>
	setMatrixTheSame(&StateSpace.paraB[0][0], &ParameterB[0][0], ParaBRowSize, ParaBColSize);
    10be:	21 e0       	ldi	r18, 0x01	; 1
    10c0:	30 e0       	ldi	r19, 0x00	; 0
    10c2:	42 e0       	ldi	r20, 0x02	; 2
    10c4:	50 e0       	ldi	r21, 0x00	; 0
    10c6:	be 01       	movw	r22, r28
    10c8:	6f 5e       	subi	r22, 0xEF	; 239
    10ca:	7f 4f       	sbci	r23, 0xFF	; 255
    10cc:	82 e9       	ldi	r24, 0x92	; 146
    10ce:	97 e0       	ldi	r25, 0x07	; 7
    10d0:	11 db       	rcall	.-2526   	; 0x6f4 <setMatrixTheSame>
	setMatrixTheSame(&StateSpace.paraC[0][0], &ParameterC[0][0], ParaCRowSize, ParaCColSize);
    10d2:	22 e0       	ldi	r18, 0x02	; 2
    10d4:	30 e0       	ldi	r19, 0x00	; 0
    10d6:	41 e0       	ldi	r20, 0x01	; 1
    10d8:	50 e0       	ldi	r21, 0x00	; 0
    10da:	be 01       	movw	r22, r28
    10dc:	67 5e       	subi	r22, 0xE7	; 231
    10de:	7f 4f       	sbci	r23, 0xFF	; 255
    10e0:	8a e9       	ldi	r24, 0x9A	; 154
    10e2:	97 e0       	ldi	r25, 0x07	; 7
    10e4:	07 db       	rcall	.-2546   	; 0x6f4 <setMatrixTheSame>
	setMatrixTheSame(&StateSpace.paraD[0][0], &ParameterD[0][0], ParaDRowSize, ParaDColSize);
    10e6:	21 e0       	ldi	r18, 0x01	; 1
    10e8:	30 e0       	ldi	r19, 0x00	; 0
    10ea:	41 e0       	ldi	r20, 0x01	; 1
    10ec:	50 e0       	ldi	r21, 0x00	; 0
    10ee:	be 01       	movw	r22, r28
    10f0:	6f 5d       	subi	r22, 0xDF	; 223
    10f2:	7f 4f       	sbci	r23, 0xFF	; 255
    10f4:	82 ea       	ldi	r24, 0xA2	; 162
	printParameter();
    10f6:	97 e0       	ldi	r25, 0x07	; 7
    10f8:	fd da       	rcall	.-2566   	; 0x6f4 <setMatrixTheSame>
	initStateStateInput();
    10fa:	2e da       	rcall	.-2980   	; 0x558 <printParameter>
    10fc:	3c db       	rcall	.-2440   	; 0x776 <initStateStateInput>
    while (1) {
		for(int counter=0;counter<ExecuteTimes;counter++){
			updateStateSpace(counter);
			printf("%.2f, %.2f, %.2f\n", StateSpace.xState[counter][0], StateSpace.xState[counter][1],
    10fe:	0f 2e       	mov	r0, r31
    1100:	f1 e8       	ldi	r31, 0x81	; 129
    1102:	8f 2e       	mov	r8, r31
    1104:	f2 e0       	ldi	r31, 0x02	; 2
    1106:	9f 2e       	mov	r9, r31
    1108:	f0 2d       	mov	r31, r0
									StateSpace.yState[counter][0]);
			sendStruct.C = counter;
    110a:	0f 2e       	mov	r0, r31
    110c:	fa eb       	ldi	r31, 0xBA	; 186
    110e:	af 2e       	mov	r10, r31
    1110:	f2 e0       	ldi	r31, 0x02	; 2
    1112:	bf 2e       	mov	r11, r31
    1114:	f0 2d       	mov	r31, r0
			sendStruct.X0 = StateSpace.xState[counter][0];
			sendStruct.X1 = StateSpace.xState[counter][1];
			sendStruct.y = StateSpace.yState[counter][0];
			char check = M128_HMI_Form_put("ui16x1,f32x1,f32x1,f32x1", 14, &sendStruct);
			if(check) printf("Error -> %d\n", check);
    1116:	0f 2e       	mov	r0, r31
    1118:	fc ea       	ldi	r31, 0xAC	; 172
    111a:	4f 2e       	mov	r4, r31
    111c:	f2 e0       	ldi	r31, 0x02	; 2
    111e:	5f 2e       	mov	r5, r31
    1120:	f0 2d       	mov	r31, r0
    while (1) {
		for(int counter=0;counter<ExecuteTimes;counter++){
			updateStateSpace(counter);
			printf("%.2f, %.2f, %.2f\n", StateSpace.xState[counter][0], StateSpace.xState[counter][1],
									StateSpace.yState[counter][0]);
			sendStruct.C = counter;
    1122:	2a 2c       	mov	r2, r10
    1124:	3b 2c       	mov	r3, r11
    1126:	0a ec       	ldi	r16, 0xCA	; 202
    1128:	12 e0       	ldi	r17, 0x02	; 2
    112a:	0f 2e       	mov	r0, r31
    112c:	f2 ef       	ldi	r31, 0xF2	; 242
    112e:	ef 2e       	mov	r14, r31
    1130:	f5 e0       	ldi	r31, 0x05	; 5
    1132:	ff 2e       	mov	r15, r31
	setMatrixTheSame(&StateSpace.paraC[0][0], &ParameterC[0][0], ParaCRowSize, ParaCColSize);
	setMatrixTheSame(&StateSpace.paraD[0][0], &ParameterD[0][0], ParaDRowSize, ParaDColSize);
	printParameter();
	initStateStateInput();
    while (1) {
		for(int counter=0;counter<ExecuteTimes;counter++){
    1134:	f0 2d       	mov	r31, r0
    1136:	c1 2c       	mov	r12, r1
			updateStateSpace(counter);
    1138:	d1 2c       	mov	r13, r1
    113a:	c6 01       	movw	r24, r12
    113c:	62 dd       	rcall	.-1340   	; 0xc02 <updateStateSpace>
			printf("%.2f, %.2f, %.2f\n", StateSpace.xState[counter][0], StateSpace.xState[counter][1],
    113e:	f7 01       	movw	r30, r14
    1140:	83 81       	ldd	r24, Z+3	; 0x03
    1142:	8f 93       	push	r24
    1144:	82 81       	ldd	r24, Z+2	; 0x02
    1146:	8f 93       	push	r24
    1148:	81 81       	ldd	r24, Z+1	; 0x01
    114a:	8f 93       	push	r24
    114c:	80 81       	ld	r24, Z
    114e:	8f 93       	push	r24
    1150:	f8 01       	movw	r30, r16
    1152:	87 81       	ldd	r24, Z+7	; 0x07
    1154:	8f 93       	push	r24
    1156:	86 81       	ldd	r24, Z+6	; 0x06
    1158:	8f 93       	push	r24
    115a:	85 81       	ldd	r24, Z+5	; 0x05
    115c:	8f 93       	push	r24
    115e:	84 81       	ldd	r24, Z+4	; 0x04
    1160:	8f 93       	push	r24
    1162:	83 81       	ldd	r24, Z+3	; 0x03
    1164:	8f 93       	push	r24
    1166:	82 81       	ldd	r24, Z+2	; 0x02
    1168:	8f 93       	push	r24
    116a:	81 81       	ldd	r24, Z+1	; 0x01
    116c:	8f 93       	push	r24
    116e:	80 81       	ld	r24, Z
    1170:	8f 93       	push	r24
    1172:	9f 92       	push	r9
    1174:	8f 92       	push	r8
    1176:	0e 94 2e 14 	call	0x285c	; 0x285c <printf>
									StateSpace.yState[counter][0]);
			sendStruct.C = counter;
    117a:	f5 01       	movw	r30, r10
    117c:	d1 82       	std	Z+1, r13	; 0x01
    117e:	c0 82       	st	Z, r12
			sendStruct.X0 = StateSpace.xState[counter][0];
    1180:	f8 01       	movw	r30, r16
    1182:	80 81       	ld	r24, Z
    1184:	91 81       	ldd	r25, Z+1	; 0x01
    1186:	a2 81       	ldd	r26, Z+2	; 0x02
    1188:	b3 81       	ldd	r27, Z+3	; 0x03
    118a:	f5 01       	movw	r30, r10
    118c:	82 83       	std	Z+2, r24	; 0x02
    118e:	93 83       	std	Z+3, r25	; 0x03
    1190:	a4 83       	std	Z+4, r26	; 0x04
    1192:	b5 83       	std	Z+5, r27	; 0x05
			sendStruct.X1 = StateSpace.xState[counter][1];
    1194:	f8 01       	movw	r30, r16
    1196:	84 81       	ldd	r24, Z+4	; 0x04
    1198:	95 81       	ldd	r25, Z+5	; 0x05
    119a:	a6 81       	ldd	r26, Z+6	; 0x06
    119c:	b7 81       	ldd	r27, Z+7	; 0x07
    119e:	f5 01       	movw	r30, r10
    11a0:	86 83       	std	Z+6, r24	; 0x06
    11a2:	97 83       	std	Z+7, r25	; 0x07
    11a4:	a0 87       	std	Z+8, r26	; 0x08
    11a6:	b1 87       	std	Z+9, r27	; 0x09
			sendStruct.y = StateSpace.yState[counter][0];
    11a8:	f7 01       	movw	r30, r14
    11aa:	80 81       	ld	r24, Z
    11ac:	91 81       	ldd	r25, Z+1	; 0x01
    11ae:	a2 81       	ldd	r26, Z+2	; 0x02
    11b0:	b3 81       	ldd	r27, Z+3	; 0x03
    11b2:	f4 e0       	ldi	r31, 0x04	; 4
    11b4:	ef 0e       	add	r14, r31
    11b6:	f1 1c       	adc	r15, r1
    11b8:	f5 01       	movw	r30, r10
    11ba:	82 87       	std	Z+10, r24	; 0x0a
    11bc:	93 87       	std	Z+11, r25	; 0x0b
    11be:	a4 87       	std	Z+12, r26	; 0x0c
			char check = M128_HMI_Form_put("ui16x1,f32x1,f32x1,f32x1", 14, &sendStruct);
    11c0:	b5 87       	std	Z+13, r27	; 0x0d
    11c2:	42 2d       	mov	r20, r2
    11c4:	53 2d       	mov	r21, r3
    11c6:	6e e0       	ldi	r22, 0x0E	; 14
    11c8:	70 e0       	ldi	r23, 0x00	; 0
    11ca:	83 e9       	ldi	r24, 0x93	; 147
    11cc:	92 e0       	ldi	r25, 0x02	; 2
    11ce:	6e d9       	rcall	.-3364   	; 0x4ac <M128_HMI_Form_put>
			if(check) printf("Error -> %d\n", check);
    11d0:	0f b6       	in	r0, 0x3f	; 63
    11d2:	f8 94       	cli
    11d4:	de bf       	out	0x3e, r29	; 62
    11d6:	0f be       	out	0x3f, r0	; 63
    11d8:	cd bf       	out	0x3d, r28	; 61
    11da:	88 23       	and	r24, r24
    11dc:	51 f0       	breq	.+20     	; 0x11f2 <__stack+0xf3>
    11de:	1f 92       	push	r1
    11e0:	8f 93       	push	r24
    11e2:	5f 92       	push	r5
    11e4:	4f 92       	push	r4
    11e6:	0e 94 2e 14 	call	0x285c	; 0x285c <printf>
    11ea:	0f 90       	pop	r0
    11ec:	0f 90       	pop	r0
    11ee:	0f 90       	pop	r0
    11f0:	0f 90       	pop	r0
	setMatrixTheSame(&StateSpace.paraC[0][0], &ParameterC[0][0], ParaCRowSize, ParaCColSize);
	setMatrixTheSame(&StateSpace.paraD[0][0], &ParameterD[0][0], ParaDRowSize, ParaDColSize);
	printParameter();
	initStateStateInput();
    while (1) {
		for(int counter=0;counter<ExecuteTimes;counter++){
    11f2:	3f ef       	ldi	r19, 0xFF	; 255
    11f4:	c3 1a       	sub	r12, r19
    11f6:	d3 0a       	sbc	r13, r19
    11f8:	08 5f       	subi	r16, 0xF8	; 248
    11fa:	1f 4f       	sbci	r17, 0xFF	; 255
    11fc:	84 e6       	ldi	r24, 0x64	; 100
    11fe:	c8 16       	cp	r12, r24
    1200:	d1 04       	cpc	r13, r1
    1202:	09 f0       	breq	.+2      	; 0x1206 <__stack+0x107>
    1204:	9a cf       	rjmp	.-204    	; 0x113a <__stack+0x3b>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1206:	9f ef       	ldi	r25, 0xFF	; 255
    1208:	ef eb       	ldi	r30, 0xBF	; 191
    120a:	fb e4       	ldi	r31, 0x4B	; 75
    120c:	23 e0       	ldi	r18, 0x03	; 3
    120e:	91 50       	subi	r25, 0x01	; 1
    1210:	e0 40       	sbci	r30, 0x00	; 0
    1212:	f0 40       	sbci	r31, 0x00	; 0
    1214:	20 40       	sbci	r18, 0x00	; 0
    1216:	d9 f7       	brne	.-10     	; 0x120e <__stack+0x10f>
    1218:	00 c0       	rjmp	.+0      	; 0x121a <__stack+0x11b>
    121a:	00 00       	nop
    121c:	84 cf       	rjmp	.-248    	; 0x1126 <__stack+0x27>

0000121e <__subsf3>:
    121e:	50 58       	subi	r21, 0x80	; 128

00001220 <__addsf3>:
    1220:	bb 27       	eor	r27, r27
    1222:	aa 27       	eor	r26, r26
    1224:	0e d0       	rcall	.+28     	; 0x1242 <__addsf3x>
    1226:	07 c1       	rjmp	.+526    	; 0x1436 <__fp_round>
    1228:	f8 d0       	rcall	.+496    	; 0x141a <__fp_pscA>
    122a:	30 f0       	brcs	.+12     	; 0x1238 <__addsf3+0x18>
    122c:	fd d0       	rcall	.+506    	; 0x1428 <__fp_pscB>
    122e:	20 f0       	brcs	.+8      	; 0x1238 <__addsf3+0x18>
    1230:	31 f4       	brne	.+12     	; 0x123e <__addsf3+0x1e>
    1232:	9f 3f       	cpi	r25, 0xFF	; 255
    1234:	11 f4       	brne	.+4      	; 0x123a <__addsf3+0x1a>
    1236:	1e f4       	brtc	.+6      	; 0x123e <__addsf3+0x1e>
    1238:	ed c0       	rjmp	.+474    	; 0x1414 <__fp_nan>
    123a:	0e f4       	brtc	.+2      	; 0x123e <__addsf3+0x1e>
    123c:	e0 95       	com	r30
    123e:	e7 fb       	bst	r30, 7
    1240:	e3 c0       	rjmp	.+454    	; 0x1408 <__fp_inf>

00001242 <__addsf3x>:
    1242:	e9 2f       	mov	r30, r25
    1244:	09 d1       	rcall	.+530    	; 0x1458 <__fp_split3>
    1246:	80 f3       	brcs	.-32     	; 0x1228 <__addsf3+0x8>
    1248:	ba 17       	cp	r27, r26
    124a:	62 07       	cpc	r22, r18
    124c:	73 07       	cpc	r23, r19
    124e:	84 07       	cpc	r24, r20
    1250:	95 07       	cpc	r25, r21
    1252:	18 f0       	brcs	.+6      	; 0x125a <__addsf3x+0x18>
    1254:	71 f4       	brne	.+28     	; 0x1272 <__addsf3x+0x30>
    1256:	9e f5       	brtc	.+102    	; 0x12be <__addsf3x+0x7c>
    1258:	21 c1       	rjmp	.+578    	; 0x149c <__fp_zero>
    125a:	0e f4       	brtc	.+2      	; 0x125e <__addsf3x+0x1c>
    125c:	e0 95       	com	r30
    125e:	0b 2e       	mov	r0, r27
    1260:	ba 2f       	mov	r27, r26
    1262:	a0 2d       	mov	r26, r0
    1264:	0b 01       	movw	r0, r22
    1266:	b9 01       	movw	r22, r18
    1268:	90 01       	movw	r18, r0
    126a:	0c 01       	movw	r0, r24
    126c:	ca 01       	movw	r24, r20
    126e:	a0 01       	movw	r20, r0
    1270:	11 24       	eor	r1, r1
    1272:	ff 27       	eor	r31, r31
    1274:	59 1b       	sub	r21, r25
    1276:	99 f0       	breq	.+38     	; 0x129e <__addsf3x+0x5c>
    1278:	59 3f       	cpi	r21, 0xF9	; 249
    127a:	50 f4       	brcc	.+20     	; 0x1290 <__addsf3x+0x4e>
    127c:	50 3e       	cpi	r21, 0xE0	; 224
    127e:	68 f1       	brcs	.+90     	; 0x12da <__addsf3x+0x98>
    1280:	1a 16       	cp	r1, r26
    1282:	f0 40       	sbci	r31, 0x00	; 0
    1284:	a2 2f       	mov	r26, r18
    1286:	23 2f       	mov	r18, r19
    1288:	34 2f       	mov	r19, r20
    128a:	44 27       	eor	r20, r20
    128c:	58 5f       	subi	r21, 0xF8	; 248
    128e:	f3 cf       	rjmp	.-26     	; 0x1276 <__addsf3x+0x34>
    1290:	46 95       	lsr	r20
    1292:	37 95       	ror	r19
    1294:	27 95       	ror	r18
    1296:	a7 95       	ror	r26
    1298:	f0 40       	sbci	r31, 0x00	; 0
    129a:	53 95       	inc	r21
    129c:	c9 f7       	brne	.-14     	; 0x1290 <__addsf3x+0x4e>
    129e:	7e f4       	brtc	.+30     	; 0x12be <__addsf3x+0x7c>
    12a0:	1f 16       	cp	r1, r31
    12a2:	ba 0b       	sbc	r27, r26
    12a4:	62 0b       	sbc	r22, r18
    12a6:	73 0b       	sbc	r23, r19
    12a8:	84 0b       	sbc	r24, r20
    12aa:	ba f0       	brmi	.+46     	; 0x12da <__addsf3x+0x98>
    12ac:	91 50       	subi	r25, 0x01	; 1
    12ae:	a1 f0       	breq	.+40     	; 0x12d8 <__addsf3x+0x96>
    12b0:	ff 0f       	add	r31, r31
    12b2:	bb 1f       	adc	r27, r27
    12b4:	66 1f       	adc	r22, r22
    12b6:	77 1f       	adc	r23, r23
    12b8:	88 1f       	adc	r24, r24
    12ba:	c2 f7       	brpl	.-16     	; 0x12ac <__addsf3x+0x6a>
    12bc:	0e c0       	rjmp	.+28     	; 0x12da <__addsf3x+0x98>
    12be:	ba 0f       	add	r27, r26
    12c0:	62 1f       	adc	r22, r18
    12c2:	73 1f       	adc	r23, r19
    12c4:	84 1f       	adc	r24, r20
    12c6:	48 f4       	brcc	.+18     	; 0x12da <__addsf3x+0x98>
    12c8:	87 95       	ror	r24
    12ca:	77 95       	ror	r23
    12cc:	67 95       	ror	r22
    12ce:	b7 95       	ror	r27
    12d0:	f7 95       	ror	r31
    12d2:	9e 3f       	cpi	r25, 0xFE	; 254
    12d4:	08 f0       	brcs	.+2      	; 0x12d8 <__addsf3x+0x96>
    12d6:	b3 cf       	rjmp	.-154    	; 0x123e <__addsf3+0x1e>
    12d8:	93 95       	inc	r25
    12da:	88 0f       	add	r24, r24
    12dc:	08 f0       	brcs	.+2      	; 0x12e0 <__addsf3x+0x9e>
    12de:	99 27       	eor	r25, r25
    12e0:	ee 0f       	add	r30, r30
    12e2:	97 95       	ror	r25
    12e4:	87 95       	ror	r24
    12e6:	08 95       	ret

000012e8 <__cmpsf2>:
    12e8:	6b d0       	rcall	.+214    	; 0x13c0 <__fp_cmp>
    12ea:	08 f4       	brcc	.+2      	; 0x12ee <__cmpsf2+0x6>
    12ec:	81 e0       	ldi	r24, 0x01	; 1
    12ee:	08 95       	ret

000012f0 <__divsf3>:
    12f0:	0c d0       	rcall	.+24     	; 0x130a <__divsf3x>
    12f2:	a1 c0       	rjmp	.+322    	; 0x1436 <__fp_round>
    12f4:	99 d0       	rcall	.+306    	; 0x1428 <__fp_pscB>
    12f6:	40 f0       	brcs	.+16     	; 0x1308 <__divsf3+0x18>
    12f8:	90 d0       	rcall	.+288    	; 0x141a <__fp_pscA>
    12fa:	30 f0       	brcs	.+12     	; 0x1308 <__divsf3+0x18>
    12fc:	21 f4       	brne	.+8      	; 0x1306 <__divsf3+0x16>
    12fe:	5f 3f       	cpi	r21, 0xFF	; 255
    1300:	19 f0       	breq	.+6      	; 0x1308 <__divsf3+0x18>
    1302:	82 c0       	rjmp	.+260    	; 0x1408 <__fp_inf>
    1304:	51 11       	cpse	r21, r1
    1306:	cb c0       	rjmp	.+406    	; 0x149e <__fp_szero>
    1308:	85 c0       	rjmp	.+266    	; 0x1414 <__fp_nan>

0000130a <__divsf3x>:
    130a:	a6 d0       	rcall	.+332    	; 0x1458 <__fp_split3>
    130c:	98 f3       	brcs	.-26     	; 0x12f4 <__divsf3+0x4>

0000130e <__divsf3_pse>:
    130e:	99 23       	and	r25, r25
    1310:	c9 f3       	breq	.-14     	; 0x1304 <__divsf3+0x14>
    1312:	55 23       	and	r21, r21
    1314:	b1 f3       	breq	.-20     	; 0x1302 <__divsf3+0x12>
    1316:	95 1b       	sub	r25, r21
    1318:	55 0b       	sbc	r21, r21
    131a:	bb 27       	eor	r27, r27
    131c:	aa 27       	eor	r26, r26
    131e:	62 17       	cp	r22, r18
    1320:	73 07       	cpc	r23, r19
    1322:	84 07       	cpc	r24, r20
    1324:	38 f0       	brcs	.+14     	; 0x1334 <__divsf3_pse+0x26>
    1326:	9f 5f       	subi	r25, 0xFF	; 255
    1328:	5f 4f       	sbci	r21, 0xFF	; 255
    132a:	22 0f       	add	r18, r18
    132c:	33 1f       	adc	r19, r19
    132e:	44 1f       	adc	r20, r20
    1330:	aa 1f       	adc	r26, r26
    1332:	a9 f3       	breq	.-22     	; 0x131e <__divsf3_pse+0x10>
    1334:	33 d0       	rcall	.+102    	; 0x139c <__divsf3_pse+0x8e>
    1336:	0e 2e       	mov	r0, r30
    1338:	3a f0       	brmi	.+14     	; 0x1348 <__divsf3_pse+0x3a>
    133a:	e0 e8       	ldi	r30, 0x80	; 128
    133c:	30 d0       	rcall	.+96     	; 0x139e <__divsf3_pse+0x90>
    133e:	91 50       	subi	r25, 0x01	; 1
    1340:	50 40       	sbci	r21, 0x00	; 0
    1342:	e6 95       	lsr	r30
    1344:	00 1c       	adc	r0, r0
    1346:	ca f7       	brpl	.-14     	; 0x133a <__divsf3_pse+0x2c>
    1348:	29 d0       	rcall	.+82     	; 0x139c <__divsf3_pse+0x8e>
    134a:	fe 2f       	mov	r31, r30
    134c:	27 d0       	rcall	.+78     	; 0x139c <__divsf3_pse+0x8e>
    134e:	66 0f       	add	r22, r22
    1350:	77 1f       	adc	r23, r23
    1352:	88 1f       	adc	r24, r24
    1354:	bb 1f       	adc	r27, r27
    1356:	26 17       	cp	r18, r22
    1358:	37 07       	cpc	r19, r23
    135a:	48 07       	cpc	r20, r24
    135c:	ab 07       	cpc	r26, r27
    135e:	b0 e8       	ldi	r27, 0x80	; 128
    1360:	09 f0       	breq	.+2      	; 0x1364 <__divsf3_pse+0x56>
    1362:	bb 0b       	sbc	r27, r27
    1364:	80 2d       	mov	r24, r0
    1366:	bf 01       	movw	r22, r30
    1368:	ff 27       	eor	r31, r31
    136a:	93 58       	subi	r25, 0x83	; 131
    136c:	5f 4f       	sbci	r21, 0xFF	; 255
    136e:	2a f0       	brmi	.+10     	; 0x137a <__divsf3_pse+0x6c>
    1370:	9e 3f       	cpi	r25, 0xFE	; 254
    1372:	51 05       	cpc	r21, r1
    1374:	68 f0       	brcs	.+26     	; 0x1390 <__divsf3_pse+0x82>
    1376:	48 c0       	rjmp	.+144    	; 0x1408 <__fp_inf>
    1378:	92 c0       	rjmp	.+292    	; 0x149e <__fp_szero>
    137a:	5f 3f       	cpi	r21, 0xFF	; 255
    137c:	ec f3       	brlt	.-6      	; 0x1378 <__divsf3_pse+0x6a>
    137e:	98 3e       	cpi	r25, 0xE8	; 232
    1380:	dc f3       	brlt	.-10     	; 0x1378 <__divsf3_pse+0x6a>
    1382:	86 95       	lsr	r24
    1384:	77 95       	ror	r23
    1386:	67 95       	ror	r22
    1388:	b7 95       	ror	r27
    138a:	f7 95       	ror	r31
    138c:	9f 5f       	subi	r25, 0xFF	; 255
    138e:	c9 f7       	brne	.-14     	; 0x1382 <__divsf3_pse+0x74>
    1390:	88 0f       	add	r24, r24
    1392:	91 1d       	adc	r25, r1
    1394:	96 95       	lsr	r25
    1396:	87 95       	ror	r24
    1398:	97 f9       	bld	r25, 7
    139a:	08 95       	ret
    139c:	e1 e0       	ldi	r30, 0x01	; 1
    139e:	66 0f       	add	r22, r22
    13a0:	77 1f       	adc	r23, r23
    13a2:	88 1f       	adc	r24, r24
    13a4:	bb 1f       	adc	r27, r27
    13a6:	62 17       	cp	r22, r18
    13a8:	73 07       	cpc	r23, r19
    13aa:	84 07       	cpc	r24, r20
    13ac:	ba 07       	cpc	r27, r26
    13ae:	20 f0       	brcs	.+8      	; 0x13b8 <__divsf3_pse+0xaa>
    13b0:	62 1b       	sub	r22, r18
    13b2:	73 0b       	sbc	r23, r19
    13b4:	84 0b       	sbc	r24, r20
    13b6:	ba 0b       	sbc	r27, r26
    13b8:	ee 1f       	adc	r30, r30
    13ba:	88 f7       	brcc	.-30     	; 0x139e <__divsf3_pse+0x90>
    13bc:	e0 95       	com	r30
    13be:	08 95       	ret

000013c0 <__fp_cmp>:
    13c0:	99 0f       	add	r25, r25
    13c2:	00 08       	sbc	r0, r0
    13c4:	55 0f       	add	r21, r21
    13c6:	aa 0b       	sbc	r26, r26
    13c8:	e0 e8       	ldi	r30, 0x80	; 128
    13ca:	fe ef       	ldi	r31, 0xFE	; 254
    13cc:	16 16       	cp	r1, r22
    13ce:	17 06       	cpc	r1, r23
    13d0:	e8 07       	cpc	r30, r24
    13d2:	f9 07       	cpc	r31, r25
    13d4:	c0 f0       	brcs	.+48     	; 0x1406 <__fp_cmp+0x46>
    13d6:	12 16       	cp	r1, r18
    13d8:	13 06       	cpc	r1, r19
    13da:	e4 07       	cpc	r30, r20
    13dc:	f5 07       	cpc	r31, r21
    13de:	98 f0       	brcs	.+38     	; 0x1406 <__fp_cmp+0x46>
    13e0:	62 1b       	sub	r22, r18
    13e2:	73 0b       	sbc	r23, r19
    13e4:	84 0b       	sbc	r24, r20
    13e6:	95 0b       	sbc	r25, r21
    13e8:	39 f4       	brne	.+14     	; 0x13f8 <__fp_cmp+0x38>
    13ea:	0a 26       	eor	r0, r26
    13ec:	61 f0       	breq	.+24     	; 0x1406 <__fp_cmp+0x46>
    13ee:	23 2b       	or	r18, r19
    13f0:	24 2b       	or	r18, r20
    13f2:	25 2b       	or	r18, r21
    13f4:	21 f4       	brne	.+8      	; 0x13fe <__fp_cmp+0x3e>
    13f6:	08 95       	ret
    13f8:	0a 26       	eor	r0, r26
    13fa:	09 f4       	brne	.+2      	; 0x13fe <__fp_cmp+0x3e>
    13fc:	a1 40       	sbci	r26, 0x01	; 1
    13fe:	a6 95       	lsr	r26
    1400:	8f ef       	ldi	r24, 0xFF	; 255
    1402:	81 1d       	adc	r24, r1
    1404:	81 1d       	adc	r24, r1
    1406:	08 95       	ret

00001408 <__fp_inf>:
    1408:	97 f9       	bld	r25, 7
    140a:	9f 67       	ori	r25, 0x7F	; 127
    140c:	80 e8       	ldi	r24, 0x80	; 128
    140e:	70 e0       	ldi	r23, 0x00	; 0
    1410:	60 e0       	ldi	r22, 0x00	; 0
    1412:	08 95       	ret

00001414 <__fp_nan>:
    1414:	9f ef       	ldi	r25, 0xFF	; 255
    1416:	80 ec       	ldi	r24, 0xC0	; 192
    1418:	08 95       	ret

0000141a <__fp_pscA>:
    141a:	00 24       	eor	r0, r0
    141c:	0a 94       	dec	r0
    141e:	16 16       	cp	r1, r22
    1420:	17 06       	cpc	r1, r23
    1422:	18 06       	cpc	r1, r24
    1424:	09 06       	cpc	r0, r25
    1426:	08 95       	ret

00001428 <__fp_pscB>:
    1428:	00 24       	eor	r0, r0
    142a:	0a 94       	dec	r0
    142c:	12 16       	cp	r1, r18
    142e:	13 06       	cpc	r1, r19
    1430:	14 06       	cpc	r1, r20
    1432:	05 06       	cpc	r0, r21
    1434:	08 95       	ret

00001436 <__fp_round>:
    1436:	09 2e       	mov	r0, r25
    1438:	03 94       	inc	r0
    143a:	00 0c       	add	r0, r0
    143c:	11 f4       	brne	.+4      	; 0x1442 <__fp_round+0xc>
    143e:	88 23       	and	r24, r24
    1440:	52 f0       	brmi	.+20     	; 0x1456 <__fp_round+0x20>
    1442:	bb 0f       	add	r27, r27
    1444:	40 f4       	brcc	.+16     	; 0x1456 <__fp_round+0x20>
    1446:	bf 2b       	or	r27, r31
    1448:	11 f4       	brne	.+4      	; 0x144e <__fp_round+0x18>
    144a:	60 ff       	sbrs	r22, 0
    144c:	04 c0       	rjmp	.+8      	; 0x1456 <__fp_round+0x20>
    144e:	6f 5f       	subi	r22, 0xFF	; 255
    1450:	7f 4f       	sbci	r23, 0xFF	; 255
    1452:	8f 4f       	sbci	r24, 0xFF	; 255
    1454:	9f 4f       	sbci	r25, 0xFF	; 255
    1456:	08 95       	ret

00001458 <__fp_split3>:
    1458:	57 fd       	sbrc	r21, 7
    145a:	90 58       	subi	r25, 0x80	; 128
    145c:	44 0f       	add	r20, r20
    145e:	55 1f       	adc	r21, r21
    1460:	59 f0       	breq	.+22     	; 0x1478 <__fp_splitA+0x10>
    1462:	5f 3f       	cpi	r21, 0xFF	; 255
    1464:	71 f0       	breq	.+28     	; 0x1482 <__fp_splitA+0x1a>
    1466:	47 95       	ror	r20

00001468 <__fp_splitA>:
    1468:	88 0f       	add	r24, r24
    146a:	97 fb       	bst	r25, 7
    146c:	99 1f       	adc	r25, r25
    146e:	61 f0       	breq	.+24     	; 0x1488 <__fp_splitA+0x20>
    1470:	9f 3f       	cpi	r25, 0xFF	; 255
    1472:	79 f0       	breq	.+30     	; 0x1492 <__fp_splitA+0x2a>
    1474:	87 95       	ror	r24
    1476:	08 95       	ret
    1478:	12 16       	cp	r1, r18
    147a:	13 06       	cpc	r1, r19
    147c:	14 06       	cpc	r1, r20
    147e:	55 1f       	adc	r21, r21
    1480:	f2 cf       	rjmp	.-28     	; 0x1466 <__fp_split3+0xe>
    1482:	46 95       	lsr	r20
    1484:	f1 df       	rcall	.-30     	; 0x1468 <__fp_splitA>
    1486:	08 c0       	rjmp	.+16     	; 0x1498 <__fp_splitA+0x30>
    1488:	16 16       	cp	r1, r22
    148a:	17 06       	cpc	r1, r23
    148c:	18 06       	cpc	r1, r24
    148e:	99 1f       	adc	r25, r25
    1490:	f1 cf       	rjmp	.-30     	; 0x1474 <__fp_splitA+0xc>
    1492:	86 95       	lsr	r24
    1494:	71 05       	cpc	r23, r1
    1496:	61 05       	cpc	r22, r1
    1498:	08 94       	sec
    149a:	08 95       	ret

0000149c <__fp_zero>:
    149c:	e8 94       	clt

0000149e <__fp_szero>:
    149e:	bb 27       	eor	r27, r27
    14a0:	66 27       	eor	r22, r22
    14a2:	77 27       	eor	r23, r23
    14a4:	cb 01       	movw	r24, r22
    14a6:	97 f9       	bld	r25, 7
    14a8:	08 95       	ret

000014aa <__gesf2>:
    14aa:	8a df       	rcall	.-236    	; 0x13c0 <__fp_cmp>
    14ac:	08 f4       	brcc	.+2      	; 0x14b0 <__gesf2+0x6>
    14ae:	8f ef       	ldi	r24, 0xFF	; 255
    14b0:	08 95       	ret

000014b2 <__mulsf3>:
    14b2:	0b d0       	rcall	.+22     	; 0x14ca <__mulsf3x>
    14b4:	c0 cf       	rjmp	.-128    	; 0x1436 <__fp_round>
    14b6:	b1 df       	rcall	.-158    	; 0x141a <__fp_pscA>
    14b8:	28 f0       	brcs	.+10     	; 0x14c4 <__mulsf3+0x12>
    14ba:	b6 df       	rcall	.-148    	; 0x1428 <__fp_pscB>
    14bc:	18 f0       	brcs	.+6      	; 0x14c4 <__mulsf3+0x12>
    14be:	95 23       	and	r25, r21
    14c0:	09 f0       	breq	.+2      	; 0x14c4 <__mulsf3+0x12>
    14c2:	a2 cf       	rjmp	.-188    	; 0x1408 <__fp_inf>
    14c4:	a7 cf       	rjmp	.-178    	; 0x1414 <__fp_nan>
    14c6:	11 24       	eor	r1, r1
    14c8:	ea cf       	rjmp	.-44     	; 0x149e <__fp_szero>

000014ca <__mulsf3x>:
    14ca:	c6 df       	rcall	.-116    	; 0x1458 <__fp_split3>
    14cc:	a0 f3       	brcs	.-24     	; 0x14b6 <__mulsf3+0x4>

000014ce <__mulsf3_pse>:
    14ce:	95 9f       	mul	r25, r21
    14d0:	d1 f3       	breq	.-12     	; 0x14c6 <__mulsf3+0x14>
    14d2:	95 0f       	add	r25, r21
    14d4:	50 e0       	ldi	r21, 0x00	; 0
    14d6:	55 1f       	adc	r21, r21
    14d8:	62 9f       	mul	r22, r18
    14da:	f0 01       	movw	r30, r0
    14dc:	72 9f       	mul	r23, r18
    14de:	bb 27       	eor	r27, r27
    14e0:	f0 0d       	add	r31, r0
    14e2:	b1 1d       	adc	r27, r1
    14e4:	63 9f       	mul	r22, r19
    14e6:	aa 27       	eor	r26, r26
    14e8:	f0 0d       	add	r31, r0
    14ea:	b1 1d       	adc	r27, r1
    14ec:	aa 1f       	adc	r26, r26
    14ee:	64 9f       	mul	r22, r20
    14f0:	66 27       	eor	r22, r22
    14f2:	b0 0d       	add	r27, r0
    14f4:	a1 1d       	adc	r26, r1
    14f6:	66 1f       	adc	r22, r22
    14f8:	82 9f       	mul	r24, r18
    14fa:	22 27       	eor	r18, r18
    14fc:	b0 0d       	add	r27, r0
    14fe:	a1 1d       	adc	r26, r1
    1500:	62 1f       	adc	r22, r18
    1502:	73 9f       	mul	r23, r19
    1504:	b0 0d       	add	r27, r0
    1506:	a1 1d       	adc	r26, r1
    1508:	62 1f       	adc	r22, r18
    150a:	83 9f       	mul	r24, r19
    150c:	a0 0d       	add	r26, r0
    150e:	61 1d       	adc	r22, r1
    1510:	22 1f       	adc	r18, r18
    1512:	74 9f       	mul	r23, r20
    1514:	33 27       	eor	r19, r19
    1516:	a0 0d       	add	r26, r0
    1518:	61 1d       	adc	r22, r1
    151a:	23 1f       	adc	r18, r19
    151c:	84 9f       	mul	r24, r20
    151e:	60 0d       	add	r22, r0
    1520:	21 1d       	adc	r18, r1
    1522:	82 2f       	mov	r24, r18
    1524:	76 2f       	mov	r23, r22
    1526:	6a 2f       	mov	r22, r26
    1528:	11 24       	eor	r1, r1
    152a:	9f 57       	subi	r25, 0x7F	; 127
    152c:	50 40       	sbci	r21, 0x00	; 0
    152e:	8a f0       	brmi	.+34     	; 0x1552 <__mulsf3_pse+0x84>
    1530:	e1 f0       	breq	.+56     	; 0x156a <__mulsf3_pse+0x9c>
    1532:	88 23       	and	r24, r24
    1534:	4a f0       	brmi	.+18     	; 0x1548 <__mulsf3_pse+0x7a>
    1536:	ee 0f       	add	r30, r30
    1538:	ff 1f       	adc	r31, r31
    153a:	bb 1f       	adc	r27, r27
    153c:	66 1f       	adc	r22, r22
    153e:	77 1f       	adc	r23, r23
    1540:	88 1f       	adc	r24, r24
    1542:	91 50       	subi	r25, 0x01	; 1
    1544:	50 40       	sbci	r21, 0x00	; 0
    1546:	a9 f7       	brne	.-22     	; 0x1532 <__mulsf3_pse+0x64>
    1548:	9e 3f       	cpi	r25, 0xFE	; 254
    154a:	51 05       	cpc	r21, r1
    154c:	70 f0       	brcs	.+28     	; 0x156a <__mulsf3_pse+0x9c>
    154e:	5c cf       	rjmp	.-328    	; 0x1408 <__fp_inf>
    1550:	a6 cf       	rjmp	.-180    	; 0x149e <__fp_szero>
    1552:	5f 3f       	cpi	r21, 0xFF	; 255
    1554:	ec f3       	brlt	.-6      	; 0x1550 <__mulsf3_pse+0x82>
    1556:	98 3e       	cpi	r25, 0xE8	; 232
    1558:	dc f3       	brlt	.-10     	; 0x1550 <__mulsf3_pse+0x82>
    155a:	86 95       	lsr	r24
    155c:	77 95       	ror	r23
    155e:	67 95       	ror	r22
    1560:	b7 95       	ror	r27
    1562:	f7 95       	ror	r31
    1564:	e7 95       	ror	r30
    1566:	9f 5f       	subi	r25, 0xFF	; 255
    1568:	c1 f7       	brne	.-16     	; 0x155a <__mulsf3_pse+0x8c>
    156a:	fe 2b       	or	r31, r30
    156c:	88 0f       	add	r24, r24
    156e:	91 1d       	adc	r25, r1
    1570:	96 95       	lsr	r25
    1572:	87 95       	ror	r24
    1574:	97 f9       	bld	r25, 7
    1576:	08 95       	ret

00001578 <vfprintf>:
    1578:	2f 92       	push	r2
    157a:	3f 92       	push	r3
    157c:	4f 92       	push	r4
    157e:	5f 92       	push	r5
    1580:	6f 92       	push	r6
    1582:	7f 92       	push	r7
    1584:	8f 92       	push	r8
    1586:	9f 92       	push	r9
    1588:	af 92       	push	r10
    158a:	bf 92       	push	r11
    158c:	cf 92       	push	r12
    158e:	df 92       	push	r13
    1590:	ef 92       	push	r14
    1592:	ff 92       	push	r15
    1594:	0f 93       	push	r16
    1596:	1f 93       	push	r17
    1598:	cf 93       	push	r28
    159a:	df 93       	push	r29
    159c:	cd b7       	in	r28, 0x3d	; 61
    159e:	de b7       	in	r29, 0x3e	; 62
    15a0:	60 97       	sbiw	r28, 0x10	; 16
    15a2:	0f b6       	in	r0, 0x3f	; 63
    15a4:	f8 94       	cli
    15a6:	de bf       	out	0x3e, r29	; 62
    15a8:	0f be       	out	0x3f, r0	; 63
    15aa:	cd bf       	out	0x3d, r28	; 61
    15ac:	7c 01       	movw	r14, r24
    15ae:	1b 01       	movw	r2, r22
    15b0:	6a 01       	movw	r12, r20
    15b2:	fc 01       	movw	r30, r24
    15b4:	17 82       	std	Z+7, r1	; 0x07
    15b6:	16 82       	std	Z+6, r1	; 0x06
    15b8:	83 81       	ldd	r24, Z+3	; 0x03
    15ba:	81 ff       	sbrs	r24, 1
    15bc:	2b c3       	rjmp	.+1622   	; 0x1c14 <vfprintf+0x69c>
    15be:	9e 01       	movw	r18, r28
    15c0:	2f 5f       	subi	r18, 0xFF	; 255
    15c2:	3f 4f       	sbci	r19, 0xFF	; 255
    15c4:	39 01       	movw	r6, r18
    15c6:	f7 01       	movw	r30, r14
    15c8:	93 81       	ldd	r25, Z+3	; 0x03
    15ca:	f1 01       	movw	r30, r2
    15cc:	93 fd       	sbrc	r25, 3
    15ce:	85 91       	lpm	r24, Z+
    15d0:	93 ff       	sbrs	r25, 3
    15d2:	81 91       	ld	r24, Z+
    15d4:	1f 01       	movw	r2, r30
    15d6:	88 23       	and	r24, r24
    15d8:	09 f4       	brne	.+2      	; 0x15dc <vfprintf+0x64>
    15da:	18 c3       	rjmp	.+1584   	; 0x1c0c <vfprintf+0x694>
    15dc:	85 32       	cpi	r24, 0x25	; 37
    15de:	39 f4       	brne	.+14     	; 0x15ee <vfprintf+0x76>
    15e0:	93 fd       	sbrc	r25, 3
    15e2:	85 91       	lpm	r24, Z+
    15e4:	93 ff       	sbrs	r25, 3
    15e6:	81 91       	ld	r24, Z+
    15e8:	1f 01       	movw	r2, r30
    15ea:	85 32       	cpi	r24, 0x25	; 37
    15ec:	39 f4       	brne	.+14     	; 0x15fc <vfprintf+0x84>
    15ee:	b7 01       	movw	r22, r14
    15f0:	90 e0       	ldi	r25, 0x00	; 0
    15f2:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    15f6:	56 01       	movw	r10, r12
    15f8:	65 01       	movw	r12, r10
    15fa:	e5 cf       	rjmp	.-54     	; 0x15c6 <vfprintf+0x4e>
    15fc:	10 e0       	ldi	r17, 0x00	; 0
    15fe:	51 2c       	mov	r5, r1
    1600:	91 2c       	mov	r9, r1
    1602:	ff e1       	ldi	r31, 0x1F	; 31
    1604:	f9 15       	cp	r31, r9
    1606:	d8 f0       	brcs	.+54     	; 0x163e <vfprintf+0xc6>
    1608:	8b 32       	cpi	r24, 0x2B	; 43
    160a:	79 f0       	breq	.+30     	; 0x162a <vfprintf+0xb2>
    160c:	38 f4       	brcc	.+14     	; 0x161c <vfprintf+0xa4>
    160e:	80 32       	cpi	r24, 0x20	; 32
    1610:	79 f0       	breq	.+30     	; 0x1630 <vfprintf+0xb8>
    1612:	83 32       	cpi	r24, 0x23	; 35
    1614:	a1 f4       	brne	.+40     	; 0x163e <vfprintf+0xc6>
    1616:	f9 2d       	mov	r31, r9
    1618:	f0 61       	ori	r31, 0x10	; 16
    161a:	2e c0       	rjmp	.+92     	; 0x1678 <vfprintf+0x100>
    161c:	8d 32       	cpi	r24, 0x2D	; 45
    161e:	61 f0       	breq	.+24     	; 0x1638 <vfprintf+0xc0>
    1620:	80 33       	cpi	r24, 0x30	; 48
    1622:	69 f4       	brne	.+26     	; 0x163e <vfprintf+0xc6>
    1624:	29 2d       	mov	r18, r9
    1626:	21 60       	ori	r18, 0x01	; 1
    1628:	2d c0       	rjmp	.+90     	; 0x1684 <vfprintf+0x10c>
    162a:	39 2d       	mov	r19, r9
    162c:	32 60       	ori	r19, 0x02	; 2
    162e:	93 2e       	mov	r9, r19
    1630:	89 2d       	mov	r24, r9
    1632:	84 60       	ori	r24, 0x04	; 4
    1634:	98 2e       	mov	r9, r24
    1636:	2a c0       	rjmp	.+84     	; 0x168c <vfprintf+0x114>
    1638:	e9 2d       	mov	r30, r9
    163a:	e8 60       	ori	r30, 0x08	; 8
    163c:	15 c0       	rjmp	.+42     	; 0x1668 <vfprintf+0xf0>
    163e:	97 fc       	sbrc	r9, 7
    1640:	2d c0       	rjmp	.+90     	; 0x169c <vfprintf+0x124>
    1642:	20 ed       	ldi	r18, 0xD0	; 208
    1644:	28 0f       	add	r18, r24
    1646:	2a 30       	cpi	r18, 0x0A	; 10
    1648:	88 f4       	brcc	.+34     	; 0x166c <vfprintf+0xf4>
    164a:	96 fe       	sbrs	r9, 6
    164c:	06 c0       	rjmp	.+12     	; 0x165a <vfprintf+0xe2>
    164e:	3a e0       	ldi	r19, 0x0A	; 10
    1650:	13 9f       	mul	r17, r19
    1652:	20 0d       	add	r18, r0
    1654:	11 24       	eor	r1, r1
    1656:	12 2f       	mov	r17, r18
    1658:	19 c0       	rjmp	.+50     	; 0x168c <vfprintf+0x114>
    165a:	8a e0       	ldi	r24, 0x0A	; 10
    165c:	58 9e       	mul	r5, r24
    165e:	20 0d       	add	r18, r0
    1660:	11 24       	eor	r1, r1
    1662:	52 2e       	mov	r5, r18
    1664:	e9 2d       	mov	r30, r9
    1666:	e0 62       	ori	r30, 0x20	; 32
    1668:	9e 2e       	mov	r9, r30
    166a:	10 c0       	rjmp	.+32     	; 0x168c <vfprintf+0x114>
    166c:	8e 32       	cpi	r24, 0x2E	; 46
    166e:	31 f4       	brne	.+12     	; 0x167c <vfprintf+0x104>
    1670:	96 fc       	sbrc	r9, 6
    1672:	cc c2       	rjmp	.+1432   	; 0x1c0c <vfprintf+0x694>
    1674:	f9 2d       	mov	r31, r9
    1676:	f0 64       	ori	r31, 0x40	; 64
    1678:	9f 2e       	mov	r9, r31
    167a:	08 c0       	rjmp	.+16     	; 0x168c <vfprintf+0x114>
    167c:	8c 36       	cpi	r24, 0x6C	; 108
    167e:	21 f4       	brne	.+8      	; 0x1688 <vfprintf+0x110>
    1680:	29 2d       	mov	r18, r9
    1682:	20 68       	ori	r18, 0x80	; 128
    1684:	92 2e       	mov	r9, r18
    1686:	02 c0       	rjmp	.+4      	; 0x168c <vfprintf+0x114>
    1688:	88 36       	cpi	r24, 0x68	; 104
    168a:	41 f4       	brne	.+16     	; 0x169c <vfprintf+0x124>
    168c:	f1 01       	movw	r30, r2
    168e:	93 fd       	sbrc	r25, 3
    1690:	85 91       	lpm	r24, Z+
    1692:	93 ff       	sbrs	r25, 3
    1694:	81 91       	ld	r24, Z+
    1696:	1f 01       	movw	r2, r30
    1698:	81 11       	cpse	r24, r1
    169a:	b3 cf       	rjmp	.-154    	; 0x1602 <vfprintf+0x8a>
    169c:	9b eb       	ldi	r25, 0xBB	; 187
    169e:	98 0f       	add	r25, r24
    16a0:	93 30       	cpi	r25, 0x03	; 3
    16a2:	20 f4       	brcc	.+8      	; 0x16ac <vfprintf+0x134>
    16a4:	99 2d       	mov	r25, r9
    16a6:	90 61       	ori	r25, 0x10	; 16
    16a8:	80 5e       	subi	r24, 0xE0	; 224
    16aa:	07 c0       	rjmp	.+14     	; 0x16ba <vfprintf+0x142>
    16ac:	9b e9       	ldi	r25, 0x9B	; 155
    16ae:	98 0f       	add	r25, r24
    16b0:	93 30       	cpi	r25, 0x03	; 3
    16b2:	08 f0       	brcs	.+2      	; 0x16b6 <vfprintf+0x13e>
    16b4:	59 c1       	rjmp	.+690    	; 0x1968 <vfprintf+0x3f0>
    16b6:	99 2d       	mov	r25, r9
    16b8:	9f 7e       	andi	r25, 0xEF	; 239
    16ba:	96 ff       	sbrs	r25, 6
    16bc:	16 e0       	ldi	r17, 0x06	; 6
    16be:	9f 73       	andi	r25, 0x3F	; 63
    16c0:	99 2e       	mov	r9, r25
    16c2:	85 36       	cpi	r24, 0x65	; 101
    16c4:	19 f4       	brne	.+6      	; 0x16cc <vfprintf+0x154>
    16c6:	90 64       	ori	r25, 0x40	; 64
    16c8:	99 2e       	mov	r9, r25
    16ca:	08 c0       	rjmp	.+16     	; 0x16dc <vfprintf+0x164>
    16cc:	86 36       	cpi	r24, 0x66	; 102
    16ce:	21 f4       	brne	.+8      	; 0x16d8 <vfprintf+0x160>
    16d0:	39 2f       	mov	r19, r25
    16d2:	30 68       	ori	r19, 0x80	; 128
    16d4:	93 2e       	mov	r9, r19
    16d6:	02 c0       	rjmp	.+4      	; 0x16dc <vfprintf+0x164>
    16d8:	11 11       	cpse	r17, r1
    16da:	11 50       	subi	r17, 0x01	; 1
    16dc:	97 fe       	sbrs	r9, 7
    16de:	07 c0       	rjmp	.+14     	; 0x16ee <vfprintf+0x176>
    16e0:	1c 33       	cpi	r17, 0x3C	; 60
    16e2:	50 f4       	brcc	.+20     	; 0x16f8 <vfprintf+0x180>
    16e4:	44 24       	eor	r4, r4
    16e6:	43 94       	inc	r4
    16e8:	41 0e       	add	r4, r17
    16ea:	27 e0       	ldi	r18, 0x07	; 7
    16ec:	0b c0       	rjmp	.+22     	; 0x1704 <vfprintf+0x18c>
    16ee:	18 30       	cpi	r17, 0x08	; 8
    16f0:	38 f0       	brcs	.+14     	; 0x1700 <vfprintf+0x188>
    16f2:	27 e0       	ldi	r18, 0x07	; 7
    16f4:	17 e0       	ldi	r17, 0x07	; 7
    16f6:	05 c0       	rjmp	.+10     	; 0x1702 <vfprintf+0x18a>
    16f8:	27 e0       	ldi	r18, 0x07	; 7
    16fa:	9c e3       	ldi	r25, 0x3C	; 60
    16fc:	49 2e       	mov	r4, r25
    16fe:	02 c0       	rjmp	.+4      	; 0x1704 <vfprintf+0x18c>
    1700:	21 2f       	mov	r18, r17
    1702:	41 2c       	mov	r4, r1
    1704:	56 01       	movw	r10, r12
    1706:	84 e0       	ldi	r24, 0x04	; 4
    1708:	a8 0e       	add	r10, r24
    170a:	b1 1c       	adc	r11, r1
    170c:	f6 01       	movw	r30, r12
    170e:	60 81       	ld	r22, Z
    1710:	71 81       	ldd	r23, Z+1	; 0x01
    1712:	82 81       	ldd	r24, Z+2	; 0x02
    1714:	93 81       	ldd	r25, Z+3	; 0x03
    1716:	04 2d       	mov	r16, r4
    1718:	a3 01       	movw	r20, r6
    171a:	1d d7       	rcall	.+3642   	; 0x2556 <__ftoa_engine>
    171c:	6c 01       	movw	r12, r24
    171e:	f9 81       	ldd	r31, Y+1	; 0x01
    1720:	fc 87       	std	Y+12, r31	; 0x0c
    1722:	f0 ff       	sbrs	r31, 0
    1724:	02 c0       	rjmp	.+4      	; 0x172a <vfprintf+0x1b2>
    1726:	f3 ff       	sbrs	r31, 3
    1728:	06 c0       	rjmp	.+12     	; 0x1736 <vfprintf+0x1be>
    172a:	91 fc       	sbrc	r9, 1
    172c:	06 c0       	rjmp	.+12     	; 0x173a <vfprintf+0x1c2>
    172e:	92 fe       	sbrs	r9, 2
    1730:	06 c0       	rjmp	.+12     	; 0x173e <vfprintf+0x1c6>
    1732:	00 e2       	ldi	r16, 0x20	; 32
    1734:	05 c0       	rjmp	.+10     	; 0x1740 <vfprintf+0x1c8>
    1736:	0d e2       	ldi	r16, 0x2D	; 45
    1738:	03 c0       	rjmp	.+6      	; 0x1740 <vfprintf+0x1c8>
    173a:	0b e2       	ldi	r16, 0x2B	; 43
    173c:	01 c0       	rjmp	.+2      	; 0x1740 <vfprintf+0x1c8>
    173e:	00 e0       	ldi	r16, 0x00	; 0
    1740:	8c 85       	ldd	r24, Y+12	; 0x0c
    1742:	8c 70       	andi	r24, 0x0C	; 12
    1744:	19 f0       	breq	.+6      	; 0x174c <vfprintf+0x1d4>
    1746:	01 11       	cpse	r16, r1
    1748:	43 c2       	rjmp	.+1158   	; 0x1bd0 <vfprintf+0x658>
    174a:	80 c2       	rjmp	.+1280   	; 0x1c4c <vfprintf+0x6d4>
    174c:	97 fe       	sbrs	r9, 7
    174e:	10 c0       	rjmp	.+32     	; 0x1770 <vfprintf+0x1f8>
    1750:	4c 0c       	add	r4, r12
    1752:	fc 85       	ldd	r31, Y+12	; 0x0c
    1754:	f4 ff       	sbrs	r31, 4
    1756:	04 c0       	rjmp	.+8      	; 0x1760 <vfprintf+0x1e8>
    1758:	8a 81       	ldd	r24, Y+2	; 0x02
    175a:	81 33       	cpi	r24, 0x31	; 49
    175c:	09 f4       	brne	.+2      	; 0x1760 <vfprintf+0x1e8>
    175e:	4a 94       	dec	r4
    1760:	14 14       	cp	r1, r4
    1762:	74 f5       	brge	.+92     	; 0x17c0 <vfprintf+0x248>
    1764:	28 e0       	ldi	r18, 0x08	; 8
    1766:	24 15       	cp	r18, r4
    1768:	78 f5       	brcc	.+94     	; 0x17c8 <vfprintf+0x250>
    176a:	88 e0       	ldi	r24, 0x08	; 8
    176c:	48 2e       	mov	r4, r24
    176e:	2c c0       	rjmp	.+88     	; 0x17c8 <vfprintf+0x250>
    1770:	96 fc       	sbrc	r9, 6
    1772:	2a c0       	rjmp	.+84     	; 0x17c8 <vfprintf+0x250>
    1774:	81 2f       	mov	r24, r17
    1776:	90 e0       	ldi	r25, 0x00	; 0
    1778:	8c 15       	cp	r24, r12
    177a:	9d 05       	cpc	r25, r13
    177c:	9c f0       	brlt	.+38     	; 0x17a4 <vfprintf+0x22c>
    177e:	3c ef       	ldi	r19, 0xFC	; 252
    1780:	c3 16       	cp	r12, r19
    1782:	3f ef       	ldi	r19, 0xFF	; 255
    1784:	d3 06       	cpc	r13, r19
    1786:	74 f0       	brlt	.+28     	; 0x17a4 <vfprintf+0x22c>
    1788:	89 2d       	mov	r24, r9
    178a:	80 68       	ori	r24, 0x80	; 128
    178c:	98 2e       	mov	r9, r24
    178e:	0a c0       	rjmp	.+20     	; 0x17a4 <vfprintf+0x22c>
    1790:	e2 e0       	ldi	r30, 0x02	; 2
    1792:	f0 e0       	ldi	r31, 0x00	; 0
    1794:	ec 0f       	add	r30, r28
    1796:	fd 1f       	adc	r31, r29
    1798:	e1 0f       	add	r30, r17
    179a:	f1 1d       	adc	r31, r1
    179c:	80 81       	ld	r24, Z
    179e:	80 33       	cpi	r24, 0x30	; 48
    17a0:	19 f4       	brne	.+6      	; 0x17a8 <vfprintf+0x230>
    17a2:	11 50       	subi	r17, 0x01	; 1
    17a4:	11 11       	cpse	r17, r1
    17a6:	f4 cf       	rjmp	.-24     	; 0x1790 <vfprintf+0x218>
    17a8:	97 fe       	sbrs	r9, 7
    17aa:	0e c0       	rjmp	.+28     	; 0x17c8 <vfprintf+0x250>
    17ac:	44 24       	eor	r4, r4
    17ae:	43 94       	inc	r4
    17b0:	41 0e       	add	r4, r17
    17b2:	81 2f       	mov	r24, r17
    17b4:	90 e0       	ldi	r25, 0x00	; 0
    17b6:	c8 16       	cp	r12, r24
    17b8:	d9 06       	cpc	r13, r25
    17ba:	2c f4       	brge	.+10     	; 0x17c6 <vfprintf+0x24e>
    17bc:	1c 19       	sub	r17, r12
    17be:	04 c0       	rjmp	.+8      	; 0x17c8 <vfprintf+0x250>
    17c0:	44 24       	eor	r4, r4
    17c2:	43 94       	inc	r4
    17c4:	01 c0       	rjmp	.+2      	; 0x17c8 <vfprintf+0x250>
    17c6:	10 e0       	ldi	r17, 0x00	; 0
    17c8:	97 fe       	sbrs	r9, 7
    17ca:	06 c0       	rjmp	.+12     	; 0x17d8 <vfprintf+0x260>
    17cc:	1c 14       	cp	r1, r12
    17ce:	1d 04       	cpc	r1, r13
    17d0:	34 f4       	brge	.+12     	; 0x17de <vfprintf+0x266>
    17d2:	c6 01       	movw	r24, r12
    17d4:	01 96       	adiw	r24, 0x01	; 1
    17d6:	05 c0       	rjmp	.+10     	; 0x17e2 <vfprintf+0x26a>
    17d8:	85 e0       	ldi	r24, 0x05	; 5
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	02 c0       	rjmp	.+4      	; 0x17e2 <vfprintf+0x26a>
    17de:	81 e0       	ldi	r24, 0x01	; 1
    17e0:	90 e0       	ldi	r25, 0x00	; 0
    17e2:	01 11       	cpse	r16, r1
    17e4:	01 96       	adiw	r24, 0x01	; 1
    17e6:	11 23       	and	r17, r17
    17e8:	31 f0       	breq	.+12     	; 0x17f6 <vfprintf+0x27e>
    17ea:	21 2f       	mov	r18, r17
    17ec:	30 e0       	ldi	r19, 0x00	; 0
    17ee:	2f 5f       	subi	r18, 0xFF	; 255
    17f0:	3f 4f       	sbci	r19, 0xFF	; 255
    17f2:	82 0f       	add	r24, r18
    17f4:	93 1f       	adc	r25, r19
    17f6:	25 2d       	mov	r18, r5
    17f8:	30 e0       	ldi	r19, 0x00	; 0
    17fa:	82 17       	cp	r24, r18
    17fc:	93 07       	cpc	r25, r19
    17fe:	14 f4       	brge	.+4      	; 0x1804 <vfprintf+0x28c>
    1800:	58 1a       	sub	r5, r24
    1802:	01 c0       	rjmp	.+2      	; 0x1806 <vfprintf+0x28e>
    1804:	51 2c       	mov	r5, r1
    1806:	89 2d       	mov	r24, r9
    1808:	89 70       	andi	r24, 0x09	; 9
    180a:	41 f4       	brne	.+16     	; 0x181c <vfprintf+0x2a4>
    180c:	55 20       	and	r5, r5
    180e:	31 f0       	breq	.+12     	; 0x181c <vfprintf+0x2a4>
    1810:	b7 01       	movw	r22, r14
    1812:	80 e2       	ldi	r24, 0x20	; 32
    1814:	90 e0       	ldi	r25, 0x00	; 0
    1816:	e6 d7       	rcall	.+4044   	; 0x27e4 <fputc>
    1818:	5a 94       	dec	r5
    181a:	f8 cf       	rjmp	.-16     	; 0x180c <vfprintf+0x294>
    181c:	00 23       	and	r16, r16
    181e:	21 f0       	breq	.+8      	; 0x1828 <vfprintf+0x2b0>
    1820:	b7 01       	movw	r22, r14
    1822:	80 2f       	mov	r24, r16
    1824:	90 e0       	ldi	r25, 0x00	; 0
    1826:	de d7       	rcall	.+4028   	; 0x27e4 <fputc>
    1828:	93 fc       	sbrc	r9, 3
    182a:	08 c0       	rjmp	.+16     	; 0x183c <vfprintf+0x2c4>
    182c:	55 20       	and	r5, r5
    182e:	31 f0       	breq	.+12     	; 0x183c <vfprintf+0x2c4>
    1830:	b7 01       	movw	r22, r14
    1832:	80 e3       	ldi	r24, 0x30	; 48
    1834:	90 e0       	ldi	r25, 0x00	; 0
    1836:	d6 d7       	rcall	.+4012   	; 0x27e4 <fputc>
    1838:	5a 94       	dec	r5
    183a:	f8 cf       	rjmp	.-16     	; 0x182c <vfprintf+0x2b4>
    183c:	97 fe       	sbrs	r9, 7
    183e:	4a c0       	rjmp	.+148    	; 0x18d4 <vfprintf+0x35c>
    1840:	46 01       	movw	r8, r12
    1842:	d7 fe       	sbrs	r13, 7
    1844:	02 c0       	rjmp	.+4      	; 0x184a <vfprintf+0x2d2>
    1846:	81 2c       	mov	r8, r1
    1848:	91 2c       	mov	r9, r1
    184a:	c6 01       	movw	r24, r12
    184c:	88 19       	sub	r24, r8
    184e:	99 09       	sbc	r25, r9
    1850:	f3 01       	movw	r30, r6
    1852:	e8 0f       	add	r30, r24
    1854:	f9 1f       	adc	r31, r25
    1856:	fe 87       	std	Y+14, r31	; 0x0e
    1858:	ed 87       	std	Y+13, r30	; 0x0d
    185a:	96 01       	movw	r18, r12
    185c:	24 19       	sub	r18, r4
    185e:	31 09       	sbc	r19, r1
    1860:	38 8b       	std	Y+16, r19	; 0x10
    1862:	2f 87       	std	Y+15, r18	; 0x0f
    1864:	01 2f       	mov	r16, r17
    1866:	10 e0       	ldi	r17, 0x00	; 0
    1868:	11 95       	neg	r17
    186a:	01 95       	neg	r16
    186c:	11 09       	sbc	r17, r1
    186e:	3f ef       	ldi	r19, 0xFF	; 255
    1870:	83 16       	cp	r8, r19
    1872:	93 06       	cpc	r9, r19
    1874:	21 f4       	brne	.+8      	; 0x187e <vfprintf+0x306>
    1876:	b7 01       	movw	r22, r14
    1878:	8e e2       	ldi	r24, 0x2E	; 46
    187a:	90 e0       	ldi	r25, 0x00	; 0
    187c:	b3 d7       	rcall	.+3942   	; 0x27e4 <fputc>
    187e:	c8 14       	cp	r12, r8
    1880:	d9 04       	cpc	r13, r9
    1882:	4c f0       	brlt	.+18     	; 0x1896 <vfprintf+0x31e>
    1884:	8f 85       	ldd	r24, Y+15	; 0x0f
    1886:	98 89       	ldd	r25, Y+16	; 0x10
    1888:	88 15       	cp	r24, r8
    188a:	99 05       	cpc	r25, r9
    188c:	24 f4       	brge	.+8      	; 0x1896 <vfprintf+0x31e>
    188e:	ed 85       	ldd	r30, Y+13	; 0x0d
    1890:	fe 85       	ldd	r31, Y+14	; 0x0e
    1892:	81 81       	ldd	r24, Z+1	; 0x01
    1894:	01 c0       	rjmp	.+2      	; 0x1898 <vfprintf+0x320>
    1896:	80 e3       	ldi	r24, 0x30	; 48
    1898:	f1 e0       	ldi	r31, 0x01	; 1
    189a:	8f 1a       	sub	r8, r31
    189c:	91 08       	sbc	r9, r1
    189e:	2d 85       	ldd	r18, Y+13	; 0x0d
    18a0:	3e 85       	ldd	r19, Y+14	; 0x0e
    18a2:	2f 5f       	subi	r18, 0xFF	; 255
    18a4:	3f 4f       	sbci	r19, 0xFF	; 255
    18a6:	3e 87       	std	Y+14, r19	; 0x0e
    18a8:	2d 87       	std	Y+13, r18	; 0x0d
    18aa:	80 16       	cp	r8, r16
    18ac:	91 06       	cpc	r9, r17
    18ae:	24 f0       	brlt	.+8      	; 0x18b8 <vfprintf+0x340>
    18b0:	b7 01       	movw	r22, r14
    18b2:	90 e0       	ldi	r25, 0x00	; 0
    18b4:	97 d7       	rcall	.+3886   	; 0x27e4 <fputc>
    18b6:	db cf       	rjmp	.-74     	; 0x186e <vfprintf+0x2f6>
    18b8:	c8 14       	cp	r12, r8
    18ba:	d9 04       	cpc	r13, r9
    18bc:	41 f4       	brne	.+16     	; 0x18ce <vfprintf+0x356>
    18be:	9a 81       	ldd	r25, Y+2	; 0x02
    18c0:	96 33       	cpi	r25, 0x36	; 54
    18c2:	20 f4       	brcc	.+8      	; 0x18cc <vfprintf+0x354>
    18c4:	95 33       	cpi	r25, 0x35	; 53
    18c6:	19 f4       	brne	.+6      	; 0x18ce <vfprintf+0x356>
    18c8:	3c 85       	ldd	r19, Y+12	; 0x0c
    18ca:	34 ff       	sbrs	r19, 4
    18cc:	81 e3       	ldi	r24, 0x31	; 49
    18ce:	b7 01       	movw	r22, r14
    18d0:	90 e0       	ldi	r25, 0x00	; 0
    18d2:	48 c0       	rjmp	.+144    	; 0x1964 <vfprintf+0x3ec>
    18d4:	8a 81       	ldd	r24, Y+2	; 0x02
    18d6:	81 33       	cpi	r24, 0x31	; 49
    18d8:	19 f0       	breq	.+6      	; 0x18e0 <vfprintf+0x368>
    18da:	9c 85       	ldd	r25, Y+12	; 0x0c
    18dc:	9f 7e       	andi	r25, 0xEF	; 239
    18de:	9c 87       	std	Y+12, r25	; 0x0c
    18e0:	b7 01       	movw	r22, r14
    18e2:	90 e0       	ldi	r25, 0x00	; 0
    18e4:	7f d7       	rcall	.+3838   	; 0x27e4 <fputc>
    18e6:	11 11       	cpse	r17, r1
    18e8:	05 c0       	rjmp	.+10     	; 0x18f4 <vfprintf+0x37c>
    18ea:	94 fc       	sbrc	r9, 4
    18ec:	16 c0       	rjmp	.+44     	; 0x191a <vfprintf+0x3a2>
    18ee:	85 e6       	ldi	r24, 0x65	; 101
    18f0:	90 e0       	ldi	r25, 0x00	; 0
    18f2:	15 c0       	rjmp	.+42     	; 0x191e <vfprintf+0x3a6>
    18f4:	b7 01       	movw	r22, r14
    18f6:	8e e2       	ldi	r24, 0x2E	; 46
    18f8:	90 e0       	ldi	r25, 0x00	; 0
    18fa:	74 d7       	rcall	.+3816   	; 0x27e4 <fputc>
    18fc:	1e 5f       	subi	r17, 0xFE	; 254
    18fe:	82 e0       	ldi	r24, 0x02	; 2
    1900:	01 e0       	ldi	r16, 0x01	; 1
    1902:	08 0f       	add	r16, r24
    1904:	f3 01       	movw	r30, r6
    1906:	e8 0f       	add	r30, r24
    1908:	f1 1d       	adc	r31, r1
    190a:	80 81       	ld	r24, Z
    190c:	b7 01       	movw	r22, r14
    190e:	90 e0       	ldi	r25, 0x00	; 0
    1910:	69 d7       	rcall	.+3794   	; 0x27e4 <fputc>
    1912:	80 2f       	mov	r24, r16
    1914:	01 13       	cpse	r16, r17
    1916:	f4 cf       	rjmp	.-24     	; 0x1900 <vfprintf+0x388>
    1918:	e8 cf       	rjmp	.-48     	; 0x18ea <vfprintf+0x372>
    191a:	85 e4       	ldi	r24, 0x45	; 69
    191c:	90 e0       	ldi	r25, 0x00	; 0
    191e:	b7 01       	movw	r22, r14
    1920:	61 d7       	rcall	.+3778   	; 0x27e4 <fputc>
    1922:	d7 fc       	sbrc	r13, 7
    1924:	06 c0       	rjmp	.+12     	; 0x1932 <vfprintf+0x3ba>
    1926:	c1 14       	cp	r12, r1
    1928:	d1 04       	cpc	r13, r1
    192a:	41 f4       	brne	.+16     	; 0x193c <vfprintf+0x3c4>
    192c:	ec 85       	ldd	r30, Y+12	; 0x0c
    192e:	e4 ff       	sbrs	r30, 4
    1930:	05 c0       	rjmp	.+10     	; 0x193c <vfprintf+0x3c4>
    1932:	d1 94       	neg	r13
    1934:	c1 94       	neg	r12
    1936:	d1 08       	sbc	r13, r1
    1938:	8d e2       	ldi	r24, 0x2D	; 45
    193a:	01 c0       	rjmp	.+2      	; 0x193e <vfprintf+0x3c6>
    193c:	8b e2       	ldi	r24, 0x2B	; 43
    193e:	b7 01       	movw	r22, r14
    1940:	90 e0       	ldi	r25, 0x00	; 0
    1942:	50 d7       	rcall	.+3744   	; 0x27e4 <fputc>
    1944:	80 e3       	ldi	r24, 0x30	; 48
    1946:	2a e0       	ldi	r18, 0x0A	; 10
    1948:	c2 16       	cp	r12, r18
    194a:	d1 04       	cpc	r13, r1
    194c:	2c f0       	brlt	.+10     	; 0x1958 <vfprintf+0x3e0>
    194e:	8f 5f       	subi	r24, 0xFF	; 255
    1950:	fa e0       	ldi	r31, 0x0A	; 10
    1952:	cf 1a       	sub	r12, r31
    1954:	d1 08       	sbc	r13, r1
    1956:	f7 cf       	rjmp	.-18     	; 0x1946 <vfprintf+0x3ce>
    1958:	b7 01       	movw	r22, r14
    195a:	90 e0       	ldi	r25, 0x00	; 0
    195c:	43 d7       	rcall	.+3718   	; 0x27e4 <fputc>
    195e:	b7 01       	movw	r22, r14
    1960:	c6 01       	movw	r24, r12
    1962:	c0 96       	adiw	r24, 0x30	; 48
    1964:	3f d7       	rcall	.+3710   	; 0x27e4 <fputc>
    1966:	49 c1       	rjmp	.+658    	; 0x1bfa <vfprintf+0x682>
    1968:	83 36       	cpi	r24, 0x63	; 99
    196a:	31 f0       	breq	.+12     	; 0x1978 <vfprintf+0x400>
    196c:	83 37       	cpi	r24, 0x73	; 115
    196e:	79 f0       	breq	.+30     	; 0x198e <vfprintf+0x416>
    1970:	83 35       	cpi	r24, 0x53	; 83
    1972:	09 f0       	breq	.+2      	; 0x1976 <vfprintf+0x3fe>
    1974:	52 c0       	rjmp	.+164    	; 0x1a1a <vfprintf+0x4a2>
    1976:	1f c0       	rjmp	.+62     	; 0x19b6 <vfprintf+0x43e>
    1978:	56 01       	movw	r10, r12
    197a:	32 e0       	ldi	r19, 0x02	; 2
    197c:	a3 0e       	add	r10, r19
    197e:	b1 1c       	adc	r11, r1
    1980:	f6 01       	movw	r30, r12
    1982:	80 81       	ld	r24, Z
    1984:	89 83       	std	Y+1, r24	; 0x01
    1986:	01 e0       	ldi	r16, 0x01	; 1
    1988:	10 e0       	ldi	r17, 0x00	; 0
    198a:	63 01       	movw	r12, r6
    198c:	11 c0       	rjmp	.+34     	; 0x19b0 <vfprintf+0x438>
    198e:	56 01       	movw	r10, r12
    1990:	f2 e0       	ldi	r31, 0x02	; 2
    1992:	af 0e       	add	r10, r31
    1994:	b1 1c       	adc	r11, r1
    1996:	f6 01       	movw	r30, r12
    1998:	c0 80       	ld	r12, Z
    199a:	d1 80       	ldd	r13, Z+1	; 0x01
    199c:	96 fe       	sbrs	r9, 6
    199e:	03 c0       	rjmp	.+6      	; 0x19a6 <vfprintf+0x42e>
    19a0:	61 2f       	mov	r22, r17
    19a2:	70 e0       	ldi	r23, 0x00	; 0
    19a4:	02 c0       	rjmp	.+4      	; 0x19aa <vfprintf+0x432>
    19a6:	6f ef       	ldi	r22, 0xFF	; 255
    19a8:	7f ef       	ldi	r23, 0xFF	; 255
    19aa:	c6 01       	movw	r24, r12
    19ac:	d2 d6       	rcall	.+3492   	; 0x2752 <strnlen>
    19ae:	8c 01       	movw	r16, r24
    19b0:	f9 2d       	mov	r31, r9
    19b2:	ff 77       	andi	r31, 0x7F	; 127
    19b4:	13 c0       	rjmp	.+38     	; 0x19dc <vfprintf+0x464>
    19b6:	56 01       	movw	r10, r12
    19b8:	22 e0       	ldi	r18, 0x02	; 2
    19ba:	a2 0e       	add	r10, r18
    19bc:	b1 1c       	adc	r11, r1
    19be:	f6 01       	movw	r30, r12
    19c0:	c0 80       	ld	r12, Z
    19c2:	d1 80       	ldd	r13, Z+1	; 0x01
    19c4:	96 fe       	sbrs	r9, 6
    19c6:	03 c0       	rjmp	.+6      	; 0x19ce <vfprintf+0x456>
    19c8:	61 2f       	mov	r22, r17
    19ca:	70 e0       	ldi	r23, 0x00	; 0
    19cc:	02 c0       	rjmp	.+4      	; 0x19d2 <vfprintf+0x45a>
    19ce:	6f ef       	ldi	r22, 0xFF	; 255
    19d0:	7f ef       	ldi	r23, 0xFF	; 255
    19d2:	c6 01       	movw	r24, r12
    19d4:	b3 d6       	rcall	.+3430   	; 0x273c <strnlen_P>
    19d6:	8c 01       	movw	r16, r24
    19d8:	f9 2d       	mov	r31, r9
    19da:	f0 68       	ori	r31, 0x80	; 128
    19dc:	9f 2e       	mov	r9, r31
    19de:	f3 fd       	sbrc	r31, 3
    19e0:	18 c0       	rjmp	.+48     	; 0x1a12 <vfprintf+0x49a>
    19e2:	85 2d       	mov	r24, r5
    19e4:	90 e0       	ldi	r25, 0x00	; 0
    19e6:	08 17       	cp	r16, r24
    19e8:	19 07       	cpc	r17, r25
    19ea:	98 f4       	brcc	.+38     	; 0x1a12 <vfprintf+0x49a>
    19ec:	b7 01       	movw	r22, r14
    19ee:	80 e2       	ldi	r24, 0x20	; 32
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	f8 d6       	rcall	.+3568   	; 0x27e4 <fputc>
    19f4:	5a 94       	dec	r5
    19f6:	f5 cf       	rjmp	.-22     	; 0x19e2 <vfprintf+0x46a>
    19f8:	f6 01       	movw	r30, r12
    19fa:	97 fc       	sbrc	r9, 7
    19fc:	85 91       	lpm	r24, Z+
    19fe:	97 fe       	sbrs	r9, 7
    1a00:	81 91       	ld	r24, Z+
    1a02:	6f 01       	movw	r12, r30
    1a04:	b7 01       	movw	r22, r14
    1a06:	90 e0       	ldi	r25, 0x00	; 0
    1a08:	ed d6       	rcall	.+3546   	; 0x27e4 <fputc>
    1a0a:	51 10       	cpse	r5, r1
    1a0c:	5a 94       	dec	r5
    1a0e:	01 50       	subi	r16, 0x01	; 1
    1a10:	11 09       	sbc	r17, r1
    1a12:	01 15       	cp	r16, r1
    1a14:	11 05       	cpc	r17, r1
    1a16:	81 f7       	brne	.-32     	; 0x19f8 <vfprintf+0x480>
    1a18:	f0 c0       	rjmp	.+480    	; 0x1bfa <vfprintf+0x682>
    1a1a:	84 36       	cpi	r24, 0x64	; 100
    1a1c:	11 f0       	breq	.+4      	; 0x1a22 <vfprintf+0x4aa>
    1a1e:	89 36       	cpi	r24, 0x69	; 105
    1a20:	59 f5       	brne	.+86     	; 0x1a78 <vfprintf+0x500>
    1a22:	56 01       	movw	r10, r12
    1a24:	97 fe       	sbrs	r9, 7
    1a26:	09 c0       	rjmp	.+18     	; 0x1a3a <vfprintf+0x4c2>
    1a28:	24 e0       	ldi	r18, 0x04	; 4
    1a2a:	a2 0e       	add	r10, r18
    1a2c:	b1 1c       	adc	r11, r1
    1a2e:	f6 01       	movw	r30, r12
    1a30:	60 81       	ld	r22, Z
    1a32:	71 81       	ldd	r23, Z+1	; 0x01
    1a34:	82 81       	ldd	r24, Z+2	; 0x02
    1a36:	93 81       	ldd	r25, Z+3	; 0x03
    1a38:	0a c0       	rjmp	.+20     	; 0x1a4e <vfprintf+0x4d6>
    1a3a:	f2 e0       	ldi	r31, 0x02	; 2
    1a3c:	af 0e       	add	r10, r31
    1a3e:	b1 1c       	adc	r11, r1
    1a40:	f6 01       	movw	r30, r12
    1a42:	60 81       	ld	r22, Z
    1a44:	71 81       	ldd	r23, Z+1	; 0x01
    1a46:	07 2e       	mov	r0, r23
    1a48:	00 0c       	add	r0, r0
    1a4a:	88 0b       	sbc	r24, r24
    1a4c:	99 0b       	sbc	r25, r25
    1a4e:	f9 2d       	mov	r31, r9
    1a50:	ff 76       	andi	r31, 0x6F	; 111
    1a52:	9f 2e       	mov	r9, r31
    1a54:	97 ff       	sbrs	r25, 7
    1a56:	09 c0       	rjmp	.+18     	; 0x1a6a <vfprintf+0x4f2>
    1a58:	90 95       	com	r25
    1a5a:	80 95       	com	r24
    1a5c:	70 95       	com	r23
    1a5e:	61 95       	neg	r22
    1a60:	7f 4f       	sbci	r23, 0xFF	; 255
    1a62:	8f 4f       	sbci	r24, 0xFF	; 255
    1a64:	9f 4f       	sbci	r25, 0xFF	; 255
    1a66:	f0 68       	ori	r31, 0x80	; 128
    1a68:	9f 2e       	mov	r9, r31
    1a6a:	2a e0       	ldi	r18, 0x0A	; 10
    1a6c:	30 e0       	ldi	r19, 0x00	; 0
    1a6e:	a3 01       	movw	r20, r6
    1a70:	52 d7       	rcall	.+3748   	; 0x2916 <__ultoa_invert>
    1a72:	c8 2e       	mov	r12, r24
    1a74:	c6 18       	sub	r12, r6
    1a76:	3e c0       	rjmp	.+124    	; 0x1af4 <vfprintf+0x57c>
    1a78:	09 2d       	mov	r16, r9
    1a7a:	85 37       	cpi	r24, 0x75	; 117
    1a7c:	21 f4       	brne	.+8      	; 0x1a86 <vfprintf+0x50e>
    1a7e:	0f 7e       	andi	r16, 0xEF	; 239
    1a80:	2a e0       	ldi	r18, 0x0A	; 10
    1a82:	30 e0       	ldi	r19, 0x00	; 0
    1a84:	1d c0       	rjmp	.+58     	; 0x1ac0 <vfprintf+0x548>
    1a86:	09 7f       	andi	r16, 0xF9	; 249
    1a88:	8f 36       	cpi	r24, 0x6F	; 111
    1a8a:	91 f0       	breq	.+36     	; 0x1ab0 <vfprintf+0x538>
    1a8c:	18 f4       	brcc	.+6      	; 0x1a94 <vfprintf+0x51c>
    1a8e:	88 35       	cpi	r24, 0x58	; 88
    1a90:	59 f0       	breq	.+22     	; 0x1aa8 <vfprintf+0x530>
    1a92:	bc c0       	rjmp	.+376    	; 0x1c0c <vfprintf+0x694>
    1a94:	80 37       	cpi	r24, 0x70	; 112
    1a96:	19 f0       	breq	.+6      	; 0x1a9e <vfprintf+0x526>
    1a98:	88 37       	cpi	r24, 0x78	; 120
    1a9a:	11 f0       	breq	.+4      	; 0x1aa0 <vfprintf+0x528>
    1a9c:	b7 c0       	rjmp	.+366    	; 0x1c0c <vfprintf+0x694>
    1a9e:	00 61       	ori	r16, 0x10	; 16
    1aa0:	04 ff       	sbrs	r16, 4
    1aa2:	09 c0       	rjmp	.+18     	; 0x1ab6 <vfprintf+0x53e>
    1aa4:	04 60       	ori	r16, 0x04	; 4
    1aa6:	07 c0       	rjmp	.+14     	; 0x1ab6 <vfprintf+0x53e>
    1aa8:	94 fe       	sbrs	r9, 4
    1aaa:	08 c0       	rjmp	.+16     	; 0x1abc <vfprintf+0x544>
    1aac:	06 60       	ori	r16, 0x06	; 6
    1aae:	06 c0       	rjmp	.+12     	; 0x1abc <vfprintf+0x544>
    1ab0:	28 e0       	ldi	r18, 0x08	; 8
    1ab2:	30 e0       	ldi	r19, 0x00	; 0
    1ab4:	05 c0       	rjmp	.+10     	; 0x1ac0 <vfprintf+0x548>
    1ab6:	20 e1       	ldi	r18, 0x10	; 16
    1ab8:	30 e0       	ldi	r19, 0x00	; 0
    1aba:	02 c0       	rjmp	.+4      	; 0x1ac0 <vfprintf+0x548>
    1abc:	20 e1       	ldi	r18, 0x10	; 16
    1abe:	32 e0       	ldi	r19, 0x02	; 2
    1ac0:	56 01       	movw	r10, r12
    1ac2:	07 ff       	sbrs	r16, 7
    1ac4:	09 c0       	rjmp	.+18     	; 0x1ad8 <vfprintf+0x560>
    1ac6:	84 e0       	ldi	r24, 0x04	; 4
    1ac8:	a8 0e       	add	r10, r24
    1aca:	b1 1c       	adc	r11, r1
    1acc:	f6 01       	movw	r30, r12
    1ace:	60 81       	ld	r22, Z
    1ad0:	71 81       	ldd	r23, Z+1	; 0x01
    1ad2:	82 81       	ldd	r24, Z+2	; 0x02
    1ad4:	93 81       	ldd	r25, Z+3	; 0x03
    1ad6:	08 c0       	rjmp	.+16     	; 0x1ae8 <vfprintf+0x570>
    1ad8:	f2 e0       	ldi	r31, 0x02	; 2
    1ada:	af 0e       	add	r10, r31
    1adc:	b1 1c       	adc	r11, r1
    1ade:	f6 01       	movw	r30, r12
    1ae0:	60 81       	ld	r22, Z
    1ae2:	71 81       	ldd	r23, Z+1	; 0x01
    1ae4:	80 e0       	ldi	r24, 0x00	; 0
    1ae6:	90 e0       	ldi	r25, 0x00	; 0
    1ae8:	a3 01       	movw	r20, r6
    1aea:	15 d7       	rcall	.+3626   	; 0x2916 <__ultoa_invert>
    1aec:	c8 2e       	mov	r12, r24
    1aee:	c6 18       	sub	r12, r6
    1af0:	0f 77       	andi	r16, 0x7F	; 127
    1af2:	90 2e       	mov	r9, r16
    1af4:	96 fe       	sbrs	r9, 6
    1af6:	0b c0       	rjmp	.+22     	; 0x1b0e <vfprintf+0x596>
    1af8:	09 2d       	mov	r16, r9
    1afa:	0e 7f       	andi	r16, 0xFE	; 254
    1afc:	c1 16       	cp	r12, r17
    1afe:	50 f4       	brcc	.+20     	; 0x1b14 <vfprintf+0x59c>
    1b00:	94 fe       	sbrs	r9, 4
    1b02:	0a c0       	rjmp	.+20     	; 0x1b18 <vfprintf+0x5a0>
    1b04:	92 fc       	sbrc	r9, 2
    1b06:	08 c0       	rjmp	.+16     	; 0x1b18 <vfprintf+0x5a0>
    1b08:	09 2d       	mov	r16, r9
    1b0a:	0e 7e       	andi	r16, 0xEE	; 238
    1b0c:	05 c0       	rjmp	.+10     	; 0x1b18 <vfprintf+0x5a0>
    1b0e:	dc 2c       	mov	r13, r12
    1b10:	09 2d       	mov	r16, r9
    1b12:	03 c0       	rjmp	.+6      	; 0x1b1a <vfprintf+0x5a2>
    1b14:	dc 2c       	mov	r13, r12
    1b16:	01 c0       	rjmp	.+2      	; 0x1b1a <vfprintf+0x5a2>
    1b18:	d1 2e       	mov	r13, r17
    1b1a:	04 ff       	sbrs	r16, 4
    1b1c:	0d c0       	rjmp	.+26     	; 0x1b38 <vfprintf+0x5c0>
    1b1e:	fe 01       	movw	r30, r28
    1b20:	ec 0d       	add	r30, r12
    1b22:	f1 1d       	adc	r31, r1
    1b24:	80 81       	ld	r24, Z
    1b26:	80 33       	cpi	r24, 0x30	; 48
    1b28:	11 f4       	brne	.+4      	; 0x1b2e <vfprintf+0x5b6>
    1b2a:	09 7e       	andi	r16, 0xE9	; 233
    1b2c:	09 c0       	rjmp	.+18     	; 0x1b40 <vfprintf+0x5c8>
    1b2e:	02 ff       	sbrs	r16, 2
    1b30:	06 c0       	rjmp	.+12     	; 0x1b3e <vfprintf+0x5c6>
    1b32:	d3 94       	inc	r13
    1b34:	d3 94       	inc	r13
    1b36:	04 c0       	rjmp	.+8      	; 0x1b40 <vfprintf+0x5c8>
    1b38:	80 2f       	mov	r24, r16
    1b3a:	86 78       	andi	r24, 0x86	; 134
    1b3c:	09 f0       	breq	.+2      	; 0x1b40 <vfprintf+0x5c8>
    1b3e:	d3 94       	inc	r13
    1b40:	03 fd       	sbrc	r16, 3
    1b42:	10 c0       	rjmp	.+32     	; 0x1b64 <vfprintf+0x5ec>
    1b44:	00 ff       	sbrs	r16, 0
    1b46:	06 c0       	rjmp	.+12     	; 0x1b54 <vfprintf+0x5dc>
    1b48:	1c 2d       	mov	r17, r12
    1b4a:	d5 14       	cp	r13, r5
    1b4c:	78 f4       	brcc	.+30     	; 0x1b6c <vfprintf+0x5f4>
    1b4e:	15 0d       	add	r17, r5
    1b50:	1d 19       	sub	r17, r13
    1b52:	0c c0       	rjmp	.+24     	; 0x1b6c <vfprintf+0x5f4>
    1b54:	d5 14       	cp	r13, r5
    1b56:	50 f4       	brcc	.+20     	; 0x1b6c <vfprintf+0x5f4>
    1b58:	b7 01       	movw	r22, r14
    1b5a:	80 e2       	ldi	r24, 0x20	; 32
    1b5c:	90 e0       	ldi	r25, 0x00	; 0
    1b5e:	42 d6       	rcall	.+3204   	; 0x27e4 <fputc>
    1b60:	d3 94       	inc	r13
    1b62:	f8 cf       	rjmp	.-16     	; 0x1b54 <vfprintf+0x5dc>
    1b64:	d5 14       	cp	r13, r5
    1b66:	10 f4       	brcc	.+4      	; 0x1b6c <vfprintf+0x5f4>
    1b68:	5d 18       	sub	r5, r13
    1b6a:	01 c0       	rjmp	.+2      	; 0x1b6e <vfprintf+0x5f6>
    1b6c:	51 2c       	mov	r5, r1
    1b6e:	04 ff       	sbrs	r16, 4
    1b70:	0f c0       	rjmp	.+30     	; 0x1b90 <vfprintf+0x618>
    1b72:	b7 01       	movw	r22, r14
    1b74:	80 e3       	ldi	r24, 0x30	; 48
    1b76:	90 e0       	ldi	r25, 0x00	; 0
    1b78:	35 d6       	rcall	.+3178   	; 0x27e4 <fputc>
    1b7a:	02 ff       	sbrs	r16, 2
    1b7c:	16 c0       	rjmp	.+44     	; 0x1baa <vfprintf+0x632>
    1b7e:	01 fd       	sbrc	r16, 1
    1b80:	03 c0       	rjmp	.+6      	; 0x1b88 <vfprintf+0x610>
    1b82:	88 e7       	ldi	r24, 0x78	; 120
    1b84:	90 e0       	ldi	r25, 0x00	; 0
    1b86:	02 c0       	rjmp	.+4      	; 0x1b8c <vfprintf+0x614>
    1b88:	88 e5       	ldi	r24, 0x58	; 88
    1b8a:	90 e0       	ldi	r25, 0x00	; 0
    1b8c:	b7 01       	movw	r22, r14
    1b8e:	0c c0       	rjmp	.+24     	; 0x1ba8 <vfprintf+0x630>
    1b90:	80 2f       	mov	r24, r16
    1b92:	86 78       	andi	r24, 0x86	; 134
    1b94:	51 f0       	breq	.+20     	; 0x1baa <vfprintf+0x632>
    1b96:	01 ff       	sbrs	r16, 1
    1b98:	02 c0       	rjmp	.+4      	; 0x1b9e <vfprintf+0x626>
    1b9a:	8b e2       	ldi	r24, 0x2B	; 43
    1b9c:	01 c0       	rjmp	.+2      	; 0x1ba0 <vfprintf+0x628>
    1b9e:	80 e2       	ldi	r24, 0x20	; 32
    1ba0:	07 fd       	sbrc	r16, 7
    1ba2:	8d e2       	ldi	r24, 0x2D	; 45
    1ba4:	b7 01       	movw	r22, r14
    1ba6:	90 e0       	ldi	r25, 0x00	; 0
    1ba8:	1d d6       	rcall	.+3130   	; 0x27e4 <fputc>
    1baa:	c1 16       	cp	r12, r17
    1bac:	30 f4       	brcc	.+12     	; 0x1bba <vfprintf+0x642>
    1bae:	b7 01       	movw	r22, r14
    1bb0:	80 e3       	ldi	r24, 0x30	; 48
    1bb2:	90 e0       	ldi	r25, 0x00	; 0
    1bb4:	17 d6       	rcall	.+3118   	; 0x27e4 <fputc>
    1bb6:	11 50       	subi	r17, 0x01	; 1
    1bb8:	f8 cf       	rjmp	.-16     	; 0x1baa <vfprintf+0x632>
    1bba:	ca 94       	dec	r12
    1bbc:	f3 01       	movw	r30, r6
    1bbe:	ec 0d       	add	r30, r12
    1bc0:	f1 1d       	adc	r31, r1
    1bc2:	80 81       	ld	r24, Z
    1bc4:	b7 01       	movw	r22, r14
    1bc6:	90 e0       	ldi	r25, 0x00	; 0
    1bc8:	0d d6       	rcall	.+3098   	; 0x27e4 <fputc>
    1bca:	c1 10       	cpse	r12, r1
    1bcc:	f6 cf       	rjmp	.-20     	; 0x1bba <vfprintf+0x642>
    1bce:	15 c0       	rjmp	.+42     	; 0x1bfa <vfprintf+0x682>
    1bd0:	f4 e0       	ldi	r31, 0x04	; 4
    1bd2:	f5 15       	cp	r31, r5
    1bd4:	50 f5       	brcc	.+84     	; 0x1c2a <vfprintf+0x6b2>
    1bd6:	84 e0       	ldi	r24, 0x04	; 4
    1bd8:	58 1a       	sub	r5, r24
    1bda:	93 fe       	sbrs	r9, 3
    1bdc:	1e c0       	rjmp	.+60     	; 0x1c1a <vfprintf+0x6a2>
    1bde:	01 11       	cpse	r16, r1
    1be0:	25 c0       	rjmp	.+74     	; 0x1c2c <vfprintf+0x6b4>
    1be2:	2c 85       	ldd	r18, Y+12	; 0x0c
    1be4:	23 ff       	sbrs	r18, 3
    1be6:	27 c0       	rjmp	.+78     	; 0x1c36 <vfprintf+0x6be>
    1be8:	0c e8       	ldi	r16, 0x8C	; 140
    1bea:	10 e0       	ldi	r17, 0x00	; 0
    1bec:	39 2d       	mov	r19, r9
    1bee:	30 71       	andi	r19, 0x10	; 16
    1bf0:	93 2e       	mov	r9, r19
    1bf2:	f8 01       	movw	r30, r16
    1bf4:	84 91       	lpm	r24, Z
    1bf6:	81 11       	cpse	r24, r1
    1bf8:	21 c0       	rjmp	.+66     	; 0x1c3c <vfprintf+0x6c4>
    1bfa:	55 20       	and	r5, r5
    1bfc:	09 f4       	brne	.+2      	; 0x1c00 <vfprintf+0x688>
    1bfe:	fc cc       	rjmp	.-1544   	; 0x15f8 <vfprintf+0x80>
    1c00:	b7 01       	movw	r22, r14
    1c02:	80 e2       	ldi	r24, 0x20	; 32
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	ee d5       	rcall	.+3036   	; 0x27e4 <fputc>
    1c08:	5a 94       	dec	r5
    1c0a:	f7 cf       	rjmp	.-18     	; 0x1bfa <vfprintf+0x682>
    1c0c:	f7 01       	movw	r30, r14
    1c0e:	86 81       	ldd	r24, Z+6	; 0x06
    1c10:	97 81       	ldd	r25, Z+7	; 0x07
    1c12:	23 c0       	rjmp	.+70     	; 0x1c5a <vfprintf+0x6e2>
    1c14:	8f ef       	ldi	r24, 0xFF	; 255
    1c16:	9f ef       	ldi	r25, 0xFF	; 255
    1c18:	20 c0       	rjmp	.+64     	; 0x1c5a <vfprintf+0x6e2>
    1c1a:	b7 01       	movw	r22, r14
    1c1c:	80 e2       	ldi	r24, 0x20	; 32
    1c1e:	90 e0       	ldi	r25, 0x00	; 0
    1c20:	e1 d5       	rcall	.+3010   	; 0x27e4 <fputc>
    1c22:	5a 94       	dec	r5
    1c24:	51 10       	cpse	r5, r1
    1c26:	f9 cf       	rjmp	.-14     	; 0x1c1a <vfprintf+0x6a2>
    1c28:	da cf       	rjmp	.-76     	; 0x1bde <vfprintf+0x666>
    1c2a:	51 2c       	mov	r5, r1
    1c2c:	b7 01       	movw	r22, r14
    1c2e:	80 2f       	mov	r24, r16
    1c30:	90 e0       	ldi	r25, 0x00	; 0
    1c32:	d8 d5       	rcall	.+2992   	; 0x27e4 <fputc>
    1c34:	d6 cf       	rjmp	.-84     	; 0x1be2 <vfprintf+0x66a>
    1c36:	00 e9       	ldi	r16, 0x90	; 144
    1c38:	10 e0       	ldi	r17, 0x00	; 0
    1c3a:	d8 cf       	rjmp	.-80     	; 0x1bec <vfprintf+0x674>
    1c3c:	91 10       	cpse	r9, r1
    1c3e:	80 52       	subi	r24, 0x20	; 32
    1c40:	b7 01       	movw	r22, r14
    1c42:	90 e0       	ldi	r25, 0x00	; 0
    1c44:	cf d5       	rcall	.+2974   	; 0x27e4 <fputc>
    1c46:	0f 5f       	subi	r16, 0xFF	; 255
    1c48:	1f 4f       	sbci	r17, 0xFF	; 255
    1c4a:	d3 cf       	rjmp	.-90     	; 0x1bf2 <vfprintf+0x67a>
    1c4c:	23 e0       	ldi	r18, 0x03	; 3
    1c4e:	25 15       	cp	r18, r5
    1c50:	10 f4       	brcc	.+4      	; 0x1c56 <vfprintf+0x6de>
    1c52:	83 e0       	ldi	r24, 0x03	; 3
    1c54:	c1 cf       	rjmp	.-126    	; 0x1bd8 <vfprintf+0x660>
    1c56:	51 2c       	mov	r5, r1
    1c58:	c4 cf       	rjmp	.-120    	; 0x1be2 <vfprintf+0x66a>
    1c5a:	60 96       	adiw	r28, 0x10	; 16
    1c5c:	0f b6       	in	r0, 0x3f	; 63
    1c5e:	f8 94       	cli
    1c60:	de bf       	out	0x3e, r29	; 62
    1c62:	0f be       	out	0x3f, r0	; 63
    1c64:	cd bf       	out	0x3d, r28	; 61
    1c66:	df 91       	pop	r29
    1c68:	cf 91       	pop	r28
    1c6a:	1f 91       	pop	r17
    1c6c:	0f 91       	pop	r16
    1c6e:	ff 90       	pop	r15
    1c70:	ef 90       	pop	r14
    1c72:	df 90       	pop	r13
    1c74:	cf 90       	pop	r12
    1c76:	bf 90       	pop	r11
    1c78:	af 90       	pop	r10
    1c7a:	9f 90       	pop	r9
    1c7c:	8f 90       	pop	r8
    1c7e:	7f 90       	pop	r7
    1c80:	6f 90       	pop	r6
    1c82:	5f 90       	pop	r5
    1c84:	4f 90       	pop	r4
    1c86:	3f 90       	pop	r3
    1c88:	2f 90       	pop	r2
    1c8a:	08 95       	ret

00001c8c <putval>:
    1c8c:	20 fd       	sbrc	r18, 0
    1c8e:	09 c0       	rjmp	.+18     	; 0x1ca2 <putval+0x16>
    1c90:	fc 01       	movw	r30, r24
    1c92:	23 fd       	sbrc	r18, 3
    1c94:	05 c0       	rjmp	.+10     	; 0x1ca0 <putval+0x14>
    1c96:	22 ff       	sbrs	r18, 2
    1c98:	02 c0       	rjmp	.+4      	; 0x1c9e <putval+0x12>
    1c9a:	73 83       	std	Z+3, r23	; 0x03
    1c9c:	62 83       	std	Z+2, r22	; 0x02
    1c9e:	51 83       	std	Z+1, r21	; 0x01
    1ca0:	40 83       	st	Z, r20
    1ca2:	08 95       	ret

00001ca4 <mulacc>:
    1ca4:	44 fd       	sbrc	r20, 4
    1ca6:	17 c0       	rjmp	.+46     	; 0x1cd6 <mulacc+0x32>
    1ca8:	46 fd       	sbrc	r20, 6
    1caa:	17 c0       	rjmp	.+46     	; 0x1cda <mulacc+0x36>
    1cac:	ab 01       	movw	r20, r22
    1cae:	bc 01       	movw	r22, r24
    1cb0:	da 01       	movw	r26, r20
    1cb2:	fb 01       	movw	r30, r22
    1cb4:	aa 0f       	add	r26, r26
    1cb6:	bb 1f       	adc	r27, r27
    1cb8:	ee 1f       	adc	r30, r30
    1cba:	ff 1f       	adc	r31, r31
    1cbc:	10 94       	com	r1
    1cbe:	d1 f7       	brne	.-12     	; 0x1cb4 <mulacc+0x10>
    1cc0:	4a 0f       	add	r20, r26
    1cc2:	5b 1f       	adc	r21, r27
    1cc4:	6e 1f       	adc	r22, r30
    1cc6:	7f 1f       	adc	r23, r31
    1cc8:	cb 01       	movw	r24, r22
    1cca:	ba 01       	movw	r22, r20
    1ccc:	66 0f       	add	r22, r22
    1cce:	77 1f       	adc	r23, r23
    1cd0:	88 1f       	adc	r24, r24
    1cd2:	99 1f       	adc	r25, r25
    1cd4:	09 c0       	rjmp	.+18     	; 0x1ce8 <mulacc+0x44>
    1cd6:	33 e0       	ldi	r19, 0x03	; 3
    1cd8:	01 c0       	rjmp	.+2      	; 0x1cdc <mulacc+0x38>
    1cda:	34 e0       	ldi	r19, 0x04	; 4
    1cdc:	66 0f       	add	r22, r22
    1cde:	77 1f       	adc	r23, r23
    1ce0:	88 1f       	adc	r24, r24
    1ce2:	99 1f       	adc	r25, r25
    1ce4:	31 50       	subi	r19, 0x01	; 1
    1ce6:	d1 f7       	brne	.-12     	; 0x1cdc <mulacc+0x38>
    1ce8:	62 0f       	add	r22, r18
    1cea:	71 1d       	adc	r23, r1
    1cec:	81 1d       	adc	r24, r1
    1cee:	91 1d       	adc	r25, r1
    1cf0:	08 95       	ret

00001cf2 <skip_spaces>:
    1cf2:	0f 93       	push	r16
    1cf4:	1f 93       	push	r17
    1cf6:	cf 93       	push	r28
    1cf8:	df 93       	push	r29
    1cfa:	8c 01       	movw	r16, r24
    1cfc:	c8 01       	movw	r24, r16
    1cfe:	34 d5       	rcall	.+2664   	; 0x2768 <fgetc>
    1d00:	ec 01       	movw	r28, r24
    1d02:	97 fd       	sbrc	r25, 7
    1d04:	06 c0       	rjmp	.+12     	; 0x1d12 <skip_spaces+0x20>
    1d06:	ff d4       	rcall	.+2558   	; 0x2706 <isspace>
    1d08:	89 2b       	or	r24, r25
    1d0a:	c1 f7       	brne	.-16     	; 0x1cfc <skip_spaces+0xa>
    1d0c:	b8 01       	movw	r22, r16
    1d0e:	ce 01       	movw	r24, r28
    1d10:	e9 d5       	rcall	.+3026   	; 0x28e4 <ungetc>
    1d12:	ce 01       	movw	r24, r28
    1d14:	df 91       	pop	r29
    1d16:	cf 91       	pop	r28
    1d18:	1f 91       	pop	r17
    1d1a:	0f 91       	pop	r16
    1d1c:	08 95       	ret

00001d1e <conv_int>:
    1d1e:	8f 92       	push	r8
    1d20:	9f 92       	push	r9
    1d22:	af 92       	push	r10
    1d24:	bf 92       	push	r11
    1d26:	cf 92       	push	r12
    1d28:	df 92       	push	r13
    1d2a:	ef 92       	push	r14
    1d2c:	ff 92       	push	r15
    1d2e:	0f 93       	push	r16
    1d30:	1f 93       	push	r17
    1d32:	cf 93       	push	r28
    1d34:	df 93       	push	r29
    1d36:	7c 01       	movw	r14, r24
    1d38:	8b 01       	movw	r16, r22
    1d3a:	6a 01       	movw	r12, r20
    1d3c:	d2 2f       	mov	r29, r18
    1d3e:	14 d5       	rcall	.+2600   	; 0x2768 <fgetc>
    1d40:	9c 01       	movw	r18, r24
    1d42:	33 27       	eor	r19, r19
    1d44:	2b 32       	cpi	r18, 0x2B	; 43
    1d46:	31 05       	cpc	r19, r1
    1d48:	21 f0       	breq	.+8      	; 0x1d52 <conv_int+0x34>
    1d4a:	2d 32       	cpi	r18, 0x2D	; 45
    1d4c:	31 05       	cpc	r19, r1
    1d4e:	51 f4       	brne	.+20     	; 0x1d64 <conv_int+0x46>
    1d50:	d0 68       	ori	r29, 0x80	; 128
    1d52:	01 50       	subi	r16, 0x01	; 1
    1d54:	11 09       	sbc	r17, r1
    1d56:	11 f4       	brne	.+4      	; 0x1d5c <conv_int+0x3e>
    1d58:	80 e0       	ldi	r24, 0x00	; 0
    1d5a:	64 c0       	rjmp	.+200    	; 0x1e24 <conv_int+0x106>
    1d5c:	c7 01       	movw	r24, r14
    1d5e:	04 d5       	rcall	.+2568   	; 0x2768 <fgetc>
    1d60:	97 fd       	sbrc	r25, 7
    1d62:	fa cf       	rjmp	.-12     	; 0x1d58 <conv_int+0x3a>
    1d64:	cd 2f       	mov	r28, r29
    1d66:	cd 7f       	andi	r28, 0xFD	; 253
    1d68:	2d 2f       	mov	r18, r29
    1d6a:	20 73       	andi	r18, 0x30	; 48
    1d6c:	09 f5       	brne	.+66     	; 0x1db0 <conv_int+0x92>
    1d6e:	80 33       	cpi	r24, 0x30	; 48
    1d70:	f9 f4       	brne	.+62     	; 0x1db0 <conv_int+0x92>
    1d72:	58 01       	movw	r10, r16
    1d74:	81 e0       	ldi	r24, 0x01	; 1
    1d76:	a8 1a       	sub	r10, r24
    1d78:	b1 08       	sbc	r11, r1
    1d7a:	09 f4       	brne	.+2      	; 0x1d7e <conv_int+0x60>
    1d7c:	40 c0       	rjmp	.+128    	; 0x1dfe <conv_int+0xe0>
    1d7e:	c7 01       	movw	r24, r14
    1d80:	f3 d4       	rcall	.+2534   	; 0x2768 <fgetc>
    1d82:	97 fd       	sbrc	r25, 7
    1d84:	3c c0       	rjmp	.+120    	; 0x1dfe <conv_int+0xe0>
    1d86:	9c 01       	movw	r18, r24
    1d88:	2f 7d       	andi	r18, 0xDF	; 223
    1d8a:	33 27       	eor	r19, r19
    1d8c:	28 35       	cpi	r18, 0x58	; 88
    1d8e:	31 05       	cpc	r19, r1
    1d90:	49 f4       	brne	.+18     	; 0x1da4 <conv_int+0x86>
    1d92:	c2 64       	ori	r28, 0x42	; 66
    1d94:	02 50       	subi	r16, 0x02	; 2
    1d96:	11 09       	sbc	r17, r1
    1d98:	91 f1       	breq	.+100    	; 0x1dfe <conv_int+0xe0>
    1d9a:	c7 01       	movw	r24, r14
    1d9c:	e5 d4       	rcall	.+2506   	; 0x2768 <fgetc>
    1d9e:	97 ff       	sbrs	r25, 7
    1da0:	07 c0       	rjmp	.+14     	; 0x1db0 <conv_int+0x92>
    1da2:	2d c0       	rjmp	.+90     	; 0x1dfe <conv_int+0xe0>
    1da4:	d6 ff       	sbrs	r29, 6
    1da6:	02 c0       	rjmp	.+4      	; 0x1dac <conv_int+0x8e>
    1da8:	c2 60       	ori	r28, 0x02	; 2
    1daa:	01 c0       	rjmp	.+2      	; 0x1dae <conv_int+0x90>
    1dac:	c2 61       	ori	r28, 0x12	; 18
    1dae:	85 01       	movw	r16, r10
    1db0:	81 2c       	mov	r8, r1
    1db2:	91 2c       	mov	r9, r1
    1db4:	54 01       	movw	r10, r8
    1db6:	20 ed       	ldi	r18, 0xD0	; 208
    1db8:	28 0f       	add	r18, r24
    1dba:	28 30       	cpi	r18, 0x08	; 8
    1dbc:	78 f0       	brcs	.+30     	; 0x1ddc <conv_int+0xbe>
    1dbe:	c4 ff       	sbrs	r28, 4
    1dc0:	03 c0       	rjmp	.+6      	; 0x1dc8 <conv_int+0xaa>
    1dc2:	b7 01       	movw	r22, r14
    1dc4:	8f d5       	rcall	.+2846   	; 0x28e4 <ungetc>
    1dc6:	18 c0       	rjmp	.+48     	; 0x1df8 <conv_int+0xda>
    1dc8:	2a 30       	cpi	r18, 0x0A	; 10
    1dca:	40 f0       	brcs	.+16     	; 0x1ddc <conv_int+0xbe>
    1dcc:	c6 ff       	sbrs	r28, 6
    1dce:	f9 cf       	rjmp	.-14     	; 0x1dc2 <conv_int+0xa4>
    1dd0:	2f 7d       	andi	r18, 0xDF	; 223
    1dd2:	3f ee       	ldi	r19, 0xEF	; 239
    1dd4:	32 0f       	add	r19, r18
    1dd6:	36 30       	cpi	r19, 0x06	; 6
    1dd8:	a0 f7       	brcc	.-24     	; 0x1dc2 <conv_int+0xa4>
    1dda:	27 50       	subi	r18, 0x07	; 7
    1ddc:	4c 2f       	mov	r20, r28
    1dde:	c5 01       	movw	r24, r10
    1de0:	b4 01       	movw	r22, r8
    1de2:	60 df       	rcall	.-320    	; 0x1ca4 <mulacc>
    1de4:	4b 01       	movw	r8, r22
    1de6:	5c 01       	movw	r10, r24
    1de8:	c2 60       	ori	r28, 0x02	; 2
    1dea:	01 50       	subi	r16, 0x01	; 1
    1dec:	11 09       	sbc	r17, r1
    1dee:	51 f0       	breq	.+20     	; 0x1e04 <conv_int+0xe6>
    1df0:	c7 01       	movw	r24, r14
    1df2:	ba d4       	rcall	.+2420   	; 0x2768 <fgetc>
    1df4:	97 ff       	sbrs	r25, 7
    1df6:	df cf       	rjmp	.-66     	; 0x1db6 <conv_int+0x98>
    1df8:	c1 fd       	sbrc	r28, 1
    1dfa:	04 c0       	rjmp	.+8      	; 0x1e04 <conv_int+0xe6>
    1dfc:	ad cf       	rjmp	.-166    	; 0x1d58 <conv_int+0x3a>
    1dfe:	81 2c       	mov	r8, r1
    1e00:	91 2c       	mov	r9, r1
    1e02:	54 01       	movw	r10, r8
    1e04:	c7 ff       	sbrs	r28, 7
    1e06:	08 c0       	rjmp	.+16     	; 0x1e18 <conv_int+0xfa>
    1e08:	b0 94       	com	r11
    1e0a:	a0 94       	com	r10
    1e0c:	90 94       	com	r9
    1e0e:	80 94       	com	r8
    1e10:	81 1c       	adc	r8, r1
    1e12:	91 1c       	adc	r9, r1
    1e14:	a1 1c       	adc	r10, r1
    1e16:	b1 1c       	adc	r11, r1
    1e18:	2c 2f       	mov	r18, r28
    1e1a:	b5 01       	movw	r22, r10
    1e1c:	a4 01       	movw	r20, r8
    1e1e:	c6 01       	movw	r24, r12
    1e20:	35 df       	rcall	.-406    	; 0x1c8c <putval>
    1e22:	81 e0       	ldi	r24, 0x01	; 1
    1e24:	df 91       	pop	r29
    1e26:	cf 91       	pop	r28
    1e28:	1f 91       	pop	r17
    1e2a:	0f 91       	pop	r16
    1e2c:	ff 90       	pop	r15
    1e2e:	ef 90       	pop	r14
    1e30:	df 90       	pop	r13
    1e32:	cf 90       	pop	r12
    1e34:	bf 90       	pop	r11
    1e36:	af 90       	pop	r10
    1e38:	9f 90       	pop	r9
    1e3a:	8f 90       	pop	r8
    1e3c:	08 95       	ret

00001e3e <conv_brk>:
    1e3e:	4f 92       	push	r4
    1e40:	5f 92       	push	r5
    1e42:	6f 92       	push	r6
    1e44:	7f 92       	push	r7
    1e46:	8f 92       	push	r8
    1e48:	9f 92       	push	r9
    1e4a:	af 92       	push	r10
    1e4c:	bf 92       	push	r11
    1e4e:	cf 92       	push	r12
    1e50:	df 92       	push	r13
    1e52:	ef 92       	push	r14
    1e54:	ff 92       	push	r15
    1e56:	0f 93       	push	r16
    1e58:	1f 93       	push	r17
    1e5a:	cf 93       	push	r28
    1e5c:	df 93       	push	r29
    1e5e:	cd b7       	in	r28, 0x3d	; 61
    1e60:	de b7       	in	r29, 0x3e	; 62
    1e62:	a0 97       	sbiw	r28, 0x20	; 32
    1e64:	0f b6       	in	r0, 0x3f	; 63
    1e66:	f8 94       	cli
    1e68:	de bf       	out	0x3e, r29	; 62
    1e6a:	0f be       	out	0x3f, r0	; 63
    1e6c:	cd bf       	out	0x3d, r28	; 61
    1e6e:	5c 01       	movw	r10, r24
    1e70:	4b 01       	movw	r8, r22
    1e72:	7a 01       	movw	r14, r20
    1e74:	8e 01       	movw	r16, r28
    1e76:	0f 5f       	subi	r16, 0xFF	; 255
    1e78:	1f 4f       	sbci	r17, 0xFF	; 255
    1e7a:	68 01       	movw	r12, r16
    1e7c:	80 e2       	ldi	r24, 0x20	; 32
    1e7e:	f8 01       	movw	r30, r16
    1e80:	11 92       	st	Z+, r1
    1e82:	8a 95       	dec	r24
    1e84:	e9 f7       	brne	.-6      	; 0x1e80 <conv_brk+0x42>
    1e86:	f5 01       	movw	r30, r10
    1e88:	53 80       	ldd	r5, Z+3	; 0x03
    1e8a:	40 e0       	ldi	r20, 0x00	; 0
    1e8c:	50 e0       	ldi	r21, 0x00	; 0
    1e8e:	61 2c       	mov	r6, r1
    1e90:	90 e0       	ldi	r25, 0x00	; 0
    1e92:	71 2c       	mov	r7, r1
    1e94:	a1 e0       	ldi	r26, 0x01	; 1
    1e96:	b0 e0       	ldi	r27, 0x00	; 0
    1e98:	f9 01       	movw	r30, r18
    1e9a:	53 fc       	sbrc	r5, 3
    1e9c:	85 91       	lpm	r24, Z+
    1e9e:	53 fe       	sbrs	r5, 3
    1ea0:	81 91       	ld	r24, Z+
    1ea2:	8f 01       	movw	r16, r30
    1ea4:	48 2e       	mov	r4, r24
    1ea6:	9f 01       	movw	r18, r30
    1ea8:	81 11       	cpse	r24, r1
    1eaa:	03 c0       	rjmp	.+6      	; 0x1eb2 <conv_brk+0x74>
    1eac:	80 e0       	ldi	r24, 0x00	; 0
    1eae:	90 e0       	ldi	r25, 0x00	; 0
    1eb0:	94 c0       	rjmp	.+296    	; 0x1fda <conv_brk+0x19c>
    1eb2:	8e 35       	cpi	r24, 0x5E	; 94
    1eb4:	19 f4       	brne	.+6      	; 0x1ebc <conv_brk+0x7e>
    1eb6:	41 15       	cp	r20, r1
    1eb8:	51 05       	cpc	r21, r1
    1eba:	51 f1       	breq	.+84     	; 0x1f10 <conv_brk+0xd2>
    1ebc:	67 2d       	mov	r22, r7
    1ebe:	70 e0       	ldi	r23, 0x00	; 0
    1ec0:	64 17       	cp	r22, r20
    1ec2:	75 07       	cpc	r23, r21
    1ec4:	3c f4       	brge	.+14     	; 0x1ed4 <conv_brk+0x96>
    1ec6:	8d 35       	cpi	r24, 0x5D	; 93
    1ec8:	61 f1       	breq	.+88     	; 0x1f22 <conv_brk+0xe4>
    1eca:	8d 32       	cpi	r24, 0x2D	; 45
    1ecc:	19 f4       	brne	.+6      	; 0x1ed4 <conv_brk+0x96>
    1ece:	99 23       	and	r25, r25
    1ed0:	11 f1       	breq	.+68     	; 0x1f16 <conv_brk+0xd8>
    1ed2:	03 c0       	rjmp	.+6      	; 0x1eda <conv_brk+0x9c>
    1ed4:	99 23       	and	r25, r25
    1ed6:	09 f4       	brne	.+2      	; 0x1eda <conv_brk+0x9c>
    1ed8:	6b c0       	rjmp	.+214    	; 0x1fb0 <conv_brk+0x172>
    1eda:	84 2d       	mov	r24, r4
    1edc:	86 95       	lsr	r24
    1ede:	86 95       	lsr	r24
    1ee0:	86 95       	lsr	r24
    1ee2:	f6 01       	movw	r30, r12
    1ee4:	e8 0f       	add	r30, r24
    1ee6:	f1 1d       	adc	r31, r1
    1ee8:	84 2d       	mov	r24, r4
    1eea:	87 70       	andi	r24, 0x07	; 7
    1eec:	8d 01       	movw	r16, r26
    1eee:	02 c0       	rjmp	.+4      	; 0x1ef4 <conv_brk+0xb6>
    1ef0:	00 0f       	add	r16, r16
    1ef2:	11 1f       	adc	r17, r17
    1ef4:	8a 95       	dec	r24
    1ef6:	e2 f7       	brpl	.-8      	; 0x1ef0 <conv_brk+0xb2>
    1ef8:	c8 01       	movw	r24, r16
    1efa:	90 81       	ld	r25, Z
    1efc:	89 2b       	or	r24, r25
    1efe:	80 83       	st	Z, r24
    1f00:	64 14       	cp	r6, r4
    1f02:	59 f0       	breq	.+22     	; 0x1f1a <conv_brk+0xdc>
    1f04:	46 14       	cp	r4, r6
    1f06:	10 f4       	brcc	.+4      	; 0x1f0c <conv_brk+0xce>
    1f08:	43 94       	inc	r4
    1f0a:	e7 cf       	rjmp	.-50     	; 0x1eda <conv_brk+0x9c>
    1f0c:	4a 94       	dec	r4
    1f0e:	e5 cf       	rjmp	.-54     	; 0x1eda <conv_brk+0x9c>
    1f10:	77 24       	eor	r7, r7
    1f12:	73 94       	inc	r7
    1f14:	03 c0       	rjmp	.+6      	; 0x1f1c <conv_brk+0xde>
    1f16:	91 e0       	ldi	r25, 0x01	; 1
    1f18:	01 c0       	rjmp	.+2      	; 0x1f1c <conv_brk+0xde>
    1f1a:	90 e0       	ldi	r25, 0x00	; 0
    1f1c:	4f 5f       	subi	r20, 0xFF	; 255
    1f1e:	5f 4f       	sbci	r21, 0xFF	; 255
    1f20:	bb cf       	rjmp	.-138    	; 0x1e98 <conv_brk+0x5a>
    1f22:	99 23       	and	r25, r25
    1f24:	19 f0       	breq	.+6      	; 0x1f2c <conv_brk+0xee>
    1f26:	8e 81       	ldd	r24, Y+6	; 0x06
    1f28:	80 62       	ori	r24, 0x20	; 32
    1f2a:	8e 83       	std	Y+6, r24	; 0x06
    1f2c:	71 10       	cpse	r7, r1
    1f2e:	03 c0       	rjmp	.+6      	; 0x1f36 <conv_brk+0xf8>
    1f30:	77 24       	eor	r7, r7
    1f32:	73 94       	inc	r7
    1f34:	19 c0       	rjmp	.+50     	; 0x1f68 <conv_brk+0x12a>
    1f36:	f6 01       	movw	r30, r12
    1f38:	9e 01       	movw	r18, r28
    1f3a:	2f 5d       	subi	r18, 0xDF	; 223
    1f3c:	3f 4f       	sbci	r19, 0xFF	; 255
    1f3e:	80 81       	ld	r24, Z
    1f40:	80 95       	com	r24
    1f42:	81 93       	st	Z+, r24
    1f44:	2e 17       	cp	r18, r30
    1f46:	3f 07       	cpc	r19, r31
    1f48:	d1 f7       	brne	.-12     	; 0x1f3e <conv_brk+0x100>
    1f4a:	f2 cf       	rjmp	.-28     	; 0x1f30 <conv_brk+0xf2>
    1f4c:	e1 14       	cp	r14, r1
    1f4e:	f1 04       	cpc	r15, r1
    1f50:	31 f0       	breq	.+12     	; 0x1f5e <conv_brk+0x120>
    1f52:	f7 01       	movw	r30, r14
    1f54:	80 83       	st	Z, r24
    1f56:	b7 01       	movw	r22, r14
    1f58:	6f 5f       	subi	r22, 0xFF	; 255
    1f5a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f5c:	7b 01       	movw	r14, r22
    1f5e:	71 e0       	ldi	r23, 0x01	; 1
    1f60:	87 1a       	sub	r8, r23
    1f62:	91 08       	sbc	r9, r1
    1f64:	71 2c       	mov	r7, r1
    1f66:	e9 f0       	breq	.+58     	; 0x1fa2 <conv_brk+0x164>
    1f68:	c5 01       	movw	r24, r10
    1f6a:	fe d3       	rcall	.+2044   	; 0x2768 <fgetc>
    1f6c:	97 fd       	sbrc	r25, 7
    1f6e:	17 c0       	rjmp	.+46     	; 0x1f9e <conv_brk+0x160>
    1f70:	fc 01       	movw	r30, r24
    1f72:	ff 27       	eor	r31, r31
    1f74:	23 e0       	ldi	r18, 0x03	; 3
    1f76:	f5 95       	asr	r31
    1f78:	e7 95       	ror	r30
    1f7a:	2a 95       	dec	r18
    1f7c:	e1 f7       	brne	.-8      	; 0x1f76 <conv_brk+0x138>
    1f7e:	ec 0d       	add	r30, r12
    1f80:	fd 1d       	adc	r31, r13
    1f82:	20 81       	ld	r18, Z
    1f84:	30 e0       	ldi	r19, 0x00	; 0
    1f86:	ac 01       	movw	r20, r24
    1f88:	47 70       	andi	r20, 0x07	; 7
    1f8a:	55 27       	eor	r21, r21
    1f8c:	02 c0       	rjmp	.+4      	; 0x1f92 <conv_brk+0x154>
    1f8e:	35 95       	asr	r19
    1f90:	27 95       	ror	r18
    1f92:	4a 95       	dec	r20
    1f94:	e2 f7       	brpl	.-8      	; 0x1f8e <conv_brk+0x150>
    1f96:	20 fd       	sbrc	r18, 0
    1f98:	d9 cf       	rjmp	.-78     	; 0x1f4c <conv_brk+0x10e>
    1f9a:	b5 01       	movw	r22, r10
    1f9c:	a3 d4       	rcall	.+2374   	; 0x28e4 <ungetc>
    1f9e:	71 10       	cpse	r7, r1
    1fa0:	85 cf       	rjmp	.-246    	; 0x1eac <conv_brk+0x6e>
    1fa2:	e1 14       	cp	r14, r1
    1fa4:	f1 04       	cpc	r15, r1
    1fa6:	11 f0       	breq	.+4      	; 0x1fac <conv_brk+0x16e>
    1fa8:	f7 01       	movw	r30, r14
    1faa:	10 82       	st	Z, r1
    1fac:	c8 01       	movw	r24, r16
    1fae:	15 c0       	rjmp	.+42     	; 0x1fda <conv_brk+0x19c>
    1fb0:	68 2f       	mov	r22, r24
    1fb2:	66 95       	lsr	r22
    1fb4:	66 95       	lsr	r22
    1fb6:	66 95       	lsr	r22
    1fb8:	f6 01       	movw	r30, r12
    1fba:	e6 0f       	add	r30, r22
    1fbc:	f1 1d       	adc	r31, r1
    1fbe:	68 2f       	mov	r22, r24
    1fc0:	67 70       	andi	r22, 0x07	; 7
    1fc2:	8d 01       	movw	r16, r26
    1fc4:	02 c0       	rjmp	.+4      	; 0x1fca <conv_brk+0x18c>
    1fc6:	00 0f       	add	r16, r16
    1fc8:	11 1f       	adc	r17, r17
    1fca:	6a 95       	dec	r22
    1fcc:	e2 f7       	brpl	.-8      	; 0x1fc6 <conv_brk+0x188>
    1fce:	b8 01       	movw	r22, r16
    1fd0:	70 81       	ld	r23, Z
    1fd2:	67 2b       	or	r22, r23
    1fd4:	60 83       	st	Z, r22
    1fd6:	68 2e       	mov	r6, r24
    1fd8:	a1 cf       	rjmp	.-190    	; 0x1f1c <conv_brk+0xde>
    1fda:	a0 96       	adiw	r28, 0x20	; 32
    1fdc:	0f b6       	in	r0, 0x3f	; 63
    1fde:	f8 94       	cli
    1fe0:	de bf       	out	0x3e, r29	; 62
    1fe2:	0f be       	out	0x3f, r0	; 63
    1fe4:	cd bf       	out	0x3d, r28	; 61
    1fe6:	df 91       	pop	r29
    1fe8:	cf 91       	pop	r28
    1fea:	1f 91       	pop	r17
    1fec:	0f 91       	pop	r16
    1fee:	ff 90       	pop	r15
    1ff0:	ef 90       	pop	r14
    1ff2:	df 90       	pop	r13
    1ff4:	cf 90       	pop	r12
    1ff6:	bf 90       	pop	r11
    1ff8:	af 90       	pop	r10
    1ffa:	9f 90       	pop	r9
    1ffc:	8f 90       	pop	r8
    1ffe:	7f 90       	pop	r7
    2000:	6f 90       	pop	r6
    2002:	5f 90       	pop	r5
    2004:	4f 90       	pop	r4
    2006:	08 95       	ret

00002008 <conv_flt>:
    2008:	2f 92       	push	r2
    200a:	3f 92       	push	r3
    200c:	4f 92       	push	r4
    200e:	5f 92       	push	r5
    2010:	6f 92       	push	r6
    2012:	7f 92       	push	r7
    2014:	9f 92       	push	r9
    2016:	af 92       	push	r10
    2018:	bf 92       	push	r11
    201a:	cf 92       	push	r12
    201c:	df 92       	push	r13
    201e:	ef 92       	push	r14
    2020:	ff 92       	push	r15
    2022:	0f 93       	push	r16
    2024:	1f 93       	push	r17
    2026:	cf 93       	push	r28
    2028:	df 93       	push	r29
    202a:	6c 01       	movw	r12, r24
    202c:	8b 01       	movw	r16, r22
    202e:	1a 01       	movw	r2, r20
    2030:	9b d3       	rcall	.+1846   	; 0x2768 <fgetc>
    2032:	ec 01       	movw	r28, r24
    2034:	99 27       	eor	r25, r25
    2036:	8b 32       	cpi	r24, 0x2B	; 43
    2038:	91 05       	cpc	r25, r1
    203a:	29 f0       	breq	.+10     	; 0x2046 <conv_flt+0x3e>
    203c:	8d 97       	sbiw	r24, 0x2d	; 45
    203e:	79 f4       	brne	.+30     	; 0x205e <conv_flt+0x56>
    2040:	30 e8       	ldi	r19, 0x80	; 128
    2042:	93 2e       	mov	r9, r19
    2044:	01 c0       	rjmp	.+2      	; 0x2048 <conv_flt+0x40>
    2046:	91 2c       	mov	r9, r1
    2048:	01 50       	subi	r16, 0x01	; 1
    204a:	11 09       	sbc	r17, r1
    204c:	11 f4       	brne	.+4      	; 0x2052 <conv_flt+0x4a>
    204e:	80 e0       	ldi	r24, 0x00	; 0
    2050:	fe c0       	rjmp	.+508    	; 0x224e <conv_flt+0x246>
    2052:	c6 01       	movw	r24, r12
    2054:	89 d3       	rcall	.+1810   	; 0x2768 <fgetc>
    2056:	ec 01       	movw	r28, r24
    2058:	97 ff       	sbrs	r25, 7
    205a:	02 c0       	rjmp	.+4      	; 0x2060 <conv_flt+0x58>
    205c:	f8 cf       	rjmp	.-16     	; 0x204e <conv_flt+0x46>
    205e:	91 2c       	mov	r9, r1
    2060:	ce 01       	movw	r24, r28
    2062:	59 d3       	rcall	.+1714   	; 0x2716 <tolower>
    2064:	89 36       	cpi	r24, 0x69	; 105
    2066:	91 05       	cpc	r25, r1
    2068:	31 f0       	breq	.+12     	; 0x2076 <conv_flt+0x6e>
    206a:	8e 36       	cpi	r24, 0x6E	; 110
    206c:	91 05       	cpc	r25, r1
    206e:	81 f5       	brne	.+96     	; 0x20d0 <conv_flt+0xc8>
    2070:	c0 ea       	ldi	r28, 0xA0	; 160
    2072:	d1 e0       	ldi	r29, 0x01	; 1
    2074:	02 c0       	rjmp	.+4      	; 0x207a <conv_flt+0x72>
    2076:	c3 ea       	ldi	r28, 0xA3	; 163
    2078:	d1 e0       	ldi	r29, 0x01	; 1
    207a:	21 96       	adiw	r28, 0x01	; 1
    207c:	fe 01       	movw	r30, r28
    207e:	31 97       	sbiw	r30, 0x01	; 1
    2080:	b4 90       	lpm	r11, Z
    2082:	bb 20       	and	r11, r11
    2084:	b1 f0       	breq	.+44     	; 0x20b2 <conv_flt+0xaa>
    2086:	01 50       	subi	r16, 0x01	; 1
    2088:	11 09       	sbc	r17, r1
    208a:	79 f0       	breq	.+30     	; 0x20aa <conv_flt+0xa2>
    208c:	c6 01       	movw	r24, r12
    208e:	6c d3       	rcall	.+1752   	; 0x2768 <fgetc>
    2090:	7c 01       	movw	r14, r24
    2092:	97 fd       	sbrc	r25, 7
    2094:	0a c0       	rjmp	.+20     	; 0x20aa <conv_flt+0xa2>
    2096:	3f d3       	rcall	.+1662   	; 0x2716 <tolower>
    2098:	99 27       	eor	r25, r25
    209a:	eb 2d       	mov	r30, r11
    209c:	f0 e0       	ldi	r31, 0x00	; 0
    209e:	8e 17       	cp	r24, r30
    20a0:	9f 07       	cpc	r25, r31
    20a2:	59 f3       	breq	.-42     	; 0x207a <conv_flt+0x72>
    20a4:	b6 01       	movw	r22, r12
    20a6:	c7 01       	movw	r24, r14
    20a8:	1d d4       	rcall	.+2106   	; 0x28e4 <ungetc>
    20aa:	c6 5a       	subi	r28, 0xA6	; 166
    20ac:	d1 40       	sbci	r29, 0x01	; 1
    20ae:	79 f6       	brne	.-98     	; 0x204e <conv_flt+0x46>
    20b0:	03 c0       	rjmp	.+6      	; 0x20b8 <conv_flt+0xb0>
    20b2:	c3 5a       	subi	r28, 0xA3	; 163
    20b4:	d1 40       	sbci	r29, 0x01	; 1
    20b6:	29 f0       	breq	.+10     	; 0x20c2 <conv_flt+0xba>
    20b8:	80 e0       	ldi	r24, 0x00	; 0
    20ba:	90 e0       	ldi	r25, 0x00	; 0
    20bc:	a0 e8       	ldi	r26, 0x80	; 128
    20be:	bf e7       	ldi	r27, 0x7F	; 127
    20c0:	04 c0       	rjmp	.+8      	; 0x20ca <conv_flt+0xc2>
    20c2:	80 e0       	ldi	r24, 0x00	; 0
    20c4:	90 e0       	ldi	r25, 0x00	; 0
    20c6:	a0 ec       	ldi	r26, 0xC0	; 192
    20c8:	bf e7       	ldi	r27, 0x7F	; 127
    20ca:	bc 01       	movw	r22, r24
    20cc:	cd 01       	movw	r24, r26
    20ce:	af c0       	rjmp	.+350    	; 0x222e <conv_flt+0x226>
    20d0:	41 2c       	mov	r4, r1
    20d2:	51 2c       	mov	r5, r1
    20d4:	32 01       	movw	r6, r4
    20d6:	e1 2c       	mov	r14, r1
    20d8:	f1 2c       	mov	r15, r1
    20da:	2c 2f       	mov	r18, r28
    20dc:	20 53       	subi	r18, 0x30	; 48
    20de:	2a 30       	cpi	r18, 0x0A	; 10
    20e0:	08 f5       	brcc	.+66     	; 0x2124 <conv_flt+0x11c>
    20e2:	e9 2d       	mov	r30, r9
    20e4:	e2 60       	ori	r30, 0x02	; 2
    20e6:	be 2e       	mov	r11, r30
    20e8:	89 2d       	mov	r24, r9
    20ea:	88 70       	andi	r24, 0x08	; 8
    20ec:	92 fe       	sbrs	r9, 2
    20ee:	06 c0       	rjmp	.+12     	; 0x20fc <conv_flt+0xf4>
    20f0:	81 11       	cpse	r24, r1
    20f2:	1f c0       	rjmp	.+62     	; 0x2132 <conv_flt+0x12a>
    20f4:	ff ef       	ldi	r31, 0xFF	; 255
    20f6:	ef 1a       	sub	r14, r31
    20f8:	ff 0a       	sbc	r15, r31
    20fa:	1b c0       	rjmp	.+54     	; 0x2132 <conv_flt+0x12a>
    20fc:	88 23       	and	r24, r24
    20fe:	19 f0       	breq	.+6      	; 0x2106 <conv_flt+0xfe>
    2100:	81 e0       	ldi	r24, 0x01	; 1
    2102:	e8 1a       	sub	r14, r24
    2104:	f1 08       	sbc	r15, r1
    2106:	40 e2       	ldi	r20, 0x20	; 32
    2108:	c3 01       	movw	r24, r6
    210a:	b2 01       	movw	r22, r4
    210c:	cb dd       	rcall	.-1130   	; 0x1ca4 <mulacc>
    210e:	2b 01       	movw	r4, r22
    2110:	3c 01       	movw	r6, r24
    2112:	68 39       	cpi	r22, 0x98	; 152
    2114:	79 49       	sbci	r23, 0x99	; 153
    2116:	89 49       	sbci	r24, 0x99	; 153
    2118:	99 41       	sbci	r25, 0x19	; 25
    211a:	58 f0       	brcs	.+22     	; 0x2132 <conv_flt+0x12a>
    211c:	f9 2d       	mov	r31, r9
    211e:	f6 60       	ori	r31, 0x06	; 6
    2120:	bf 2e       	mov	r11, r31
    2122:	07 c0       	rjmp	.+14     	; 0x2132 <conv_flt+0x12a>
    2124:	2e 3f       	cpi	r18, 0xFE	; 254
    2126:	81 f4       	brne	.+32     	; 0x2148 <conv_flt+0x140>
    2128:	93 fc       	sbrc	r9, 3
    212a:	0e c0       	rjmp	.+28     	; 0x2148 <conv_flt+0x140>
    212c:	29 2d       	mov	r18, r9
    212e:	28 60       	ori	r18, 0x08	; 8
    2130:	b2 2e       	mov	r11, r18
    2132:	01 50       	subi	r16, 0x01	; 1
    2134:	11 09       	sbc	r17, r1
    2136:	39 f0       	breq	.+14     	; 0x2146 <conv_flt+0x13e>
    2138:	c6 01       	movw	r24, r12
    213a:	16 d3       	rcall	.+1580   	; 0x2768 <fgetc>
    213c:	ec 01       	movw	r28, r24
    213e:	9b 2c       	mov	r9, r11
    2140:	97 ff       	sbrs	r25, 7
    2142:	cb cf       	rjmp	.-106    	; 0x20da <conv_flt+0xd2>
    2144:	01 c0       	rjmp	.+2      	; 0x2148 <conv_flt+0x140>
    2146:	9b 2c       	mov	r9, r11
    2148:	91 fe       	sbrs	r9, 1
    214a:	81 cf       	rjmp	.-254    	; 0x204e <conv_flt+0x46>
    214c:	ce 01       	movw	r24, r28
    214e:	8f 7d       	andi	r24, 0xDF	; 223
    2150:	99 27       	eor	r25, r25
    2152:	85 34       	cpi	r24, 0x45	; 69
    2154:	91 05       	cpc	r25, r1
    2156:	09 f0       	breq	.+2      	; 0x215a <conv_flt+0x152>
    2158:	3e c0       	rjmp	.+124    	; 0x21d6 <conv_flt+0x1ce>
    215a:	58 01       	movw	r10, r16
    215c:	81 e0       	ldi	r24, 0x01	; 1
    215e:	a8 1a       	sub	r10, r24
    2160:	b1 08       	sbc	r11, r1
    2162:	09 f4       	brne	.+2      	; 0x2166 <conv_flt+0x15e>
    2164:	74 cf       	rjmp	.-280    	; 0x204e <conv_flt+0x46>
    2166:	c6 01       	movw	r24, r12
    2168:	ff d2       	rcall	.+1534   	; 0x2768 <fgetc>
    216a:	ec 01       	movw	r28, r24
    216c:	97 fd       	sbrc	r25, 7
    216e:	6f cf       	rjmp	.-290    	; 0x204e <conv_flt+0x46>
    2170:	99 27       	eor	r25, r25
    2172:	8b 32       	cpi	r24, 0x2B	; 43
    2174:	91 05       	cpc	r25, r1
    2176:	29 f0       	breq	.+10     	; 0x2182 <conv_flt+0x17a>
    2178:	8d 97       	sbiw	r24, 0x2d	; 45
    217a:	61 f4       	brne	.+24     	; 0x2194 <conv_flt+0x18c>
    217c:	e9 2d       	mov	r30, r9
    217e:	e0 61       	ori	r30, 0x10	; 16
    2180:	9e 2e       	mov	r9, r30
    2182:	58 01       	movw	r10, r16
    2184:	f2 e0       	ldi	r31, 0x02	; 2
    2186:	af 1a       	sub	r10, r31
    2188:	b1 08       	sbc	r11, r1
    218a:	09 f4       	brne	.+2      	; 0x218e <conv_flt+0x186>
    218c:	60 cf       	rjmp	.-320    	; 0x204e <conv_flt+0x46>
    218e:	c6 01       	movw	r24, r12
    2190:	eb d2       	rcall	.+1494   	; 0x2768 <fgetc>
    2192:	ec 01       	movw	r28, r24
    2194:	ce 01       	movw	r24, r28
    2196:	c0 97       	sbiw	r24, 0x30	; 48
    2198:	0a 97       	sbiw	r24, 0x0a	; 10
    219a:	08 f0       	brcs	.+2      	; 0x219e <conv_flt+0x196>
    219c:	58 cf       	rjmp	.-336    	; 0x204e <conv_flt+0x46>
    219e:	85 01       	movw	r16, r10
    21a0:	a1 2c       	mov	r10, r1
    21a2:	b1 2c       	mov	r11, r1
    21a4:	b5 01       	movw	r22, r10
    21a6:	bb 0c       	add	r11, r11
    21a8:	88 0b       	sbc	r24, r24
    21aa:	99 0b       	sbc	r25, r25
    21ac:	2c 2f       	mov	r18, r28
    21ae:	20 53       	subi	r18, 0x30	; 48
    21b0:	40 e2       	ldi	r20, 0x20	; 32
    21b2:	78 dd       	rcall	.-1296   	; 0x1ca4 <mulacc>
    21b4:	5b 01       	movw	r10, r22
    21b6:	01 50       	subi	r16, 0x01	; 1
    21b8:	11 09       	sbc	r17, r1
    21ba:	31 f0       	breq	.+12     	; 0x21c8 <conv_flt+0x1c0>
    21bc:	c6 01       	movw	r24, r12
    21be:	d4 d2       	rcall	.+1448   	; 0x2768 <fgetc>
    21c0:	ec 01       	movw	r28, r24
    21c2:	c0 97       	sbiw	r24, 0x30	; 48
    21c4:	0a 97       	sbiw	r24, 0x0a	; 10
    21c6:	70 f3       	brcs	.-36     	; 0x21a4 <conv_flt+0x19c>
    21c8:	94 fe       	sbrs	r9, 4
    21ca:	03 c0       	rjmp	.+6      	; 0x21d2 <conv_flt+0x1ca>
    21cc:	b1 94       	neg	r11
    21ce:	a1 94       	neg	r10
    21d0:	b1 08       	sbc	r11, r1
    21d2:	ea 0c       	add	r14, r10
    21d4:	fb 1c       	adc	r15, r11
    21d6:	01 2b       	or	r16, r17
    21d8:	29 f0       	breq	.+10     	; 0x21e4 <conv_flt+0x1dc>
    21da:	d7 fd       	sbrc	r29, 7
    21dc:	03 c0       	rjmp	.+6      	; 0x21e4 <conv_flt+0x1dc>
    21de:	b6 01       	movw	r22, r12
    21e0:	ce 01       	movw	r24, r28
    21e2:	80 d3       	rcall	.+1792   	; 0x28e4 <ungetc>
    21e4:	c3 01       	movw	r24, r6
    21e6:	b2 01       	movw	r22, r4
    21e8:	79 d1       	rcall	.+754    	; 0x24dc <__floatunsisf>
    21ea:	f7 fe       	sbrs	r15, 7
    21ec:	06 c0       	rjmp	.+12     	; 0x21fa <conv_flt+0x1f2>
    21ee:	f1 94       	neg	r15
    21f0:	e1 94       	neg	r14
    21f2:	f1 08       	sbc	r15, r1
    21f4:	cf eb       	ldi	r28, 0xBF	; 191
    21f6:	d1 e0       	ldi	r29, 0x01	; 1
    21f8:	02 c0       	rjmp	.+4      	; 0x21fe <conv_flt+0x1f6>
    21fa:	c7 ed       	ldi	r28, 0xD7	; 215
    21fc:	d1 e0       	ldi	r29, 0x01	; 1
    21fe:	6e 01       	movw	r12, r28
    2200:	28 e1       	ldi	r18, 0x18	; 24
    2202:	c2 1a       	sub	r12, r18
    2204:	d1 08       	sbc	r13, r1
    2206:	00 e2       	ldi	r16, 0x20	; 32
    2208:	10 e0       	ldi	r17, 0x00	; 0
    220a:	e0 16       	cp	r14, r16
    220c:	f1 06       	cpc	r15, r17
    220e:	48 f0       	brcs	.+18     	; 0x2222 <conv_flt+0x21a>
    2210:	fe 01       	movw	r30, r28
    2212:	25 91       	lpm	r18, Z+
    2214:	35 91       	lpm	r19, Z+
    2216:	45 91       	lpm	r20, Z+
    2218:	54 91       	lpm	r21, Z
    221a:	4b d9       	rcall	.-3434   	; 0x14b2 <__mulsf3>
    221c:	e0 1a       	sub	r14, r16
    221e:	f1 0a       	sbc	r15, r17
    2220:	f4 cf       	rjmp	.-24     	; 0x220a <conv_flt+0x202>
    2222:	24 97       	sbiw	r28, 0x04	; 4
    2224:	16 95       	lsr	r17
    2226:	07 95       	ror	r16
    2228:	cc 16       	cp	r12, r28
    222a:	dd 06       	cpc	r13, r29
    222c:	71 f7       	brne	.-36     	; 0x220a <conv_flt+0x202>
    222e:	97 fe       	sbrs	r9, 7
    2230:	05 c0       	rjmp	.+10     	; 0x223c <conv_flt+0x234>
    2232:	dc 01       	movw	r26, r24
    2234:	cb 01       	movw	r24, r22
    2236:	b0 58       	subi	r27, 0x80	; 128
    2238:	bc 01       	movw	r22, r24
    223a:	cd 01       	movw	r24, r26
    223c:	21 14       	cp	r2, r1
    223e:	31 04       	cpc	r3, r1
    2240:	29 f0       	breq	.+10     	; 0x224c <conv_flt+0x244>
    2242:	f1 01       	movw	r30, r2
    2244:	60 83       	st	Z, r22
    2246:	71 83       	std	Z+1, r23	; 0x01
    2248:	82 83       	std	Z+2, r24	; 0x02
    224a:	93 83       	std	Z+3, r25	; 0x03
    224c:	81 e0       	ldi	r24, 0x01	; 1
    224e:	df 91       	pop	r29
    2250:	cf 91       	pop	r28
    2252:	1f 91       	pop	r17
    2254:	0f 91       	pop	r16
    2256:	ff 90       	pop	r15
    2258:	ef 90       	pop	r14
    225a:	df 90       	pop	r13
    225c:	cf 90       	pop	r12
    225e:	bf 90       	pop	r11
    2260:	af 90       	pop	r10
    2262:	9f 90       	pop	r9
    2264:	7f 90       	pop	r7
    2266:	6f 90       	pop	r6
    2268:	5f 90       	pop	r5
    226a:	4f 90       	pop	r4
    226c:	3f 90       	pop	r3
    226e:	2f 90       	pop	r2
    2270:	08 95       	ret

00002272 <vfscanf>:
    2272:	6f 92       	push	r6
    2274:	7f 92       	push	r7
    2276:	8f 92       	push	r8
    2278:	9f 92       	push	r9
    227a:	af 92       	push	r10
    227c:	bf 92       	push	r11
    227e:	cf 92       	push	r12
    2280:	df 92       	push	r13
    2282:	ef 92       	push	r14
    2284:	ff 92       	push	r15
    2286:	0f 93       	push	r16
    2288:	1f 93       	push	r17
    228a:	cf 93       	push	r28
    228c:	df 93       	push	r29
    228e:	5c 01       	movw	r10, r24
    2290:	eb 01       	movw	r28, r22
    2292:	4a 01       	movw	r8, r20
    2294:	fc 01       	movw	r30, r24
    2296:	17 82       	std	Z+7, r1	; 0x07
    2298:	16 82       	std	Z+6, r1	; 0x06
    229a:	61 2c       	mov	r6, r1
    229c:	f5 01       	movw	r30, r10
    229e:	03 81       	ldd	r16, Z+3	; 0x03
    22a0:	fe 01       	movw	r30, r28
    22a2:	03 fd       	sbrc	r16, 3
    22a4:	85 91       	lpm	r24, Z+
    22a6:	03 ff       	sbrs	r16, 3
    22a8:	81 91       	ld	r24, Z+
    22aa:	18 2f       	mov	r17, r24
    22ac:	ef 01       	movw	r28, r30
    22ae:	88 23       	and	r24, r24
    22b0:	09 f4       	brne	.+2      	; 0x22b4 <vfscanf+0x42>
    22b2:	00 c1       	rjmp	.+512    	; 0x24b4 <vfscanf+0x242>
    22b4:	90 e0       	ldi	r25, 0x00	; 0
    22b6:	27 d2       	rcall	.+1102   	; 0x2706 <isspace>
    22b8:	89 2b       	or	r24, r25
    22ba:	19 f0       	breq	.+6      	; 0x22c2 <vfscanf+0x50>
    22bc:	c5 01       	movw	r24, r10
    22be:	19 dd       	rcall	.-1486   	; 0x1cf2 <skip_spaces>
    22c0:	ed cf       	rjmp	.-38     	; 0x229c <vfscanf+0x2a>
    22c2:	15 32       	cpi	r17, 0x25	; 37
    22c4:	41 f4       	brne	.+16     	; 0x22d6 <vfscanf+0x64>
    22c6:	fe 01       	movw	r30, r28
    22c8:	03 fd       	sbrc	r16, 3
    22ca:	15 91       	lpm	r17, Z+
    22cc:	03 ff       	sbrs	r16, 3
    22ce:	11 91       	ld	r17, Z+
    22d0:	ef 01       	movw	r28, r30
    22d2:	15 32       	cpi	r17, 0x25	; 37
    22d4:	71 f4       	brne	.+28     	; 0x22f2 <vfscanf+0x80>
    22d6:	c5 01       	movw	r24, r10
    22d8:	47 d2       	rcall	.+1166   	; 0x2768 <fgetc>
    22da:	97 fd       	sbrc	r25, 7
    22dc:	e9 c0       	rjmp	.+466    	; 0x24b0 <vfscanf+0x23e>
    22de:	41 2f       	mov	r20, r17
    22e0:	50 e0       	ldi	r21, 0x00	; 0
    22e2:	9c 01       	movw	r18, r24
    22e4:	33 27       	eor	r19, r19
    22e6:	24 17       	cp	r18, r20
    22e8:	35 07       	cpc	r19, r21
    22ea:	c1 f2       	breq	.-80     	; 0x229c <vfscanf+0x2a>
    22ec:	b5 01       	movw	r22, r10
    22ee:	fa d2       	rcall	.+1524   	; 0x28e4 <ungetc>
    22f0:	e1 c0       	rjmp	.+450    	; 0x24b4 <vfscanf+0x242>
    22f2:	1a 32       	cpi	r17, 0x2A	; 42
    22f4:	41 f4       	brne	.+16     	; 0x2306 <vfscanf+0x94>
    22f6:	03 fd       	sbrc	r16, 3
    22f8:	15 91       	lpm	r17, Z+
    22fa:	03 ff       	sbrs	r16, 3
    22fc:	11 91       	ld	r17, Z+
    22fe:	ef 01       	movw	r28, r30
    2300:	77 24       	eor	r7, r7
    2302:	73 94       	inc	r7
    2304:	01 c0       	rjmp	.+2      	; 0x2308 <vfscanf+0x96>
    2306:	71 2c       	mov	r7, r1
    2308:	e1 2c       	mov	r14, r1
    230a:	f1 2c       	mov	r15, r1
    230c:	20 ed       	ldi	r18, 0xD0	; 208
    230e:	21 0f       	add	r18, r17
    2310:	2a 30       	cpi	r18, 0x0A	; 10
    2312:	80 f4       	brcc	.+32     	; 0x2334 <vfscanf+0xc2>
    2314:	f7 2d       	mov	r31, r7
    2316:	f2 60       	ori	r31, 0x02	; 2
    2318:	7f 2e       	mov	r7, r31
    231a:	b7 01       	movw	r22, r14
    231c:	80 e0       	ldi	r24, 0x00	; 0
    231e:	90 e0       	ldi	r25, 0x00	; 0
    2320:	40 e2       	ldi	r20, 0x20	; 32
    2322:	c0 dc       	rcall	.-1664   	; 0x1ca4 <mulacc>
    2324:	7b 01       	movw	r14, r22
    2326:	fe 01       	movw	r30, r28
    2328:	03 fd       	sbrc	r16, 3
    232a:	15 91       	lpm	r17, Z+
    232c:	03 ff       	sbrs	r16, 3
    232e:	11 91       	ld	r17, Z+
    2330:	ef 01       	movw	r28, r30
    2332:	ec cf       	rjmp	.-40     	; 0x230c <vfscanf+0x9a>
    2334:	71 fe       	sbrs	r7, 1
    2336:	04 c0       	rjmp	.+8      	; 0x2340 <vfscanf+0xce>
    2338:	e1 14       	cp	r14, r1
    233a:	f1 04       	cpc	r15, r1
    233c:	21 f4       	brne	.+8      	; 0x2346 <vfscanf+0xd4>
    233e:	ba c0       	rjmp	.+372    	; 0x24b4 <vfscanf+0x242>
    2340:	ee 24       	eor	r14, r14
    2342:	ea 94       	dec	r14
    2344:	fe 2c       	mov	r15, r14
    2346:	18 36       	cpi	r17, 0x68	; 104
    2348:	19 f0       	breq	.+6      	; 0x2350 <vfscanf+0xde>
    234a:	1c 36       	cpi	r17, 0x6C	; 108
    234c:	61 f0       	breq	.+24     	; 0x2366 <vfscanf+0xf4>
    234e:	14 c0       	rjmp	.+40     	; 0x2378 <vfscanf+0x106>
    2350:	fe 01       	movw	r30, r28
    2352:	03 fd       	sbrc	r16, 3
    2354:	15 91       	lpm	r17, Z+
    2356:	03 ff       	sbrs	r16, 3
    2358:	11 91       	ld	r17, Z+
    235a:	ef 01       	movw	r28, r30
    235c:	18 36       	cpi	r17, 0x68	; 104
    235e:	61 f4       	brne	.+24     	; 0x2378 <vfscanf+0x106>
    2360:	87 2d       	mov	r24, r7
    2362:	88 60       	ori	r24, 0x08	; 8
    2364:	78 2e       	mov	r7, r24
    2366:	97 2d       	mov	r25, r7
    2368:	94 60       	ori	r25, 0x04	; 4
    236a:	79 2e       	mov	r7, r25
    236c:	fe 01       	movw	r30, r28
    236e:	03 fd       	sbrc	r16, 3
    2370:	15 91       	lpm	r17, Z+
    2372:	03 ff       	sbrs	r16, 3
    2374:	11 91       	ld	r17, Z+
    2376:	ef 01       	movw	r28, r30
    2378:	11 23       	and	r17, r17
    237a:	09 f4       	brne	.+2      	; 0x237e <vfscanf+0x10c>
    237c:	9b c0       	rjmp	.+310    	; 0x24b4 <vfscanf+0x242>
    237e:	61 2f       	mov	r22, r17
    2380:	70 e0       	ldi	r23, 0x00	; 0
    2382:	8e e8       	ldi	r24, 0x8E	; 142
    2384:	91 e0       	ldi	r25, 0x01	; 1
    2386:	cf d1       	rcall	.+926    	; 0x2726 <strchr_P>
    2388:	89 2b       	or	r24, r25
    238a:	09 f4       	brne	.+2      	; 0x238e <vfscanf+0x11c>
    238c:	93 c0       	rjmp	.+294    	; 0x24b4 <vfscanf+0x242>
    238e:	70 fc       	sbrc	r7, 0
    2390:	07 c0       	rjmp	.+14     	; 0x23a0 <vfscanf+0x12e>
    2392:	f4 01       	movw	r30, r8
    2394:	c0 80       	ld	r12, Z
    2396:	d1 80       	ldd	r13, Z+1	; 0x01
    2398:	c4 01       	movw	r24, r8
    239a:	02 96       	adiw	r24, 0x02	; 2
    239c:	4c 01       	movw	r8, r24
    239e:	02 c0       	rjmp	.+4      	; 0x23a4 <vfscanf+0x132>
    23a0:	c1 2c       	mov	r12, r1
    23a2:	d1 2c       	mov	r13, r1
    23a4:	1e 36       	cpi	r17, 0x6E	; 110
    23a6:	49 f4       	brne	.+18     	; 0x23ba <vfscanf+0x148>
    23a8:	f5 01       	movw	r30, r10
    23aa:	46 81       	ldd	r20, Z+6	; 0x06
    23ac:	57 81       	ldd	r21, Z+7	; 0x07
    23ae:	60 e0       	ldi	r22, 0x00	; 0
    23b0:	70 e0       	ldi	r23, 0x00	; 0
    23b2:	27 2d       	mov	r18, r7
    23b4:	c6 01       	movw	r24, r12
    23b6:	6a dc       	rcall	.-1836   	; 0x1c8c <putval>
    23b8:	71 cf       	rjmp	.-286    	; 0x229c <vfscanf+0x2a>
    23ba:	13 36       	cpi	r17, 0x63	; 99
    23bc:	b1 f4       	brne	.+44     	; 0x23ea <vfscanf+0x178>
    23be:	71 fc       	sbrc	r7, 1
    23c0:	03 c0       	rjmp	.+6      	; 0x23c8 <vfscanf+0x156>
    23c2:	ee 24       	eor	r14, r14
    23c4:	e3 94       	inc	r14
    23c6:	f1 2c       	mov	r15, r1
    23c8:	c5 01       	movw	r24, r10
    23ca:	ce d1       	rcall	.+924    	; 0x2768 <fgetc>
    23cc:	97 fd       	sbrc	r25, 7
    23ce:	70 c0       	rjmp	.+224    	; 0x24b0 <vfscanf+0x23e>
    23d0:	c1 14       	cp	r12, r1
    23d2:	d1 04       	cpc	r13, r1
    23d4:	29 f0       	breq	.+10     	; 0x23e0 <vfscanf+0x16e>
    23d6:	f6 01       	movw	r30, r12
    23d8:	80 83       	st	Z, r24
    23da:	c6 01       	movw	r24, r12
    23dc:	01 96       	adiw	r24, 0x01	; 1
    23de:	6c 01       	movw	r12, r24
    23e0:	91 e0       	ldi	r25, 0x01	; 1
    23e2:	e9 1a       	sub	r14, r25
    23e4:	f1 08       	sbc	r15, r1
    23e6:	81 f7       	brne	.-32     	; 0x23c8 <vfscanf+0x156>
    23e8:	5f c0       	rjmp	.+190    	; 0x24a8 <vfscanf+0x236>
    23ea:	1b 35       	cpi	r17, 0x5B	; 91
    23ec:	51 f4       	brne	.+20     	; 0x2402 <vfscanf+0x190>
    23ee:	9e 01       	movw	r18, r28
    23f0:	a6 01       	movw	r20, r12
    23f2:	b7 01       	movw	r22, r14
    23f4:	c5 01       	movw	r24, r10
    23f6:	23 dd       	rcall	.-1466   	; 0x1e3e <conv_brk>
    23f8:	ec 01       	movw	r28, r24
    23fa:	89 2b       	or	r24, r25
    23fc:	09 f0       	breq	.+2      	; 0x2400 <vfscanf+0x18e>
    23fe:	54 c0       	rjmp	.+168    	; 0x24a8 <vfscanf+0x236>
    2400:	4e c0       	rjmp	.+156    	; 0x249e <vfscanf+0x22c>
    2402:	c5 01       	movw	r24, r10
    2404:	76 dc       	rcall	.-1812   	; 0x1cf2 <skip_spaces>
    2406:	97 fd       	sbrc	r25, 7
    2408:	53 c0       	rjmp	.+166    	; 0x24b0 <vfscanf+0x23e>
    240a:	1f 36       	cpi	r17, 0x6F	; 111
    240c:	c9 f1       	breq	.+114    	; 0x2480 <vfscanf+0x20e>
    240e:	40 f4       	brcc	.+16     	; 0x2420 <vfscanf+0x1ae>
    2410:	14 36       	cpi	r17, 0x64	; 100
    2412:	91 f1       	breq	.+100    	; 0x2478 <vfscanf+0x206>
    2414:	19 36       	cpi	r17, 0x69	; 105
    2416:	b9 f1       	breq	.+110    	; 0x2486 <vfscanf+0x214>
    2418:	18 35       	cpi	r17, 0x58	; 88
    241a:	09 f0       	breq	.+2      	; 0x241e <vfscanf+0x1ac>
    241c:	3a c0       	rjmp	.+116    	; 0x2492 <vfscanf+0x220>
    241e:	28 c0       	rjmp	.+80     	; 0x2470 <vfscanf+0x1fe>
    2420:	13 37       	cpi	r17, 0x73	; 115
    2422:	a9 f0       	breq	.+42     	; 0x244e <vfscanf+0x1dc>
    2424:	18 f4       	brcc	.+6      	; 0x242c <vfscanf+0x1ba>
    2426:	10 37       	cpi	r17, 0x70	; 112
    2428:	19 f1       	breq	.+70     	; 0x2470 <vfscanf+0x1fe>
    242a:	33 c0       	rjmp	.+102    	; 0x2492 <vfscanf+0x220>
    242c:	15 37       	cpi	r17, 0x75	; 117
    242e:	21 f1       	breq	.+72     	; 0x2478 <vfscanf+0x206>
    2430:	18 37       	cpi	r17, 0x78	; 120
    2432:	f1 f0       	breq	.+60     	; 0x2470 <vfscanf+0x1fe>
    2434:	2e c0       	rjmp	.+92     	; 0x2492 <vfscanf+0x220>
    2436:	c1 14       	cp	r12, r1
    2438:	d1 04       	cpc	r13, r1
    243a:	29 f0       	breq	.+10     	; 0x2446 <vfscanf+0x1d4>
    243c:	f6 01       	movw	r30, r12
    243e:	00 83       	st	Z, r16
    2440:	c6 01       	movw	r24, r12
    2442:	01 96       	adiw	r24, 0x01	; 1
    2444:	6c 01       	movw	r12, r24
    2446:	91 e0       	ldi	r25, 0x01	; 1
    2448:	e9 1a       	sub	r14, r25
    244a:	f1 08       	sbc	r15, r1
    244c:	59 f0       	breq	.+22     	; 0x2464 <vfscanf+0x1f2>
    244e:	c5 01       	movw	r24, r10
    2450:	8b d1       	rcall	.+790    	; 0x2768 <fgetc>
    2452:	8c 01       	movw	r16, r24
    2454:	97 fd       	sbrc	r25, 7
    2456:	06 c0       	rjmp	.+12     	; 0x2464 <vfscanf+0x1f2>
    2458:	56 d1       	rcall	.+684    	; 0x2706 <isspace>
    245a:	89 2b       	or	r24, r25
    245c:	61 f3       	breq	.-40     	; 0x2436 <vfscanf+0x1c4>
    245e:	b5 01       	movw	r22, r10
    2460:	c8 01       	movw	r24, r16
    2462:	40 d2       	rcall	.+1152   	; 0x28e4 <ungetc>
    2464:	c1 14       	cp	r12, r1
    2466:	d1 04       	cpc	r13, r1
    2468:	f9 f0       	breq	.+62     	; 0x24a8 <vfscanf+0x236>
    246a:	f6 01       	movw	r30, r12
    246c:	10 82       	st	Z, r1
    246e:	1c c0       	rjmp	.+56     	; 0x24a8 <vfscanf+0x236>
    2470:	f7 2d       	mov	r31, r7
    2472:	f0 64       	ori	r31, 0x40	; 64
    2474:	7f 2e       	mov	r7, r31
    2476:	07 c0       	rjmp	.+14     	; 0x2486 <vfscanf+0x214>
    2478:	87 2d       	mov	r24, r7
    247a:	80 62       	ori	r24, 0x20	; 32
    247c:	78 2e       	mov	r7, r24
    247e:	03 c0       	rjmp	.+6      	; 0x2486 <vfscanf+0x214>
    2480:	97 2d       	mov	r25, r7
    2482:	90 61       	ori	r25, 0x10	; 16
    2484:	79 2e       	mov	r7, r25
    2486:	27 2d       	mov	r18, r7
    2488:	a6 01       	movw	r20, r12
    248a:	b7 01       	movw	r22, r14
    248c:	c5 01       	movw	r24, r10
    248e:	47 dc       	rcall	.-1906   	; 0x1d1e <conv_int>
    2490:	04 c0       	rjmp	.+8      	; 0x249a <vfscanf+0x228>
    2492:	a6 01       	movw	r20, r12
    2494:	b7 01       	movw	r22, r14
    2496:	c5 01       	movw	r24, r10
    2498:	b7 dd       	rcall	.-1170   	; 0x2008 <conv_flt>
    249a:	81 11       	cpse	r24, r1
    249c:	05 c0       	rjmp	.+10     	; 0x24a8 <vfscanf+0x236>
    249e:	f5 01       	movw	r30, r10
    24a0:	83 81       	ldd	r24, Z+3	; 0x03
    24a2:	80 73       	andi	r24, 0x30	; 48
    24a4:	29 f4       	brne	.+10     	; 0x24b0 <vfscanf+0x23e>
    24a6:	06 c0       	rjmp	.+12     	; 0x24b4 <vfscanf+0x242>
    24a8:	70 fc       	sbrc	r7, 0
    24aa:	f8 ce       	rjmp	.-528    	; 0x229c <vfscanf+0x2a>
    24ac:	63 94       	inc	r6
    24ae:	f6 ce       	rjmp	.-532    	; 0x229c <vfscanf+0x2a>
    24b0:	66 20       	and	r6, r6
    24b2:	19 f0       	breq	.+6      	; 0x24ba <vfscanf+0x248>
    24b4:	86 2d       	mov	r24, r6
    24b6:	90 e0       	ldi	r25, 0x00	; 0
    24b8:	02 c0       	rjmp	.+4      	; 0x24be <vfscanf+0x24c>
    24ba:	8f ef       	ldi	r24, 0xFF	; 255
    24bc:	9f ef       	ldi	r25, 0xFF	; 255
    24be:	df 91       	pop	r29
    24c0:	cf 91       	pop	r28
    24c2:	1f 91       	pop	r17
    24c4:	0f 91       	pop	r16
    24c6:	ff 90       	pop	r15
    24c8:	ef 90       	pop	r14
    24ca:	df 90       	pop	r13
    24cc:	cf 90       	pop	r12
    24ce:	bf 90       	pop	r11
    24d0:	af 90       	pop	r10
    24d2:	9f 90       	pop	r9
    24d4:	8f 90       	pop	r8
    24d6:	7f 90       	pop	r7
    24d8:	6f 90       	pop	r6
    24da:	08 95       	ret

000024dc <__floatunsisf>:
    24dc:	e8 94       	clt
    24de:	09 c0       	rjmp	.+18     	; 0x24f2 <__floatsisf+0x12>

000024e0 <__floatsisf>:
    24e0:	97 fb       	bst	r25, 7
    24e2:	3e f4       	brtc	.+14     	; 0x24f2 <__floatsisf+0x12>
    24e4:	90 95       	com	r25
    24e6:	80 95       	com	r24
    24e8:	70 95       	com	r23
    24ea:	61 95       	neg	r22
    24ec:	7f 4f       	sbci	r23, 0xFF	; 255
    24ee:	8f 4f       	sbci	r24, 0xFF	; 255
    24f0:	9f 4f       	sbci	r25, 0xFF	; 255
    24f2:	99 23       	and	r25, r25
    24f4:	a9 f0       	breq	.+42     	; 0x2520 <__floatsisf+0x40>
    24f6:	f9 2f       	mov	r31, r25
    24f8:	96 e9       	ldi	r25, 0x96	; 150
    24fa:	bb 27       	eor	r27, r27
    24fc:	93 95       	inc	r25
    24fe:	f6 95       	lsr	r31
    2500:	87 95       	ror	r24
    2502:	77 95       	ror	r23
    2504:	67 95       	ror	r22
    2506:	b7 95       	ror	r27
    2508:	f1 11       	cpse	r31, r1
    250a:	f8 cf       	rjmp	.-16     	; 0x24fc <__floatsisf+0x1c>
    250c:	fa f4       	brpl	.+62     	; 0x254c <__floatsisf+0x6c>
    250e:	bb 0f       	add	r27, r27
    2510:	11 f4       	brne	.+4      	; 0x2516 <__floatsisf+0x36>
    2512:	60 ff       	sbrs	r22, 0
    2514:	1b c0       	rjmp	.+54     	; 0x254c <__floatsisf+0x6c>
    2516:	6f 5f       	subi	r22, 0xFF	; 255
    2518:	7f 4f       	sbci	r23, 0xFF	; 255
    251a:	8f 4f       	sbci	r24, 0xFF	; 255
    251c:	9f 4f       	sbci	r25, 0xFF	; 255
    251e:	16 c0       	rjmp	.+44     	; 0x254c <__floatsisf+0x6c>
    2520:	88 23       	and	r24, r24
    2522:	11 f0       	breq	.+4      	; 0x2528 <__floatsisf+0x48>
    2524:	96 e9       	ldi	r25, 0x96	; 150
    2526:	11 c0       	rjmp	.+34     	; 0x254a <__floatsisf+0x6a>
    2528:	77 23       	and	r23, r23
    252a:	21 f0       	breq	.+8      	; 0x2534 <__floatsisf+0x54>
    252c:	9e e8       	ldi	r25, 0x8E	; 142
    252e:	87 2f       	mov	r24, r23
    2530:	76 2f       	mov	r23, r22
    2532:	05 c0       	rjmp	.+10     	; 0x253e <__floatsisf+0x5e>
    2534:	66 23       	and	r22, r22
    2536:	71 f0       	breq	.+28     	; 0x2554 <__floatsisf+0x74>
    2538:	96 e8       	ldi	r25, 0x86	; 134
    253a:	86 2f       	mov	r24, r22
    253c:	70 e0       	ldi	r23, 0x00	; 0
    253e:	60 e0       	ldi	r22, 0x00	; 0
    2540:	2a f0       	brmi	.+10     	; 0x254c <__floatsisf+0x6c>
    2542:	9a 95       	dec	r25
    2544:	66 0f       	add	r22, r22
    2546:	77 1f       	adc	r23, r23
    2548:	88 1f       	adc	r24, r24
    254a:	da f7       	brpl	.-10     	; 0x2542 <__floatsisf+0x62>
    254c:	88 0f       	add	r24, r24
    254e:	96 95       	lsr	r25
    2550:	87 95       	ror	r24
    2552:	97 f9       	bld	r25, 7
    2554:	08 95       	ret

00002556 <__ftoa_engine>:
    2556:	28 30       	cpi	r18, 0x08	; 8
    2558:	08 f0       	brcs	.+2      	; 0x255c <__ftoa_engine+0x6>
    255a:	27 e0       	ldi	r18, 0x07	; 7
    255c:	33 27       	eor	r19, r19
    255e:	da 01       	movw	r26, r20
    2560:	99 0f       	add	r25, r25
    2562:	31 1d       	adc	r19, r1
    2564:	87 fd       	sbrc	r24, 7
    2566:	91 60       	ori	r25, 0x01	; 1
    2568:	00 96       	adiw	r24, 0x00	; 0
    256a:	61 05       	cpc	r22, r1
    256c:	71 05       	cpc	r23, r1
    256e:	39 f4       	brne	.+14     	; 0x257e <__ftoa_engine+0x28>
    2570:	32 60       	ori	r19, 0x02	; 2
    2572:	2e 5f       	subi	r18, 0xFE	; 254
    2574:	3d 93       	st	X+, r19
    2576:	30 e3       	ldi	r19, 0x30	; 48
    2578:	2a 95       	dec	r18
    257a:	e1 f7       	brne	.-8      	; 0x2574 <__ftoa_engine+0x1e>
    257c:	08 95       	ret
    257e:	9f 3f       	cpi	r25, 0xFF	; 255
    2580:	30 f0       	brcs	.+12     	; 0x258e <__ftoa_engine+0x38>
    2582:	80 38       	cpi	r24, 0x80	; 128
    2584:	71 05       	cpc	r23, r1
    2586:	61 05       	cpc	r22, r1
    2588:	09 f0       	breq	.+2      	; 0x258c <__ftoa_engine+0x36>
    258a:	3c 5f       	subi	r19, 0xFC	; 252
    258c:	3c 5f       	subi	r19, 0xFC	; 252
    258e:	3d 93       	st	X+, r19
    2590:	91 30       	cpi	r25, 0x01	; 1
    2592:	08 f0       	brcs	.+2      	; 0x2596 <__ftoa_engine+0x40>
    2594:	80 68       	ori	r24, 0x80	; 128
    2596:	91 1d       	adc	r25, r1
    2598:	df 93       	push	r29
    259a:	cf 93       	push	r28
    259c:	1f 93       	push	r17
    259e:	0f 93       	push	r16
    25a0:	ff 92       	push	r15
    25a2:	ef 92       	push	r14
    25a4:	19 2f       	mov	r17, r25
    25a6:	98 7f       	andi	r25, 0xF8	; 248
    25a8:	96 95       	lsr	r25
    25aa:	e9 2f       	mov	r30, r25
    25ac:	96 95       	lsr	r25
    25ae:	96 95       	lsr	r25
    25b0:	e9 0f       	add	r30, r25
    25b2:	ff 27       	eor	r31, r31
    25b4:	e2 51       	subi	r30, 0x12	; 18
    25b6:	ff 4f       	sbci	r31, 0xFF	; 255
    25b8:	99 27       	eor	r25, r25
    25ba:	33 27       	eor	r19, r19
    25bc:	ee 24       	eor	r14, r14
    25be:	ff 24       	eor	r15, r15
    25c0:	a7 01       	movw	r20, r14
    25c2:	e7 01       	movw	r28, r14
    25c4:	05 90       	lpm	r0, Z+
    25c6:	08 94       	sec
    25c8:	07 94       	ror	r0
    25ca:	28 f4       	brcc	.+10     	; 0x25d6 <__ftoa_engine+0x80>
    25cc:	36 0f       	add	r19, r22
    25ce:	e7 1e       	adc	r14, r23
    25d0:	f8 1e       	adc	r15, r24
    25d2:	49 1f       	adc	r20, r25
    25d4:	51 1d       	adc	r21, r1
    25d6:	66 0f       	add	r22, r22
    25d8:	77 1f       	adc	r23, r23
    25da:	88 1f       	adc	r24, r24
    25dc:	99 1f       	adc	r25, r25
    25de:	06 94       	lsr	r0
    25e0:	a1 f7       	brne	.-24     	; 0x25ca <__ftoa_engine+0x74>
    25e2:	05 90       	lpm	r0, Z+
    25e4:	07 94       	ror	r0
    25e6:	28 f4       	brcc	.+10     	; 0x25f2 <__ftoa_engine+0x9c>
    25e8:	e7 0e       	add	r14, r23
    25ea:	f8 1e       	adc	r15, r24
    25ec:	49 1f       	adc	r20, r25
    25ee:	56 1f       	adc	r21, r22
    25f0:	c1 1d       	adc	r28, r1
    25f2:	77 0f       	add	r23, r23
    25f4:	88 1f       	adc	r24, r24
    25f6:	99 1f       	adc	r25, r25
    25f8:	66 1f       	adc	r22, r22
    25fa:	06 94       	lsr	r0
    25fc:	a1 f7       	brne	.-24     	; 0x25e6 <__ftoa_engine+0x90>
    25fe:	05 90       	lpm	r0, Z+
    2600:	07 94       	ror	r0
    2602:	28 f4       	brcc	.+10     	; 0x260e <__ftoa_engine+0xb8>
    2604:	f8 0e       	add	r15, r24
    2606:	49 1f       	adc	r20, r25
    2608:	56 1f       	adc	r21, r22
    260a:	c7 1f       	adc	r28, r23
    260c:	d1 1d       	adc	r29, r1
    260e:	88 0f       	add	r24, r24
    2610:	99 1f       	adc	r25, r25
    2612:	66 1f       	adc	r22, r22
    2614:	77 1f       	adc	r23, r23
    2616:	06 94       	lsr	r0
    2618:	a1 f7       	brne	.-24     	; 0x2602 <__ftoa_engine+0xac>
    261a:	05 90       	lpm	r0, Z+
    261c:	07 94       	ror	r0
    261e:	20 f4       	brcc	.+8      	; 0x2628 <__ftoa_engine+0xd2>
    2620:	49 0f       	add	r20, r25
    2622:	56 1f       	adc	r21, r22
    2624:	c7 1f       	adc	r28, r23
    2626:	d8 1f       	adc	r29, r24
    2628:	99 0f       	add	r25, r25
    262a:	66 1f       	adc	r22, r22
    262c:	77 1f       	adc	r23, r23
    262e:	88 1f       	adc	r24, r24
    2630:	06 94       	lsr	r0
    2632:	a9 f7       	brne	.-22     	; 0x261e <__ftoa_engine+0xc8>
    2634:	84 91       	lpm	r24, Z
    2636:	10 95       	com	r17
    2638:	17 70       	andi	r17, 0x07	; 7
    263a:	41 f0       	breq	.+16     	; 0x264c <__ftoa_engine+0xf6>
    263c:	d6 95       	lsr	r29
    263e:	c7 95       	ror	r28
    2640:	57 95       	ror	r21
    2642:	47 95       	ror	r20
    2644:	f7 94       	ror	r15
    2646:	e7 94       	ror	r14
    2648:	1a 95       	dec	r17
    264a:	c1 f7       	brne	.-16     	; 0x263c <__ftoa_engine+0xe6>
    264c:	e4 e9       	ldi	r30, 0x94	; 148
    264e:	f0 e0       	ldi	r31, 0x00	; 0
    2650:	68 94       	set
    2652:	15 90       	lpm	r1, Z+
    2654:	15 91       	lpm	r17, Z+
    2656:	35 91       	lpm	r19, Z+
    2658:	65 91       	lpm	r22, Z+
    265a:	95 91       	lpm	r25, Z+
    265c:	05 90       	lpm	r0, Z+
    265e:	7f e2       	ldi	r23, 0x2F	; 47
    2660:	73 95       	inc	r23
    2662:	e1 18       	sub	r14, r1
    2664:	f1 0a       	sbc	r15, r17
    2666:	43 0b       	sbc	r20, r19
    2668:	56 0b       	sbc	r21, r22
    266a:	c9 0b       	sbc	r28, r25
    266c:	d0 09       	sbc	r29, r0
    266e:	c0 f7       	brcc	.-16     	; 0x2660 <__ftoa_engine+0x10a>
    2670:	e1 0c       	add	r14, r1
    2672:	f1 1e       	adc	r15, r17
    2674:	43 1f       	adc	r20, r19
    2676:	56 1f       	adc	r21, r22
    2678:	c9 1f       	adc	r28, r25
    267a:	d0 1d       	adc	r29, r0
    267c:	7e f4       	brtc	.+30     	; 0x269c <__ftoa_engine+0x146>
    267e:	70 33       	cpi	r23, 0x30	; 48
    2680:	11 f4       	brne	.+4      	; 0x2686 <__ftoa_engine+0x130>
    2682:	8a 95       	dec	r24
    2684:	e6 cf       	rjmp	.-52     	; 0x2652 <__ftoa_engine+0xfc>
    2686:	e8 94       	clt
    2688:	01 50       	subi	r16, 0x01	; 1
    268a:	30 f0       	brcs	.+12     	; 0x2698 <__ftoa_engine+0x142>
    268c:	08 0f       	add	r16, r24
    268e:	0a f4       	brpl	.+2      	; 0x2692 <__ftoa_engine+0x13c>
    2690:	00 27       	eor	r16, r16
    2692:	02 17       	cp	r16, r18
    2694:	08 f4       	brcc	.+2      	; 0x2698 <__ftoa_engine+0x142>
    2696:	20 2f       	mov	r18, r16
    2698:	23 95       	inc	r18
    269a:	02 2f       	mov	r16, r18
    269c:	7a 33       	cpi	r23, 0x3A	; 58
    269e:	28 f0       	brcs	.+10     	; 0x26aa <__ftoa_engine+0x154>
    26a0:	79 e3       	ldi	r23, 0x39	; 57
    26a2:	7d 93       	st	X+, r23
    26a4:	2a 95       	dec	r18
    26a6:	e9 f7       	brne	.-6      	; 0x26a2 <__ftoa_engine+0x14c>
    26a8:	10 c0       	rjmp	.+32     	; 0x26ca <__ftoa_engine+0x174>
    26aa:	7d 93       	st	X+, r23
    26ac:	2a 95       	dec	r18
    26ae:	89 f6       	brne	.-94     	; 0x2652 <__ftoa_engine+0xfc>
    26b0:	06 94       	lsr	r0
    26b2:	97 95       	ror	r25
    26b4:	67 95       	ror	r22
    26b6:	37 95       	ror	r19
    26b8:	17 95       	ror	r17
    26ba:	17 94       	ror	r1
    26bc:	e1 18       	sub	r14, r1
    26be:	f1 0a       	sbc	r15, r17
    26c0:	43 0b       	sbc	r20, r19
    26c2:	56 0b       	sbc	r21, r22
    26c4:	c9 0b       	sbc	r28, r25
    26c6:	d0 09       	sbc	r29, r0
    26c8:	98 f0       	brcs	.+38     	; 0x26f0 <__ftoa_engine+0x19a>
    26ca:	23 95       	inc	r18
    26cc:	7e 91       	ld	r23, -X
    26ce:	73 95       	inc	r23
    26d0:	7a 33       	cpi	r23, 0x3A	; 58
    26d2:	08 f0       	brcs	.+2      	; 0x26d6 <__ftoa_engine+0x180>
    26d4:	70 e3       	ldi	r23, 0x30	; 48
    26d6:	7c 93       	st	X, r23
    26d8:	20 13       	cpse	r18, r16
    26da:	b8 f7       	brcc	.-18     	; 0x26ca <__ftoa_engine+0x174>
    26dc:	7e 91       	ld	r23, -X
    26de:	70 61       	ori	r23, 0x10	; 16
    26e0:	7d 93       	st	X+, r23
    26e2:	30 f0       	brcs	.+12     	; 0x26f0 <__ftoa_engine+0x19a>
    26e4:	83 95       	inc	r24
    26e6:	71 e3       	ldi	r23, 0x31	; 49
    26e8:	7d 93       	st	X+, r23
    26ea:	70 e3       	ldi	r23, 0x30	; 48
    26ec:	2a 95       	dec	r18
    26ee:	e1 f7       	brne	.-8      	; 0x26e8 <__ftoa_engine+0x192>
    26f0:	11 24       	eor	r1, r1
    26f2:	ef 90       	pop	r14
    26f4:	ff 90       	pop	r15
    26f6:	0f 91       	pop	r16
    26f8:	1f 91       	pop	r17
    26fa:	cf 91       	pop	r28
    26fc:	df 91       	pop	r29
    26fe:	99 27       	eor	r25, r25
    2700:	87 fd       	sbrc	r24, 7
    2702:	90 95       	com	r25
    2704:	08 95       	ret

00002706 <isspace>:
    2706:	91 11       	cpse	r25, r1
    2708:	64 c1       	rjmp	.+712    	; 0x29d2 <__ctype_isfalse>
    270a:	80 32       	cpi	r24, 0x20	; 32
    270c:	19 f0       	breq	.+6      	; 0x2714 <isspace+0xe>
    270e:	89 50       	subi	r24, 0x09	; 9
    2710:	85 50       	subi	r24, 0x05	; 5
    2712:	d0 f7       	brcc	.-12     	; 0x2708 <isspace+0x2>
    2714:	08 95       	ret

00002716 <tolower>:
    2716:	91 11       	cpse	r25, r1
    2718:	08 95       	ret
    271a:	81 54       	subi	r24, 0x41	; 65
    271c:	8a 51       	subi	r24, 0x1A	; 26
    271e:	08 f4       	brcc	.+2      	; 0x2722 <tolower+0xc>
    2720:	80 5e       	subi	r24, 0xE0	; 224
    2722:	85 5a       	subi	r24, 0xA5	; 165
    2724:	08 95       	ret

00002726 <strchr_P>:
    2726:	fc 01       	movw	r30, r24
    2728:	05 90       	lpm	r0, Z+
    272a:	06 16       	cp	r0, r22
    272c:	21 f0       	breq	.+8      	; 0x2736 <strchr_P+0x10>
    272e:	00 20       	and	r0, r0
    2730:	d9 f7       	brne	.-10     	; 0x2728 <strchr_P+0x2>
    2732:	c0 01       	movw	r24, r0
    2734:	08 95       	ret
    2736:	31 97       	sbiw	r30, 0x01	; 1
    2738:	cf 01       	movw	r24, r30
    273a:	08 95       	ret

0000273c <strnlen_P>:
    273c:	fc 01       	movw	r30, r24
    273e:	05 90       	lpm	r0, Z+
    2740:	61 50       	subi	r22, 0x01	; 1
    2742:	70 40       	sbci	r23, 0x00	; 0
    2744:	01 10       	cpse	r0, r1
    2746:	d8 f7       	brcc	.-10     	; 0x273e <strnlen_P+0x2>
    2748:	80 95       	com	r24
    274a:	90 95       	com	r25
    274c:	8e 0f       	add	r24, r30
    274e:	9f 1f       	adc	r25, r31
    2750:	08 95       	ret

00002752 <strnlen>:
    2752:	fc 01       	movw	r30, r24
    2754:	61 50       	subi	r22, 0x01	; 1
    2756:	70 40       	sbci	r23, 0x00	; 0
    2758:	01 90       	ld	r0, Z+
    275a:	01 10       	cpse	r0, r1
    275c:	d8 f7       	brcc	.-10     	; 0x2754 <strnlen+0x2>
    275e:	80 95       	com	r24
    2760:	90 95       	com	r25
    2762:	8e 0f       	add	r24, r30
    2764:	9f 1f       	adc	r25, r31
    2766:	08 95       	ret

00002768 <fgetc>:
    2768:	cf 93       	push	r28
    276a:	df 93       	push	r29
    276c:	ec 01       	movw	r28, r24
    276e:	2b 81       	ldd	r18, Y+3	; 0x03
    2770:	20 ff       	sbrs	r18, 0
    2772:	33 c0       	rjmp	.+102    	; 0x27da <fgetc+0x72>
    2774:	26 ff       	sbrs	r18, 6
    2776:	0a c0       	rjmp	.+20     	; 0x278c <fgetc+0x24>
    2778:	2f 7b       	andi	r18, 0xBF	; 191
    277a:	2b 83       	std	Y+3, r18	; 0x03
    277c:	8e 81       	ldd	r24, Y+6	; 0x06
    277e:	9f 81       	ldd	r25, Y+7	; 0x07
    2780:	01 96       	adiw	r24, 0x01	; 1
    2782:	9f 83       	std	Y+7, r25	; 0x07
    2784:	8e 83       	std	Y+6, r24	; 0x06
    2786:	8a 81       	ldd	r24, Y+2	; 0x02
    2788:	90 e0       	ldi	r25, 0x00	; 0
    278a:	29 c0       	rjmp	.+82     	; 0x27de <fgetc+0x76>
    278c:	22 ff       	sbrs	r18, 2
    278e:	0f c0       	rjmp	.+30     	; 0x27ae <fgetc+0x46>
    2790:	e8 81       	ld	r30, Y
    2792:	f9 81       	ldd	r31, Y+1	; 0x01
    2794:	80 81       	ld	r24, Z
    2796:	08 2e       	mov	r0, r24
    2798:	00 0c       	add	r0, r0
    279a:	99 0b       	sbc	r25, r25
    279c:	00 97       	sbiw	r24, 0x00	; 0
    279e:	19 f4       	brne	.+6      	; 0x27a6 <fgetc+0x3e>
    27a0:	20 62       	ori	r18, 0x20	; 32
    27a2:	2b 83       	std	Y+3, r18	; 0x03
    27a4:	1a c0       	rjmp	.+52     	; 0x27da <fgetc+0x72>
    27a6:	31 96       	adiw	r30, 0x01	; 1
    27a8:	f9 83       	std	Y+1, r31	; 0x01
    27aa:	e8 83       	st	Y, r30
    27ac:	0e c0       	rjmp	.+28     	; 0x27ca <fgetc+0x62>
    27ae:	ea 85       	ldd	r30, Y+10	; 0x0a
    27b0:	fb 85       	ldd	r31, Y+11	; 0x0b
    27b2:	09 95       	icall
    27b4:	97 ff       	sbrs	r25, 7
    27b6:	09 c0       	rjmp	.+18     	; 0x27ca <fgetc+0x62>
    27b8:	2b 81       	ldd	r18, Y+3	; 0x03
    27ba:	01 96       	adiw	r24, 0x01	; 1
    27bc:	11 f0       	breq	.+4      	; 0x27c2 <fgetc+0x5a>
    27be:	80 e2       	ldi	r24, 0x20	; 32
    27c0:	01 c0       	rjmp	.+2      	; 0x27c4 <fgetc+0x5c>
    27c2:	80 e1       	ldi	r24, 0x10	; 16
    27c4:	82 2b       	or	r24, r18
    27c6:	8b 83       	std	Y+3, r24	; 0x03
    27c8:	08 c0       	rjmp	.+16     	; 0x27da <fgetc+0x72>
    27ca:	2e 81       	ldd	r18, Y+6	; 0x06
    27cc:	3f 81       	ldd	r19, Y+7	; 0x07
    27ce:	2f 5f       	subi	r18, 0xFF	; 255
    27d0:	3f 4f       	sbci	r19, 0xFF	; 255
    27d2:	3f 83       	std	Y+7, r19	; 0x07
    27d4:	2e 83       	std	Y+6, r18	; 0x06
    27d6:	99 27       	eor	r25, r25
    27d8:	02 c0       	rjmp	.+4      	; 0x27de <fgetc+0x76>
    27da:	8f ef       	ldi	r24, 0xFF	; 255
    27dc:	9f ef       	ldi	r25, 0xFF	; 255
    27de:	df 91       	pop	r29
    27e0:	cf 91       	pop	r28
    27e2:	08 95       	ret

000027e4 <fputc>:
    27e4:	0f 93       	push	r16
    27e6:	1f 93       	push	r17
    27e8:	cf 93       	push	r28
    27ea:	df 93       	push	r29
    27ec:	fb 01       	movw	r30, r22
    27ee:	23 81       	ldd	r18, Z+3	; 0x03
    27f0:	21 fd       	sbrc	r18, 1
    27f2:	03 c0       	rjmp	.+6      	; 0x27fa <fputc+0x16>
    27f4:	8f ef       	ldi	r24, 0xFF	; 255
    27f6:	9f ef       	ldi	r25, 0xFF	; 255
    27f8:	2c c0       	rjmp	.+88     	; 0x2852 <fputc+0x6e>
    27fa:	22 ff       	sbrs	r18, 2
    27fc:	16 c0       	rjmp	.+44     	; 0x282a <fputc+0x46>
    27fe:	46 81       	ldd	r20, Z+6	; 0x06
    2800:	57 81       	ldd	r21, Z+7	; 0x07
    2802:	24 81       	ldd	r18, Z+4	; 0x04
    2804:	35 81       	ldd	r19, Z+5	; 0x05
    2806:	42 17       	cp	r20, r18
    2808:	53 07       	cpc	r21, r19
    280a:	44 f4       	brge	.+16     	; 0x281c <fputc+0x38>
    280c:	a0 81       	ld	r26, Z
    280e:	b1 81       	ldd	r27, Z+1	; 0x01
    2810:	9d 01       	movw	r18, r26
    2812:	2f 5f       	subi	r18, 0xFF	; 255
    2814:	3f 4f       	sbci	r19, 0xFF	; 255
    2816:	31 83       	std	Z+1, r19	; 0x01
    2818:	20 83       	st	Z, r18
    281a:	8c 93       	st	X, r24
    281c:	26 81       	ldd	r18, Z+6	; 0x06
    281e:	37 81       	ldd	r19, Z+7	; 0x07
    2820:	2f 5f       	subi	r18, 0xFF	; 255
    2822:	3f 4f       	sbci	r19, 0xFF	; 255
    2824:	37 83       	std	Z+7, r19	; 0x07
    2826:	26 83       	std	Z+6, r18	; 0x06
    2828:	14 c0       	rjmp	.+40     	; 0x2852 <fputc+0x6e>
    282a:	8b 01       	movw	r16, r22
    282c:	ec 01       	movw	r28, r24
    282e:	fb 01       	movw	r30, r22
    2830:	00 84       	ldd	r0, Z+8	; 0x08
    2832:	f1 85       	ldd	r31, Z+9	; 0x09
    2834:	e0 2d       	mov	r30, r0
    2836:	09 95       	icall
    2838:	89 2b       	or	r24, r25
    283a:	e1 f6       	brne	.-72     	; 0x27f4 <fputc+0x10>
    283c:	d8 01       	movw	r26, r16
    283e:	16 96       	adiw	r26, 0x06	; 6
    2840:	8d 91       	ld	r24, X+
    2842:	9c 91       	ld	r25, X
    2844:	17 97       	sbiw	r26, 0x07	; 7
    2846:	01 96       	adiw	r24, 0x01	; 1
    2848:	17 96       	adiw	r26, 0x07	; 7
    284a:	9c 93       	st	X, r25
    284c:	8e 93       	st	-X, r24
    284e:	16 97       	sbiw	r26, 0x06	; 6
    2850:	ce 01       	movw	r24, r28
    2852:	df 91       	pop	r29
    2854:	cf 91       	pop	r28
    2856:	1f 91       	pop	r17
    2858:	0f 91       	pop	r16
    285a:	08 95       	ret

0000285c <printf>:
    285c:	cf 93       	push	r28
    285e:	df 93       	push	r29
    2860:	cd b7       	in	r28, 0x3d	; 61
    2862:	de b7       	in	r29, 0x3e	; 62
    2864:	ae 01       	movw	r20, r28
    2866:	4b 5f       	subi	r20, 0xFB	; 251
    2868:	5f 4f       	sbci	r21, 0xFF	; 255
    286a:	fa 01       	movw	r30, r20
    286c:	61 91       	ld	r22, Z+
    286e:	71 91       	ld	r23, Z+
    2870:	af 01       	movw	r20, r30
    2872:	80 91 38 09 	lds	r24, 0x0938	; 0x800938 <__iob+0x2>
    2876:	90 91 39 09 	lds	r25, 0x0939	; 0x800939 <__iob+0x3>
    287a:	0e 94 bc 0a 	call	0x1578	; 0x1578 <vfprintf>
    287e:	df 91       	pop	r29
    2880:	cf 91       	pop	r28
    2882:	08 95       	ret

00002884 <puts>:
    2884:	0f 93       	push	r16
    2886:	1f 93       	push	r17
    2888:	cf 93       	push	r28
    288a:	df 93       	push	r29
    288c:	e0 91 38 09 	lds	r30, 0x0938	; 0x800938 <__iob+0x2>
    2890:	f0 91 39 09 	lds	r31, 0x0939	; 0x800939 <__iob+0x3>
    2894:	23 81       	ldd	r18, Z+3	; 0x03
    2896:	21 ff       	sbrs	r18, 1
    2898:	1b c0       	rjmp	.+54     	; 0x28d0 <puts+0x4c>
    289a:	8c 01       	movw	r16, r24
    289c:	d0 e0       	ldi	r29, 0x00	; 0
    289e:	c0 e0       	ldi	r28, 0x00	; 0
    28a0:	f8 01       	movw	r30, r16
    28a2:	81 91       	ld	r24, Z+
    28a4:	8f 01       	movw	r16, r30
    28a6:	60 91 38 09 	lds	r22, 0x0938	; 0x800938 <__iob+0x2>
    28aa:	70 91 39 09 	lds	r23, 0x0939	; 0x800939 <__iob+0x3>
    28ae:	db 01       	movw	r26, r22
    28b0:	18 96       	adiw	r26, 0x08	; 8
    28b2:	ed 91       	ld	r30, X+
    28b4:	fc 91       	ld	r31, X
    28b6:	19 97       	sbiw	r26, 0x09	; 9
    28b8:	88 23       	and	r24, r24
    28ba:	31 f0       	breq	.+12     	; 0x28c8 <puts+0x44>
    28bc:	09 95       	icall
    28be:	89 2b       	or	r24, r25
    28c0:	79 f3       	breq	.-34     	; 0x28a0 <puts+0x1c>
    28c2:	df ef       	ldi	r29, 0xFF	; 255
    28c4:	cf ef       	ldi	r28, 0xFF	; 255
    28c6:	ec cf       	rjmp	.-40     	; 0x28a0 <puts+0x1c>
    28c8:	8a e0       	ldi	r24, 0x0A	; 10
    28ca:	09 95       	icall
    28cc:	89 2b       	or	r24, r25
    28ce:	19 f0       	breq	.+6      	; 0x28d6 <puts+0x52>
    28d0:	8f ef       	ldi	r24, 0xFF	; 255
    28d2:	9f ef       	ldi	r25, 0xFF	; 255
    28d4:	02 c0       	rjmp	.+4      	; 0x28da <puts+0x56>
    28d6:	8d 2f       	mov	r24, r29
    28d8:	9c 2f       	mov	r25, r28
    28da:	df 91       	pop	r29
    28dc:	cf 91       	pop	r28
    28de:	1f 91       	pop	r17
    28e0:	0f 91       	pop	r16
    28e2:	08 95       	ret

000028e4 <ungetc>:
    28e4:	fb 01       	movw	r30, r22
    28e6:	23 81       	ldd	r18, Z+3	; 0x03
    28e8:	20 ff       	sbrs	r18, 0
    28ea:	12 c0       	rjmp	.+36     	; 0x2910 <ungetc+0x2c>
    28ec:	26 fd       	sbrc	r18, 6
    28ee:	10 c0       	rjmp	.+32     	; 0x2910 <ungetc+0x2c>
    28f0:	8f 3f       	cpi	r24, 0xFF	; 255
    28f2:	3f ef       	ldi	r19, 0xFF	; 255
    28f4:	93 07       	cpc	r25, r19
    28f6:	61 f0       	breq	.+24     	; 0x2910 <ungetc+0x2c>
    28f8:	82 83       	std	Z+2, r24	; 0x02
    28fa:	2f 7d       	andi	r18, 0xDF	; 223
    28fc:	20 64       	ori	r18, 0x40	; 64
    28fe:	23 83       	std	Z+3, r18	; 0x03
    2900:	26 81       	ldd	r18, Z+6	; 0x06
    2902:	37 81       	ldd	r19, Z+7	; 0x07
    2904:	21 50       	subi	r18, 0x01	; 1
    2906:	31 09       	sbc	r19, r1
    2908:	37 83       	std	Z+7, r19	; 0x07
    290a:	26 83       	std	Z+6, r18	; 0x06
    290c:	99 27       	eor	r25, r25
    290e:	08 95       	ret
    2910:	8f ef       	ldi	r24, 0xFF	; 255
    2912:	9f ef       	ldi	r25, 0xFF	; 255
    2914:	08 95       	ret

00002916 <__ultoa_invert>:
    2916:	fa 01       	movw	r30, r20
    2918:	aa 27       	eor	r26, r26
    291a:	28 30       	cpi	r18, 0x08	; 8
    291c:	51 f1       	breq	.+84     	; 0x2972 <__ultoa_invert+0x5c>
    291e:	20 31       	cpi	r18, 0x10	; 16
    2920:	81 f1       	breq	.+96     	; 0x2982 <__ultoa_invert+0x6c>
    2922:	e8 94       	clt
    2924:	6f 93       	push	r22
    2926:	6e 7f       	andi	r22, 0xFE	; 254
    2928:	6e 5f       	subi	r22, 0xFE	; 254
    292a:	7f 4f       	sbci	r23, 0xFF	; 255
    292c:	8f 4f       	sbci	r24, 0xFF	; 255
    292e:	9f 4f       	sbci	r25, 0xFF	; 255
    2930:	af 4f       	sbci	r26, 0xFF	; 255
    2932:	b1 e0       	ldi	r27, 0x01	; 1
    2934:	3e d0       	rcall	.+124    	; 0x29b2 <__ultoa_invert+0x9c>
    2936:	b4 e0       	ldi	r27, 0x04	; 4
    2938:	3c d0       	rcall	.+120    	; 0x29b2 <__ultoa_invert+0x9c>
    293a:	67 0f       	add	r22, r23
    293c:	78 1f       	adc	r23, r24
    293e:	89 1f       	adc	r24, r25
    2940:	9a 1f       	adc	r25, r26
    2942:	a1 1d       	adc	r26, r1
    2944:	68 0f       	add	r22, r24
    2946:	79 1f       	adc	r23, r25
    2948:	8a 1f       	adc	r24, r26
    294a:	91 1d       	adc	r25, r1
    294c:	a1 1d       	adc	r26, r1
    294e:	6a 0f       	add	r22, r26
    2950:	71 1d       	adc	r23, r1
    2952:	81 1d       	adc	r24, r1
    2954:	91 1d       	adc	r25, r1
    2956:	a1 1d       	adc	r26, r1
    2958:	20 d0       	rcall	.+64     	; 0x299a <__ultoa_invert+0x84>
    295a:	09 f4       	brne	.+2      	; 0x295e <__ultoa_invert+0x48>
    295c:	68 94       	set
    295e:	3f 91       	pop	r19
    2960:	2a e0       	ldi	r18, 0x0A	; 10
    2962:	26 9f       	mul	r18, r22
    2964:	11 24       	eor	r1, r1
    2966:	30 19       	sub	r19, r0
    2968:	30 5d       	subi	r19, 0xD0	; 208
    296a:	31 93       	st	Z+, r19
    296c:	de f6       	brtc	.-74     	; 0x2924 <__ultoa_invert+0xe>
    296e:	cf 01       	movw	r24, r30
    2970:	08 95       	ret
    2972:	46 2f       	mov	r20, r22
    2974:	47 70       	andi	r20, 0x07	; 7
    2976:	40 5d       	subi	r20, 0xD0	; 208
    2978:	41 93       	st	Z+, r20
    297a:	b3 e0       	ldi	r27, 0x03	; 3
    297c:	0f d0       	rcall	.+30     	; 0x299c <__ultoa_invert+0x86>
    297e:	c9 f7       	brne	.-14     	; 0x2972 <__ultoa_invert+0x5c>
    2980:	f6 cf       	rjmp	.-20     	; 0x296e <__ultoa_invert+0x58>
    2982:	46 2f       	mov	r20, r22
    2984:	4f 70       	andi	r20, 0x0F	; 15
    2986:	40 5d       	subi	r20, 0xD0	; 208
    2988:	4a 33       	cpi	r20, 0x3A	; 58
    298a:	18 f0       	brcs	.+6      	; 0x2992 <__ultoa_invert+0x7c>
    298c:	49 5d       	subi	r20, 0xD9	; 217
    298e:	31 fd       	sbrc	r19, 1
    2990:	40 52       	subi	r20, 0x20	; 32
    2992:	41 93       	st	Z+, r20
    2994:	02 d0       	rcall	.+4      	; 0x299a <__ultoa_invert+0x84>
    2996:	a9 f7       	brne	.-22     	; 0x2982 <__ultoa_invert+0x6c>
    2998:	ea cf       	rjmp	.-44     	; 0x296e <__ultoa_invert+0x58>
    299a:	b4 e0       	ldi	r27, 0x04	; 4
    299c:	a6 95       	lsr	r26
    299e:	97 95       	ror	r25
    29a0:	87 95       	ror	r24
    29a2:	77 95       	ror	r23
    29a4:	67 95       	ror	r22
    29a6:	ba 95       	dec	r27
    29a8:	c9 f7       	brne	.-14     	; 0x299c <__ultoa_invert+0x86>
    29aa:	00 97       	sbiw	r24, 0x00	; 0
    29ac:	61 05       	cpc	r22, r1
    29ae:	71 05       	cpc	r23, r1
    29b0:	08 95       	ret
    29b2:	9b 01       	movw	r18, r22
    29b4:	ac 01       	movw	r20, r24
    29b6:	0a 2e       	mov	r0, r26
    29b8:	06 94       	lsr	r0
    29ba:	57 95       	ror	r21
    29bc:	47 95       	ror	r20
    29be:	37 95       	ror	r19
    29c0:	27 95       	ror	r18
    29c2:	ba 95       	dec	r27
    29c4:	c9 f7       	brne	.-14     	; 0x29b8 <__ultoa_invert+0xa2>
    29c6:	62 0f       	add	r22, r18
    29c8:	73 1f       	adc	r23, r19
    29ca:	84 1f       	adc	r24, r20
    29cc:	95 1f       	adc	r25, r21
    29ce:	a0 1d       	adc	r26, r0
    29d0:	08 95       	ret

000029d2 <__ctype_isfalse>:
    29d2:	99 27       	eor	r25, r25
    29d4:	88 27       	eor	r24, r24

000029d6 <__ctype_istrue>:
    29d6:	08 95       	ret

000029d8 <_exit>:
    29d8:	f8 94       	cli

000029da <__stop_program>:
    29da:	ff cf       	rjmp	.-2      	; 0x29da <__stop_program>
